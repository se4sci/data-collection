hash,time,message,keyword_buggy,human_buggy,fastread_buggy
e918bbf,2007-11-23 18:26:42,ebuilt 0.6.1,0,,0
c3630ee,2007-11-28 18:47:06,can now write a file in parallel -- the format is identical as existing files  but the node/element ordering is different,0,,0
609980d,2007-11-28 18:47:55,updated compatible to new doxygen,0,,0
f6fc13b,2007-11-29 01:07:31,Removed redundant #ifdefs,0,,0
86d9814,2007-11-29 19:52:44,Add typedefs to fix compilation without MPI,1,,1
b246152,2007-11-29 21:10:45,Comment out code unavailable with --disable-mpi,0,,0
e05286c,2007-11-29 21:18:31,Use Parallel::sum for MPI_Allreduce(MPI_SUM),0,,0
b853e96,2007-11-29 22:15:42,Fix Parallel::verify()  add --disable-mpi null implementations (or errors as appropriate) of send/recv functions,1,,1
f3f099a,2007-11-29 22:29:50,Fixes for --disable-mpi  Using Parallel:: functions where convenient,1,,1
09dd179,2007-11-29 22:30:58,Fix for Parallel::verify use Fixes for --disable-mpi,1,,1
0a02bfd,2007-11-30 00:10:43,robustness -- do not dereference empty vectors  which can happen on all but root_id during Parallel::gather(),0,,0
eaf9a91,2007-11-30 01:56:49,partition-independent parallel system write now works properly -- still need to test read.,0,,0
bcf2c33,2007-11-30 02:00:57,assert the obvious when performing send_receive without MPI,0,,0
1a4b044,2007-11-30 04:11:22,Build with newer autoconf/autoheader/etc,0,,0
57ba02c,2007-11-30 04:12:48,Added oprof mode,0,,0
4dfc7cf,2007-11-30 14:09:07,trade a single allreduce for many broadcasts,0,,0
51a31db,2007-11-30 14:38:51,do not dereference empty objects,0,,0
ae0bf1d,2007-11-30 15:08:16,Avoid compiler warning with --disable-mpi,0,,0
b289d71,2007-11-30 19:17:52,Avoid compiler warnings without --enable-complex,0,,0
6c8e1d4,2007-11-30 19:49:05,do not dereference empty objects,0,,0
e3ceb2f,2007-11-30 19:49:38,cleanup,0,,0
d335806,2007-11-30 19:58:27,assert the obvious,0,,0
1314385,2007-11-30 21:12:20,broadcast a string,0,,0
5e9515a,2007-11-30 21:13:05,log the systems update,0,,0
e1c50f8,2007-11-30 21:14:23,can now read and write restart files in parallel.  the ordering is partition-agnostic so as to enable N->M restarting,0,,0
512dca5,2007-11-30 21:26:01,changed default buffer size to 256000,0,,0
6bb3117,2007-11-30 21:36:01,use LIBMESHRUN to run ex2,0,,0
a60c743,2007-11-30 21:39:26,make ex2 more complicated to test coverage of multiple systems with multiple variable types,0,,0
45e3e21,2007-12-01 20:26:13,libMultiScale & OctMesh,0,,0
50c8547,2007-12-02 17:57:32,more package descriptions,0,,0
2227cdc,2007-12-02 18:17:52,more package descriptions,0,,0
871af32,2007-12-02 18:18:34,more package descriptions,0,,0
507abfe,2007-12-02 20:27:59,changed LibMesh to libMesh  allow for additional information in developer profile section,0,,0
dbbd3fa,2007-12-02 21:19:23,bio preprint,0,,0
2246284,2007-12-03 16:10:14,can now read/write serialized or parallel restart files,0,,0
20d09fb,2007-12-03 17:52:20,move current xdr stuff to a legacy format to make room for new parallel mesh io,0,,0
af69e62,2007-12-03 18:19:50,cleaner test syntax,0,,0
a8b12df,2007-12-03 18:21:08,placeholder for new XdrIO class,0,,0
bcc3ab5,2007-12-03 19:52:39,working on parallel mesh io,0,,0
5c780c3,2007-12-03 21:20:16,Don't let processors 1-N quit Mesh::write until processor 0 no longer needs them for MeshTools::n_levels.,0,,0
720779a,2007-12-03 22:10:24,allow for an optional line-break counter to increase readability,0,,0
495315e,2007-12-03 22:10:59,serialzed output of distributed nodes now works,0,,0
d23b608,2007-12-03 22:22:19,Use proper type (signed int) for MPI tags,0,,0
dd0477f,2007-12-03 22:29:50,Use petscconf PACKAGES_LIBS where available,0,,0
a669c09,2007-12-04 21:04:15,Return an accurate count of nonlinear iterations  not just the final iteration number,0,,0
b5313e3,2007-12-05 03:00:13,added a local_level_element_iterator(),0,,0
0ce5bf0,2007-12-05 03:02:23,make the MeshTools::n_elem() operator take constant element iterators,0,,0
9817832,2007-12-05 20:53:26,parallel xdr mesh output pretty much works  needs bc support  testing.  disabled by default,0,,0
2e26123,2007-12-06 16:20:46,change the solver to use a MeshBase  consistent with the EquationSystems,0,,0
2b80e9d,2007-12-06 19:36:51,created a static array mapping element type to the number of nodes in an element.  this is useful for reading in mesh files or when communicating elements as it allows you to properly size arrays without creating an Elem object,0,,0
29590a8,2007-12-06 20:36:07,Use INVALID_ELEM rather than a magic number for the size of an array indexed by ElemType,0,,0
75a448d,2007-12-06 22:10:31,Dependency updates,0,,0
6011f29,2007-12-06 22:36:17,parallel read of nodes is OK  working on elements,0,,0
f51f93c,2007-12-07 14:19:45,when adding a child assert that the child knows about its parent,0,,0
acf04dd,2007-12-07 14:20:36,testing parallel read/write,0,,0
7725f42,2007-12-07 22:39:30,parallel bc write started,0,,0
1825b4c,2007-12-08 20:11:12,added data_stream<int>,0,,0
468f55f,2007-12-08 20:14:31,do not implicitly add nodes to boundary_info,0,,0
bf546ad,2007-12-09 02:23:50,Added missing implementation for --disable-mpi,0,,0
7a45d05,2007-12-10 14:27:46,parallel XDR mesh I/O works  performing additional testing,0,,0
d2fc64b,2007-12-10 18:24:20,added MeshTools::n_p_levels().  Use this to determine whether or not we will write element p levels to file.,0,,0
797d917,2007-12-10 18:28:43,made Partitioner::set_node_processor_ids() a public & static member.  This allows a partitioning to be read from file and the node processor ids can get fixed without building a partitioner.,1,,0
94363b8,2007-12-10 18:29:48,write p levels if needed,0,,0
6e42522,2007-12-12 14:47:47,updated documentation,0,,0
bc5d064,2007-12-12 14:56:55,removed stray -lz,0,,0
6b82007,2007-12-12 17:20:39,allow MeshBase::add_point() to add points in non-sequential order,0,,0
f81feaf,2007-12-12 17:35:57,moved the parallel test,0,,0
455cdba,2007-12-12 20:20:03,test send  receive  and friends,0,,0
e8a3728,2007-12-12 20:22:45,replaced MPI_Wait and MPI_Waitall calls with Parallel::wait wrappers,0,,0
a5f29ad,2007-12-12 22:04:11,placeholder for quadrature tests,0,,0
04ea158,2007-12-17 03:23:40,Added set_data methods,0,,0
f8bbe71,2007-12-19 01:11:40,Reposition elem_subresiduals during postprocessing for code like John's that uses them.,0,,0
ba8bfeb,2008-01-14 21:05:25,assert() to catch cases of non-parents who get put into parent error vector by mistake,1,,0
4774bc5,2008-01-14 21:06:02,"Restore ""non-coarsenable elements flagged with -1"" behavior to create_parent_error_vector implementation",0,,0
38e15d9,2008-01-15 16:33:47,The previous histogram function was just ... wrong ... in more ways than one.  Rewrote my initial bad code to make it actually work.  Also added the plot_histogram() function which allows you to write a very small Matlab/Octave script and quickly plot the histogram as a bar graph.,1,,0
4af3e65,2008-01-15 22:02:22,Fixed a slight bug that sometimes prevented the last entry from being binned.  Generate the histograms in terms of Real's regardless of the datatype of the vector itself.  Also  the behavior is now correct for ErrorVectors too.,1,,1
7ac00e2,2008-01-16 20:44:48,Ignore oprof output,0,,0
ea13090,2008-01-16 20:46:43,Ignore oprof output,0,,0
ba90b0f,2008-01-16 20:47:21,Resize and zero elem_residual before postprocessing,0,,0
c4a1258,2008-01-16 21:06:00,Fixes for create_parent_error_vector in parallel,1,,1
19d78da,2008-01-23 15:38:18,explicitly clear and close the objects,0,,0
6827afd,2008-01-23 20:21:47,Use libmesh_norm(x) instead of x*x/std::norm(x) more widely Make NumericVector<T>::dot(v) have return type T Attempt to fix DistributedVector<std::complex<T> >::min/max,1,,0
65b3f40,2008-01-23 20:25:39,Better fix for real vs complex DistributedVector::min/max,1,,1
e489f58,2008-01-23 20:30:28,Fix cut-n-paste error,1,,1
6b29e49,2008-01-24 00:39:29,More fixes  refactoring for --enable-complex,1,,1
cfdc428,2008-01-24 07:15:30,Fixes for --enable-complex,1,,1
9cf8e4f,2008-01-24 20:42:29,Fixes for std::complex<> use,1,,1
f2fb4f1,2008-01-24 20:45:18,Utility class to compare two types and choose an appropriate return type for operations combining them.,0,,0
08464c6,2008-01-24 20:47:31,Use Real instead of double where appropriate,0,,0
8cfbb85,2008-01-24 20:50:16,Use CompareTypes<T T2> to allow TypeVector<T> objects to be operated on with T2-based objects,0,,0
90d9e49,2008-01-24 21:17:22,Move enable_if  ScalarTraits to compare_types.h Further templatize copy constructor  assign(),0,,0
e4d491b,2008-01-24 21:24:16,Further templatize add(),0,,0
9a5f92a,2008-01-24 21:59:20,More templatization  more CompareTypes based return values,0,,0
69c485b,2008-01-24 22:08:21,Fixed misleading comment,1,,0
79a0d69,2008-01-24 22:12:21,Fixed misleading/typoed comment,1,,0
bfafba9,2008-01-24 23:13:09,Fixed size_sq comments to be correct for complex numbers,1,,1
0029bcc,2008-01-25 14:58:00,Add templated self friend classes so that Object<T1> can access Object<T2>'s protected constructor,0,,0
ebfddb8,2008-01-25 15:00:22,"Fix norm calculation correctness for complex numbers  use size_sq and new CompareType operators to make ""#ifdef USE_COMPLEX_"" special cases unnecessary",1,,1
4426a10,2008-01-27 17:02:18,support for std::complex<double> in data_stream.  Still need to figure out long double,0,,0
ff59350,2008-01-28 21:26:46,David Knezevic's patch to fix an error with SerialMesh when reading files with lower dimensional boundary info elements,1,,1
b304b13,2008-01-28 22:08:42,testing,0,,0
1a16593,2008-01-28 22:15:46,Restoring ex18  i.e. application=0 as default,0,,0
6261bad,2008-01-28 23:01:18,Move forward declarations to where they're actually needed,0,,0
21e7fee,2008-01-29 23:06:25,Fix bug with active elements  elements in parallel not being properly marked uncoarsenable.,1,,1
0969f74,2008-02-01 23:12:52,Factored out UnsteadySolver class  moved old solution vector from TimeSolver to get it out of SteadySolver class.,0,,0
50e832a,2008-02-03 12:36:28,fixed regression in EquationSystems::read() which tried to read .bz2 files instead of their unzipped ASCII counterpart.,1,,1
5c8d182,2008-02-04 16:46:11,Fixes for --disable-mpi,1,,1
c10b999,2008-02-04 19:32:17,Updated dependencies for UnsteadySolver,0,,0
8680235,2008-02-04 21:42:58,Minor fix in cut-n-pasted comment,1,,0
25d4205,2008-02-04 21:43:22,Minor fix in cut-n-pasted comment,1,,0
1b39025,2008-02-04 22:22:01,New NormType for compute_norm()  du()  etc.,0,,0
fc18c57,2008-02-05 20:08:18,Support Intel icc v10.1 on Itanium,0,,0
5185452,2008-02-05 20:31:33,Added SystemNorm class  switched appropriate APIs to use it,0,,0
3e2103a,2008-02-05 23:15:13,Fixes for du() API change,1,,1
039d5bf,2008-02-05 23:18:15,Updated dependencies for enum_norm_type.h and system_norm.h,0,,0
2ea1ee9,2008-02-06 01:39:34,preliminary interface to the TBB template library for multithreading support.  MeshTools::total_weight() contains an example of a threaded reduction operation.,0,,0
fb0791e,2008-02-06 02:09:52,Hand off du norm calculations to System::calculate_norm(),0,,0
625eadc,2008-02-06 03:24:43,Minor bugfix,0,,1
78e7357,2008-02-06 18:49:06,threaded part of the find global indices method,0,,0
5b82321,2008-02-06 20:40:40,Override mass_residual to provide a better (Re-independent) nondimensionalization of time,0,,0
b8ffeb5,2008-02-06 21:54:52,more threaded algorithms,0,,0
9cbfb5a,2008-02-06 22:00:11,removed stray here,0,,0
1aebdf4,2008-02-06 23:29:10,Fix reduce_deltat_on_diffsolver_failure bug from UnsteadySolver refactoring,1,,1
7f2cf36,2008-02-06 23:33:03,Updated .depend for new threading,0,,0
bf2bb7c,2008-02-06 23:33:40,Make sure dependency list is sorted for consistency  svn diff .depend can get ugly otherwise,0,,0
2c8b553,2008-02-06 23:51:25,Compatibility updates for old code,0,,0
1fdcc84,2008-02-07 20:02:26,threaded constraint computation,0,,0
d8db651,2008-02-07 21:41:59,added atomic reference counting,0,,0
ecd4376,2008-02-07 22:04:33,MeshTools::weight() fixed for parallel meshes,1,,1
a7b0910,2008-02-07 22:52:30,include elem.h,0,,0
cb28af3,2008-02-07 23:24:13,Using LegacyXdrIO,0,,0
35e43bd,2008-02-07 23:47:09,"Build src/apps programs by default during ""make""",0,,0
c3510d2,2008-02-08 15:20:42,Switch to LegacyXdrIO,0,,0
8a35332,2008-02-08 21:49:46,fixed total_weight for non-parallel meshes.  This is needed to work right on processor 0 to broadcast the mesh,1,,1
77dfa64,2008-02-08 21:50:46,the patch recovery error estimator is now multithreaded,1,,1
ed0165e,2008-02-08 22:07:12,Fix for MeshTools::total_weight() on ParallelMesh,1,,1
0a6b707,2008-02-08 22:19:53,Typo fix,1,,0
aa45a51,2008-02-10 13:12:52,allow perflog to be disabled at runtime,0,,0
cf25fd2,2008-02-10 13:13:46,multithreaded vector and solution projection,0,,0
6e32b94,2008-02-10 21:46:47,Typo fix,1,,0
1ce30da,2008-02-11 00:28:15,make perflog compatible with multithreading,0,,0
e80a0c8,2008-02-12 23:19:07,"Added ""parameterize.pl""  a script for turning lines like",0,,0
0a7043e,2008-02-14 00:10:44,Rename from NormType to FEMNormType to avoid name conflicts with PETSc,0,,0
7c78767,2008-02-14 20:23:15,Compatibility between FEXYZ and ENABLE_SECOND_DERIVATIVES  second derivatives for 1D XYZ shapes.,0,,0
2c69b5f,2008-02-15 22:56:13,Second derivative calculation support  arbitrary polynomial degree for discontinuous elements,0,,0
33b25da,2008-02-16 03:34:30,Fix FE<MONOMIAL> support for p > 4,1,,1
771df5c,2008-02-17 00:30:00,multithreaded sparsity pattern generation,0,,0
dd3f10f,2008-02-17 00:31:13,default to 1 thread  make the user manually specify the number of threads to avoid mpi/thread contention,0,,0
2e27de6,2008-02-17 00:31:53,default to 1 thread  make the user manually specify the number of threads to avoid mpi/thread contention,0,,0
adafefa,2008-02-17 20:41:09,preallocation where possible,0,,0
2fdbc68,2008-02-18 23:35:25,properly read legacy restart files without command-line hacks  warn for reading potentially incompatible restart files,0,,0
d158f26,2008-02-18 23:36:49,updated XdrIO to properly handle Xdr  ASCII  gzipped  or bzip2 files transparently,0,,0
5819a94,2008-02-18 23:37:13,mention TBB,0,,0
755ebee,2008-02-19 13:48:02,compatiblity fix with gcc 3.2  3.4 and Intel 7.1  8.0  9.0  9.1,1,,1
7d2cc01,2008-02-19 13:57:39,prevent double-freeing for the case when the user explicitly calls close() and then the destructor does too.,0,,0
88b352e,2008-02-19 13:58:03,Intel 10.x,0,,0
7852b41,2008-02-19 21:45:04,SunStudio 12 compatability,0,,0
970245d,2008-02-19 22:01:50,reverted here() and friends -- the -library=stlport4 option to CC uses the STLPort implementation which has no name clashes,0,,0
c491148,2008-02-19 23:00:39,reorder the partition flag position,0,,0
77ea9bd,2008-02-20 14:19:41,do not pollute global namespace  use the new local_level_elements iterators,0,,0
536f495,2008-02-20 16:36:18,make new xdr file format the default,0,,0
513bd8b,2008-02-20 17:44:01,only processor 0 should open the file and read the header.  this caused a race when the underlying file was .bz2 and all processors attempted to uzip/unzip it.,0,,0
313fc16,2008-02-20 17:44:26,do not partition into more pieces than we have active elements,0,,0
1074dd0,2008-02-20 18:30:12,do not default to new xdr file just yet,0,,0
86ef9eb,2008-02-21 19:30:40,Fixes for high p 3D monomial shape function calculations,1,,1
2953b7f,2008-02-22 10:40:42,allow the user to get the global indexing without assigning it  do not forget unpartitioned nodes when creating the bounding box,0,,0
1cddb9f,2008-02-22 10:41:13,allow the user to get the global indexing without assigning it  do not forget unpartitioned nodes when creating the bounding box,0,,0
b40ceed,2008-02-22 22:11:28,Added swap() method to PetscMatrix/Vector,0,,0
e15c566,2008-02-22 22:53:13,Adding PetscDiffSolver class (which still has runtime bugs),1,,0
159dc59,2008-02-25 01:55:04,Fix for --disable-mpi,1,,1
016505a,2008-02-25 19:23:21,added unpartitioned element iterators,0,,0
87c8d27,2008-02-25 19:23:42,added unpartitioned element iterators,0,,0
349e462,2008-02-25 19:24:09,added unpartitioned element iterators,0,,0
fea4a79,2008-02-25 19:26:31,make it clear that the begin  end element iterators are unchanged when calling n_elem,0,,0
7dba52d,2008-02-25 19:27:31,handle the degenerate case where for some reason we try to sort a single item in parallel,0,,0
ac14725,2008-02-25 22:43:27,Close assembly output before returning it to PETSc,0,,0
ffff351,2008-02-26 14:25:46,Typo fix in USE_COMPLEX_NUMBERS case,1,,0
32741b4,2008-02-26 15:52:49,Update to new du() function signature,0,,0
6f4e09e,2008-02-27 00:04:56,Don't include assembly time in PetscDiffSolver total,0,,0
2f9c8c7,2008-02-27 00:08:12,Factor out line search from NewtonSolver  add brent_line_search option,0,,0
2b47b51,2008-02-27 01:25:20,Make Brent's method the default,0,,0
4239c3e,2008-02-27 18:33:21,added Elem::is_remote(),0,,0
8f45c53,2008-02-27 18:39:36,refactored the parmetis partitioner to work on parallel meshes.  The assigning of parents to subdomains needs to be fixed still for the case of parallel meshes.  metis is still the default partitioner when mesh.is_serial()  otherwise parmetis is called.,1,,0
a7bd1a0,2008-02-27 21:36:49,set parent processor ids properly when the mesh is parallelized,0,,0
2283946,2008-02-28 19:51:12,Changes (based on Lorenzo Botti's) to fix bug with side integrations and adaptive p refinement.,1,,1
412995b,2008-02-28 21:45:33,Parallel::alltoall()  beginnings of MeshCommunication::redistribute(),0,,0
acdc0e0,2008-02-28 22:24:57,Parallel::Status class added.  Return status from blocking receives,0,,0
56c25a0,2008-02-29 15:38:56,optimize Parallel::send_receive() for the case when the source and destination are both the local processor.,0,,0
239f3c7,2008-02-29 19:32:17,reverted,0,,0
8f3b4bb,2008-02-29 19:43:06,undo accidental checkin,0,,0
4c5ad8b,2008-02-29 22:37:29,allow isend() and recv() with user-defined types,0,,0
78016e6,2008-02-29 22:37:56,node redistribution (the easy part) works,0,,0
99206a3,2008-03-01 00:24:08,Fix for MPI1 compatibility,1,,1
452b62a,2008-03-01 01:00:46,Added libMesh exception-throwing  changed error() behavior to throw an exception  replaced libMesh::init() and libMesh::close() with a LibMeshInit object to ensure proper MPI_Abort behavior when an exception is uncaught.,1,,0
5a5d373,2008-03-01 01:01:52,Space/tab reformatting  Switched to use LibMeshInit instead of libMesh::init()/::close()  removed unnecessary scoping braces,0,,0
fde1145,2008-03-01 17:36:23,Fix for --disable-mpi,1,,1
9561c69,2008-03-01 20:10:56,Corrected comments,0,,0
b9f0188,2008-03-01 20:21:04,Change from libMesh::init()/close() to LibMeshInit,0,,0
b2e6d8b,2008-03-01 20:21:33,Don't try to use DistributedVector<float>  unless Real == float we don't instantiate it.,0,,0
e94b137,2008-03-01 20:52:41,Switched from libMesh::init()/close() to LibMeshInit,0,,0
3bfec7f,2008-03-01 20:55:08,Run tests by default  don't just build them,0,,0
20e31c9,2008-03-01 21:23:41,Add a suffix to test output file names to make it easy on svn:ignore,0,,0
2de4225,2008-03-01 21:24:20,Ignore output files,0,,0
e8a2758,2008-03-01 21:26:10,Run tests by default,0,,0
803540d,2008-03-01 21:27:40,Ignore run_tests executable  dependency files,0,,0
96ed85a,2008-03-02 00:57:42,fix for --implicit_neighbor_dofs from Lorenzo Botti,1,,1
ae67ffb,2008-03-02 01:21:35,it is not deprecated to read an old file -- this was a hasty checkin,0,,0
5448891,2008-03-02 15:00:32,not deprecated to read an old mesh format,0,,0
5f18692,2008-03-02 15:00:57,fixed overzealous assert,1,,1
15adac7,2008-03-03 15:51:52,fix for parallel solution IO.  the code requires objects be iterated in order of increasing id()  which is not always the case.  now we build an ordering to enforce this.,1,,1
4b353c5,2008-03-03 19:47:22,Allow .bz2 support to be disabled at configure time.,0,,0
e1ef93a,2008-03-03 20:15:48,allow the Status() struct to determine the size of the message received.,0,,0
a8e10ff,2008-03-03 20:16:29,node and element redistribution seem to work  need to add bcs and all will be well.,0,,0
dc47324,2008-03-03 22:06:26,Fix bug from recent commit,1,,1
93e717d,2008-03-03 22:33:43,redistribution should now work  with BC support,0,,0
b91c721,2008-03-03 22:35:38,initial checkin had way too small blocksize,0,,0
6c571f5,2008-03-04 18:38:51,properly count the number of boundary conditions in parallel,0,,0
7461f0c,2008-03-04 18:40:10,transfer node pid in redistribution,0,,0
0ba807d,2008-03-04 18:42:09,optional constructor flag in MeshInput/MeshOutput for parallel formats,0,,0
4062db7,2008-03-04 18:42:39,log the single_partition() member,0,,0
41738b4,2008-03-04 18:57:03,do not assert valid processor id when reading processor id.,0,,0
d12fa41,2008-03-05 14:36:22,cleanup  optimizations,0,,0
75299e8,2008-03-05 14:36:55,log more operations,0,,0
a9ab1ad,2008-03-05 19:01:26,log output,0,,0
15fcdb2,2008-03-05 19:07:17,updated logging to use a stack,0,,0
ea56257,2008-03-05 19:08:02,only disable logging in threaded functions when there is more than one thread,0,,0
6aee180,2008-03-05 19:23:49,Added header for START_LOG/STOP_LOG declarations,0,,0
4f2d445,2008-03-05 19:29:28,fix all library code to use new logging scheme,1,,1
2b7415b,2008-03-05 21:01:22,no need to deprecate old interface -- that was a little agressive,0,,0
ba699e4,2008-03-06 15:38:42,optimized find_global_indices() to only compute hilbert keys once,0,,0
cc057b0,2008-03-10 21:33:45,gcc 4.3.0 fixes,1,,1
159cd58,2008-03-11 16:56:15,fix for --disable-amr,1,,1
de2a894,2008-03-11 19:21:50,do not copy old dof object before dofs are allocated -- this is a pointless waste of memory.,0,,0
233c380,2008-03-19 19:59:05,manually complete the send when there is no MPI,0,,0
90c80c2,2008-03-20 15:45:37,Fix for one more MPI-less Parallel::recv(),1,,1
b388e84,2008-03-20 15:59:22,fix isend()/recv() pairing for --disable-mpi,1,,1
91fbd60,2008-03-24 18:04:48,Replace inconvenient characters with underscores in directory names,0,,0
8290f06,2008-04-02 16:08:37,initial trilinos configuration support,0,,0
42d3be9,2008-04-03 00:04:07,Removed redundant mpi.h include,0,,0
f320183,2008-04-03 01:01:34,Move mpi.h include to make conflicts with stdio.h slightly less likely,0,,0
493c2c3,2008-04-04 16:42:46,Fix GCC configure tests,1,,1
ea8082d,2008-04-04 20:02:22,First commit of completely broken ePetra vectors from Trilinos,0,,0
be18ebf,2008-04-04 20:44:38,Comment (and #if) a bunch of stuff out of epetra_vector so it compiles,0,,0
1e7537a,2008-04-04 20:52:17,Uncomment more of epetra_vector,0,,0
69dd399,2008-04-04 21:12:11,Add configure option to disable exception throwing  Make PGI --no_exceptions command line option depend on it,0,,0
998a72d,2008-04-04 21:52:38,Fix for PGI compilers,1,,1
227fa73,2008-04-04 21:53:23,filled in more of epetra_vector,0,,0
e6e836e,2008-04-04 22:05:41,epetra_vector.h finished,0,,0
f968428,2008-04-05 04:52:26,Don't use Opteron-incompatible icc flags on Opterons,0,,0
a8de118,2008-04-05 04:52:56,Don't use Opteron-incompatible icc flags on Opterons,0,,0
9877ebd,2008-04-06 21:51:53,google search stuff,0,,0
818d99d,2008-04-07 22:20:33,More work on epetra_vector,0,,0
37ca7a8,2008-04-07 23:47:26,More work on epetra_vector,0,,0
ecafe86,2008-04-07 23:49:18,More work on epetra_vector,0,,0
2e86ac4,2008-04-11 17:55:30,mention trilinos  update ref for IJNMF CompNS paper,0,,0
8b9d60e,2008-04-11 23:31:32,Reimplement is_child_on_face  the previous implementation fails with remote_elems around,1,,0
2202c9d,2008-04-11 23:33:22,Fix bugs with ParallelMesh  add more debugging information in case of future bugs,1,,1
2b2b46b,2008-04-12 20:14:02,Enable print_trace() to ostreams other than cerr,0,,0
92dd2f7,2008-04-12 21:58:11,Added ancestor_elements  not_ancestor_elements iterators and supporting machinery,0,,0
e878c9b,2008-04-12 23:40:23,Adding libmesh_assert() for more useful assert()s  implementation of ENABLE_TRACEFILES option,0,,0
ea83818,2008-04-12 23:58:04,Added ./configure --enable-tracefiles option,0,,0
2977c19,2008-04-13 00:21:54,link to the 12-month version of the statistics from the main page,0,,0
4574514,2008-04-13 00:44:19,Bug fix in set_parent_processor_ids  turn off repartitioning until we've definitely got ParallelMesh working for AMR/C without repartitioning.,1,,1
6ef08c9,2008-04-13 02:05:22,Changed error() to libmesh_error(),1,,0
2705a6e,2008-04-13 02:24:40,Switch from assert() to libmesh_assert(),0,,0
f01de14,2008-04-13 16:43:55,Replace assert() statements with libmesh_assert(),0,,0
5593a81,2008-04-13 17:23:02,Try for more robust unordered_map  unordered_set includes,0,,0
fdcc0ef,2008-04-13 17:24:42,Fix for non-tr1 unordered_map typedefs,1,,1
1191999,2008-04-13 22:24:29,Only compile libmesh_assert_valid() tests if we're going to use them,0,,0
05f4cb0,2008-04-13 23:53:47,Move assert_valid_neighbors() to MeshTools  add assert_valid_node_procids(),0,,0
9a7476e,2008-04-14 03:05:20,Fix out of date comment,1,,0
cd2e6a4,2008-04-14 04:15:15,Remove redundant synchronization from serial runpath  weaken potentially-overzealous DEBUG assertions,0,,0
c778761,2008-04-15 12:42:48,Fixed mismatched perflog start/stop,1,,1
7514c3a,2008-04-17 19:12:29,Enable stack trace files when --enable-everything is used,0,,0
7babae7,2008-04-21 18:27:38,johns defensedoc/html/presentations.php,0,,0
b81102b,2008-04-21 20:58:16,support for linear pyramids in ExodusII,0,,0
1552674,2008-04-23 17:30:28,Include <unistd> for getpid(),0,,0
deb8307,2008-04-23 19:59:24,Print here() messages on every processor,0,,0
78be00e,2008-04-23 21:14:29,New parallel update function in MeshBase (for MeshRefinement use)  ParallelMesh/SerialMesh implementations,0,,0
a4754b8,2008-04-23 21:15:39,More debug-mode sanity checks,0,,0
7be1f39,2008-04-24 05:16:36,Better debug-mode checks,0,,0
84b7d18,2008-04-24 20:32:21,Fix refine_by_error_fraction for parallel use  exit with errors when trying to use not-yet-fixed methods on parallel meshes.,1,,0
7d2915b,2008-04-24 22:00:21,Fixes for ParallelMesh,1,,1
d7e9dc0,2008-04-25 18:41:43,Fix inf_elem_builder behavior with ParallelMesh,1,,1
8444d1a,2008-04-25 18:44:44,ParallelMesh is getting good enough to actually paralllelize it by default now...,0,,0
c982147,2008-04-25 21:32:05,Typo fix,1,,0
7e7109c,2008-04-25 21:44:16,Make parallel node id fixing code public,1,,1
c2a40c2,2008-04-28 22:17:16,Don't attempt to write ParallelMesh solutions even in METHOD=opt,0,,0
9992531,2008-04-28 22:18:38,warn about unsupported Mesh I/O but don't error out,1,,0
3008697,2008-04-30 01:33:05,Removed debug mode test,0,,0
90a2f51,2008-05-01 06:36:11,FIXME note on an O(n_elem) vector<bool>,0,,0
49da91f,2008-05-01 06:38:11,Major refactoring  fixes for ParallelMesh synchronization code.,1,,1
4a8b487,2008-05-01 06:38:56,Fixes for all_second_order() with ParallelMesh,1,,1
992fedc,2008-05-01 06:39:50,Dependency updates for location_map.h  parallel_ghost_sync.h,0,,0
6b1ecc4,2008-05-01 14:08:36,Removed unused variables,0,,0
d4d33c2,2008-05-01 20:13:42,Fix for --disable-amr,1,,1
3fb1566,2008-05-01 20:14:40,Switch libMesh::init to LibMeshInit  disable amr.cc cleanly when ENABLE_AMR is off,0,,0
eed303d,2008-05-01 20:43:09,Moved MeshRefinement methods which better fit MeshTools or MeshCommunication  to fix --disable-amr case.,1,,1
a4c0bda,2008-05-01 20:58:21,Typo fix,1,,0
fe27109,2008-05-01 21:04:29,New dependencies from MeshRefinement->MeshCommunication/MeshTools refactoring,0,,0
79c92fb,2008-05-02 06:19:16,Avoid warnings with --disable-amr,0,,0
ae1bbf9,2008-05-02 06:19:47,New debug mode test,0,,0
98e506d,2008-05-02 18:41:57,No need for libmesh_assert* method outside of DEBUG mode,0,,0
1e87d1c,2008-05-02 21:51:55,More valid remote_elem tests,0,,0
31c8c45,2008-05-02 21:53:09,Comment out potentially broken (but currently completely unnecessary) code in coarsening function,0,,0
d2a7ccd,2008-05-02 21:53:34,Updated dependency for remote_elem debug tests,0,,0
9dd91b0,2008-05-02 22:02:37,Turn partitioning of parallel meshes back on,0,,0
657a732,2008-05-06 18:42:22,Make sure MeshBase::is_serial() is always defined before use,0,,0
57b1545,2008-05-06 19:45:57,Fix bug with PerfLog use in refactored MeshRefinement::add_point(),1,,1
69fd350,2008-05-08 13:18:54,Comment on parallelism issues in MeshFunction,0,,0
1d9412c,2008-05-08 16:36:50,Specializations for Parallel::min/max(std::vector<bool>)  since official MPI standards don't support MIN/MAX ops for char/unsigned char,0,,0
e1c0c3b,2008-05-08 16:38:59,Use vector<bool> even when we don't care about efficiency  now that Parallel::max/min support them (and now that we know max/min isn't always supported by MPI for char types),0,,0
8dc8816,2008-05-08 17:23:37,Don't bother to serialize for I/O - the I/O classes should either write a distributed ParallelMesh correctly or refuse to write with a warning at this point.,0,,0
2810ab8,2008-05-12 04:50:16,More perf_logging  removed unnecessary temp variables,0,,0
bd98240,2008-05-12 06:41:47,more libmesh_assert_ debugging functions,0,,0
f219f56,2008-05-12 12:56:32,Switch from is_neighbor to has_neighbor  bugfixes for ParallelMesh,0,,0
f76b6b0,2008-05-12 12:58:52,find_neighbors fixes for ParallelMesh,1,,1
48ccc40,2008-05-13 12:50:22,Include missing header,0,,0
16ea381,2008-05-17 22:17:20,Don't include hilbert.h unless HAVE_LIBHILBERT,0,,0
51976c1,2008-05-18 17:09:04,Dr. John W. Peterson,0,,0
2a004f0,2008-05-19 19:36:45,Add option to disable variational smoother (which takes forever for some icc versions to compile),0,,0
726c226,2008-05-19 20:01:35,Include libmesh's config file so we can see if VSMOOTHER is enabled or not.,0,,0
3ad5c36,2008-05-19 20:17:33,Try to autodetect mpi compiler wrapper scripts,0,,0
2a870ce,2008-05-20 23:41:52,Modified to use the grid directly rather than the VTK pointset in VTKIO::read()  this gave an error in a vtu tetmesh read,1,,0
99060cb,2008-05-21 12:48:51,fixed broken d()/dzeta linear pyramid shape functions,1,,1
f28a41f,2008-05-22 17:26:43,detect when implicit neighbor dofs is needed.,0,,0
eb2f186,2008-05-22 20:58:26,add implicit neighbor dofs if requested or if all variables in the system are discontinuous,0,,0
cb86469,2008-06-02 21:16:43,Don't miss any points because of epsilon differences in location,0,,0
882a52f,2008-06-03 20:29:27,New paramvalue feature for parameters which are functions of other parameters  prefix reading for slightly more useful functions,0,,0
06ca187,2008-06-04 13:11:27,Make exodus output only happen on processor 0 (for now)... this used to throw an error when running in parallel.,1,,0
704ebfb,2008-06-04 22:51:55,Bugfix for commented out lines  lines with parameter prefixes,0,,0
3d964e5,2008-06-05 15:41:49,Resize FEXYZ _map arrays correctly,0,,0
3d1428d,2008-06-13 16:10:20,fixed to work with trilinos make install target,1,,1
6cfbdbe,2008-06-13 18:59:07,remove gcc-4.3 warnings,0,,0
0b0d030,2008-06-13 19:01:35,put trilinos stuff in trilinos_* files,0,,0
98eae89,2008-06-13 19:02:19,moved,0,,0
3248f2e,2008-06-13 19:02:30,moved,0,,0
b082dd4,2008-06-15 15:42:14,updated config.guess  can build shared libraries on OSX 10.5,0,,0
1c0bf21,2008-06-15 16:00:43,igore stuff in the contrib/lib,0,,0
b5f1ac4,2008-06-15 16:02:09,instatiate an EpetraVector when Trilinos is available,0,,0
d30679a,2008-06-15 16:03:06,placeholder support for AztecLinearSolver,0,,0
0c44e69,2008-06-16 01:11:52,added initial Epetra sparse matrix implemetation,0,,0
e8b8c11,2008-06-16 15:21:42,Make the executable linking stage quiet (do not echo the command to the screen.),0,,0
8c4c2f2,2008-06-16 17:00:33,added error_estimation source subdirectory,0,,0
1811b0a,2008-06-16 18:38:44,support for mat(i j),0,,0
0fa87c1,2008-06-16 18:51:16,Added missing #include <vector>,0,,0
0a49e85,2008-06-16 18:53:26,"Added missing #include ""elem.h""",0,,0
7b2ded2,2008-06-16 19:10:23,Added #include <memory> for std::allocator,0,,0
eac4558,2008-06-16 19:14:16,Added missing #include <vector>,0,,0
fcb9bfd,2008-06-16 19:15:29,Added missing #includes,0,,0
0dba399,2008-06-16 19:28:54,Comments  bugfix for unrefined islands tests,0,,0
94f2671,2008-06-16 21:19:40,fix set(i j),1,,1
45f6333,2008-06-16 21:34:18,Typo fix,1,,0
f1119e9,2008-06-17 13:08:33,moved to Epetra_FEVector,0,,0
01f67d7,2008-06-17 16:46:39,added Epetra_Vector test,0,,0
5ff4563,2008-06-17 17:40:11,localize() works,0,,0
c5412c1,2008-06-17 18:43:53,updated quadrature test coverage,0,,0
447efee,2008-06-17 18:48:06,fixed a bug in 5th-order tetrahedral Gaussian Quadrature,1,,1
2c37a37,2008-06-17 19:47:10,reorg,0,,0
673e18c,2008-06-17 19:49:18,reorg,0,,0
dd8e669,2008-06-17 19:50:32,reorg,0,,0
503f52f,2008-06-20 16:50:27,"Use the ""do/while(0)"" macro trick in case we put these macros in if/else statements later",0,,0
6a8ac9d,2008-06-20 21:32:06,Make sure rhs is ready for assembly,0,,0
9083014,2008-06-23 23:40:39,Updates for moved error estimator headers,1,,0
56e83ef,2008-06-24 17:51:42,Added allow_rules_with_negative_weights flag to QBase.  Default is true (which was the standard behavior) but you can set this to false to use more expensive (but potentially safer) quadrature rules instead.,0,,0
519e719,2008-06-24 19:29:01,Finished adding Dunavant quadrature rules up through 19th order for TRIs. This is the highest order available which is suitable for use in FEM calculations. Above 19th-order you still get conical product rules up to 23rd.,0,,0
2051b3c,2008-06-25 15:25:47,Use system.update() instead of localizing the global solution in the PetscNonlinearSolver,0,,0
a3ff51c,2008-06-25 21:57:54,Added a few tet rules from Keast's 1986 paper.,0,,0
265679c,2008-06-25 22:05:12,Make .e map to Exodus,0,,0
9f5632b,2008-06-25 22:10:15,Update help message,0,,0
3c4b8db,2008-06-26 13:41:06,do not repartition parallel meshes until redistribution is fully integrated,0,,0
54d6e0c,2008-06-27 20:44:17,moved the Node serialization MPI methods from anonymous namespace to inside the Node class,0,,0
2ca8afa,2008-06-30 14:25:32,factored out element packing/unpacking for MPI communication,0,,0
440015c,2008-07-01 21:59:04,Added a new quadrature class for Tets  based on the 1978 paper by Grundmann and Moller.  These rules have negative weights but they are defined for all orders and have a lot less points than conical product rules.,0,,0
7d0a436,2008-07-01 22:13:14,Removed big commented-out case statement.  This isn't needed for the GM rules...,0,,0
004d24a,2008-07-01 23:16:06,Keyword substitution fixed for new files.,1,,1
658027d,2008-07-02 15:40:29,Made the GM rules the default choice for high-order integration over tets when rules with negative weights are allowed.,0,,0
a2dfed3,2008-07-02 20:33:27,reworked DofObject to store indices more efficiently,0,,0
dbd2898,2008-07-03 15:42:51,Added some even-order quadrature rules for QUAD elements due to Wissmann  1986.  These rules have all positive weights inside the reference element and fewer points than equal-order tensor-product rules  therefore they appear to be superior in almost every way.  The degree-4 and degree-6 rules can even be shown to contain the minimum number of points required to achieve their respective accuracies.,0,,0
8d35a3c,2008-07-03 21:07:29,Added Wandzura's 15th  20th  25th  and 30th-order quadrature rules for the triangle.  These rules have all positive weights  all points inside the region of integration  and fewer points than equivalent-order conical product rules.,0,,0
76ad8b2,2008-07-03 21:17:23,Added extra cases for Wandzura rules.,0,,0
17344bc,2008-07-07 20:37:23,Added write_timestep to ExodusII_IO,0,,0
a4b967c,2008-07-07 20:59:56,Removed extra function qualifier.,0,,0
888239e,2008-07-07 21:04:59,Timestep should have been an int,0,,0
f1d1b86,2008-07-08 14:32:46,Make initialization in ctor match order of var declarations in class to avoid warning.,0,,0
c6eed16,2008-07-08 15:41:11,Add iterator methods for iterating through the parameters from the outside  also made Parameter public,0,,0
7032e25,2008-07-08 17:36:27,Fixes to remove 'unused variable' warnings when compiling in optimized mode with -Wall.,1,,0
dcb20ac,2008-07-08 17:46:50,Fixes to remove 'unused variable' warnings when compiling in optimized mode with -Wall.,1,,0
97f3f87,2008-07-08 18:52:52,Fixes to remove unused variables when compiling in optimized mode with -Wall.,1,,1
09d8a1f,2008-07-08 19:04:53,Avoid declaring variables which are only used for asserts. This prevents a lot of unnecessary warnings when compiling with -Wall in optimized mode.,0,,0
fce116b,2008-07-08 19:14:50,Avoid declaring variables which are only used for asserts.  This prevents a lot of unnecessary warnings when compiling with -Wall in optimized mode.,0,,0
56f8d00,2008-07-08 19:35:34,Do not declare variables which are only used in asserts  unless asserts are active.,0,,0
0e336dd,2008-07-08 19:41:53,Only declare certain variables if asserts are active.,0,,0
abc503f,2008-07-08 19:55:23,Avoid declaring variables only used in assert statements.,0,,0
4cf5d10,2008-07-08 20:52:58,Avoid declaring unused variables in when asserts are not active.,0,,0
896d760,2008-07-08 21:20:40,Avoid declaring variables which are only used for asserts.  This prevents a lot of unnecessary warnings when compiling with -Wall in optimized mode.,0,,0
672318c,2008-07-08 21:23:50,Moved the uniform error estimator to the new error_estimation directory.,1,,0
f3eface,2008-07-08 21:48:10,Avoid declaring variables which are only used in assertions unless assertions are active.,0,,0
201a909,2008-07-09 18:27:50,Added a degree=2  3-point rule for the quadrilateral. An equivalent tensor-product rule would have 4 points.,0,,0
c24f635,2008-07-09 21:37:48,"Removed the Wissmann rules for QUADs.  They are not usable because our order P rules for QUADs must be able to integrate ""bi-pdic "" i.e. biquadratic  bicubic  etc. polynomials  which actually have terms up to order 2p but are not complete.",0,,0
b4d80ad,2008-07-10 13:34:46,Fixed issue in DEBUG mode where variables were used but not declared.,1,,1
677ee2b,2008-07-10 17:35:22,Changed debug -> dbg in list of valid METHOD options.,0,,0
850cfdd,2008-07-10 18:37:59,Updated the documentation upload targets to reflect the fact that we now use SVN.  In order to rsync/upload files to the sourceforge.net servers  please set the LIBMESH_SVN_USER environment variable to your sourceforge username if your sf username differs from $USER.,0,,0
66cbd67,2008-07-11 17:45:07,Added Nemesis to contrib.,0,,0
baa81df,2008-07-14 15:24:52,Added the QMonomial quadrature class.  You can integrate monomial FE bases with fewer points (in general) than are required for Lagrage tensor product bases.  The QMonomial class implements these integration rules for QUAD and HEX elements when available  and falls back on tensor product rules when necessary.,0,,0
d9c1b73,2008-07-14 15:39:35,Accidentally removed appbinfiles from all target. (oops) Replaced.,0,,0
3ec00e2,2008-07-14 15:40:06,Updated dependencies for new and moved files.,0,,0
22b6b14,2008-07-14 22:29:43,Added non tensor-product rules for QUADs through 17th-order.,0,,0
90b8ee0,2008-07-17 13:36:10,Added 4th order rule for TRIs with 6 points and all positive weights.,0,,0
09302f9,2008-07-18 15:22:32,Added a degree-7  12 point quadrature rule for TRIs with positive weights.,0,,0
eb38899,2008-07-20 21:58:18,two of the three papers john found  need to add third,0,,0
e6cd90b,2008-07-20 23:49:30,publications and presentations,0,,0
21c4651,2008-07-20 23:52:07,publications and presentations,0,,0
1a37a4f,2008-07-21 00:03:46,publications and presentations,0,,0
8e606a9,2008-07-21 00:58:10,updated examples page,0,,0
3fe2702,2008-07-22 23:44:32,weird query-replace syntax bug?,1,,0
9c0e700,2008-07-24 21:25:44,recv methods should take a signed integer for processor id since MPI_ANY_SOURCE can be negative!,0,,0
7c0d891,2008-07-24 21:32:12,better support for intel v10.1 compiler flags  allow --disable-unordered-containers,0,,0
4d126d1,2008-07-25 01:27:51,Updated dependencies for moved uniform_error_estimator file.,0,,0
40d5629,2008-07-28 22:48:22,Used multi-precision software (GMP/MPFR/GMPFRXX) to re-compute the Jacobi quadrature rules to higher precision  and extended them at high precision to 43rd order  the hightest order enumeration defined.,0,,0
0496da1,2008-07-29 13:13:13,Fixed some formatting problems with the new rules.,1,,0
b02aa3b,2008-07-30 22:09:25,Make the code compile with TRIPLE_PRECISION defined  aka when Real=long double.,0,,0
9c516b6,2008-07-30 22:11:18,Recomputed 1D Gauss rules to 32 digits of precision using a multi-precision (GMP/MPRF/GMPRFXX) library.,0,,0
7bff58e,2008-07-31 16:04:51,"Append ""L"" to all long double floating point literals.  This tells the compiler not to truncate the literal to a double (thereby losing precision) before assigning it to a long double.",0,,0
521bb99,2008-07-31 19:19:11,"Added a 3rd-order accurate rule for triangles with all positive weights.  This replaces a 4 point rule which had a negative weight.  Also  added a few ""L"" tags to floating point literals to get the correct precision when compiling with Real==long double.",0,,0
149ce2a,2008-08-01 15:15:11,Don't try to automatically instantiate something you've already explicitly instantiated.,0,,0
ed49347,2008-08-01 16:32:30,Added a few explicit instantiations which Intel 9.1 complained about in devel mode.,0,,0
8f37059,2008-08-01 19:48:56,Allow systems to be read which have added their own vectors already,0,,0
7e42f7e,2008-08-01 20:39:54,"Wrote some configure tests which try compiling unordered_map/set in the std:: or std::tr1 namespaces  as well as hash_map/set in the __gnu_cxx:: namespace.  This was needed because just checking for the header files may be insufficient.  Intel compilers can ""see"" these headers but apparently they cannot always compile them.",0,,0
7eaf171,2008-08-01 20:43:26,Skip a debug-only communication step when in opt mode,0,,0
f403872,2008-08-01 20:44:59,Close parallel vectors after setting them from file data,0,,0
49f8bd1,2008-08-02 21:50:10,syntax for SunStudio 12,0,,0
8dec158,2008-08-05 20:23:10,Include guards.,0,,0
3170fd7,2008-08-06 20:48:34,Fix from Adam Powell for --disable-exodus,1,,1
175cdb5,2008-08-06 22:03:40,Fix to make vtk output writer work for parallel runs. Checked on modified equationsystems.write() for ex8 and ex14 using vtk 5.3.0 on debian unstable,1,,1
8d8f569,2008-08-08 18:58:53,Capture exodus block_id as the subdomain_id of the element,0,,0
0af9698,2008-08-09 00:33:55,Fix --disable-tracefiles,1,,1
513bd22,2008-08-09 00:48:31,Simplify (and correct) configure test for GCC ABI name demangling,0,,0
53aa4dd,2008-08-09 01:02:10,include cstdlib  std::free(),0,,0
803f90f,2008-08-09 03:20:15,Fixed the Hex27 numbering issue.  Fixed a couple of leaked pointers.,1,,1
33adeaa,2008-08-09 04:23:30,Fixed one of the more ridiculous uses of arrays of C-style strings.,1,,1
f5be8e0,2008-08-10 14:28:13,Modified example to include option to export to VTK  the option is off by default,0,,0
67e5312,2008-08-10 16:14:57,Added cstring include otherwise gcc-4.3 can't find strcpy,0,,0
ac42a2e,2008-08-10 20:38:50,ex12 works again  additional UNVIO logging,0,,0
10092d8,2008-08-10 20:59:48,Make write() print an error message until we get around to implementing it.,1,,0
b6c21f5,2008-08-11 00:17:08,Fixes for --disable-amr,1,,1
151c830,2008-08-11 04:53:37,Fixes for --enable-complex,1,,1
4ea39eb,2008-08-11 19:54:46,fix for multithreaded full sparsity assembly,1,,1
0f6dcf3,2008-08-11 21:31:19,fixed memory leak,1,,1
f576367,2008-08-12 14:11:55,more logging,0,,0
0adc3e2,2008-08-14 18:37:01,Tagged libmesh 0.6.3,0,,0
720065d,2008-08-14 18:52:19,Removed  accidental tagging of 0.6.3,0,,0
a9b4da3,2008-08-14 18:52:58,Tagged libmesh 0.6.3,0,,0
aa6a088,2008-08-14 20:25:11,Close START_LOGs,0,,0
3c63d8b,2008-08-14 20:30:38,Add logs to remaining Parallel::gather/broadcast methods,0,,0
265675f,2008-08-14 20:40:24,Remove redundant null-setting,0,,0
81c0501,2008-08-14 21:05:10,Found a regression in previously tagged 0.6.3,0,,0
4483633,2008-08-14 21:05:48,Tagged libmesh 0.6.3,0,,0
9a33c02,2008-08-15 20:36:36,Fix for seminorm calculations,1,,1
9392ea4,2008-08-15 21:26:30,Don't try to use mpi compilers if we've disabled mpi,0,,0
d41e000,2008-08-18 14:17:43,Retagging to get some last-minute updates to 0.6.3.,0,,0
afff19e,2008-08-18 14:18:56,Tagged libmesh 0.6.3,0,,0
40343a5,2010-10-30 18:28:28,Added a new function in RBSystem to simplify adding outputs in the case that there is only one term in the affine expansion of the output.,0,,0
354ee36,2010-10-31 16:42:07,Restore inadvertent deletion from last point_locator() bugfix,0,,1
3e47106,2010-10-31 16:57:12,Tagging a 0.7.0.1 release with that last bug fix...,1,,0
1f1e96f,2010-10-31 17:49:57,Fuentes and Kirk preprints become 2010 publications. Added Griffith preprint link.,0,,0
7b8ed73,2010-11-01 13:22:29,Fix parse errors,1,,1
848e27d,2010-11-01 16:52:44,Enhancing API for periodic boundaries,0,,0
c0c1646,2010-11-02 18:53:18,Changed name of compute_a_posteriori_bounds to compute_max_error_bound and made it public,0,,0
68607f9,2010-11-03 02:49:32,Add missing header,0,,0
ca5e481,2010-11-03 02:51:41,"Fix ""make test_headers""",1,,1
64421c9,2010-11-03 02:58:15,test_headers.sh shouldn't fail silently,1,,0
69df9fb,2010-11-04 15:43:56,Destructor of Parallel::Request will no longer call MPI_Request_free.  This avoids unwanted freeing of requests when using an std::vector<Request>.  Rather  a new method Request::free() exists now to explicitly allow the user to free a request.,0,,0
ef19ddd,2010-11-04 15:55:40,Adding libMesh 0.7.0.2 tag with Parallel::Request fix,1,,1
296d78f,2010-11-08 20:21:35,Fix output filename,1,,1
823a4ac,2010-11-08 23:56:01,Bugfix for send_list construction on adaptive meshes with extra_hanging_dofs elements,0,,1
1d2d2e2,2010-11-09 20:45:59,Fixing ExodusII output for element numbering and sidesets in AMR meshes,1,,1
4e3b4fa,2010-11-09 21:31:34,Bugfix for Real!=double case,0,,1
6dc407c,2010-11-09 22:53:58,Added --enable-singleprecision and --enable-tripleprecision configure options,0,,0
fbf2f01,2010-11-09 23:00:46,Add support for writing global variables to the mesh file,0,,0
05fbc7e,2010-11-09 23:21:50,Use LIBMESH_ prefix for PRECISION macros now,0,,0
291eeef,2010-11-10 19:33:34,Bugfix for --enable-singleprecision,0,,1
ab9eba7,2010-11-10 20:05:34,Disable examples that don't work with single precision,0,,0
89270f5,2010-11-10 22:22:46,Fixing elem_num_map for multiple subdomain cases,1,,1
cf65699,2010-11-12 20:07:37,Allow keyword='' to parse correctly,0,,0
3cdd4e5,2010-11-13 20:58:18,Bugfix for disabled ExodusII builds,0,,1
7b07a8a,2010-11-13 20:59:13,Some (incomplete) fixes for --enable-tripleprecision,1,,1
539f053,2010-11-13 21:21:20,Added clean_examples target for convenience,0,,0
fafb131,2010-11-15 17:46:53,Bugfix for configure-time name conflict with mpich2,0,,1
8bd12a3,2010-11-15 18:50:46,Creating libMesh 0.7.0.3 with the fix for the parallel AMR on Hierarchics bug,1,,1
bb7d541,2010-11-15 21:16:30,Moved truth_outputs resizing in RBSystem to initialize_RB_system,0,,0
be0d72e,2010-11-15 21:50:09,Fix unit tests for Real==float case,1,,1
b568f78,2010-11-15 21:50:47,Set svn:ignore,0,,0
cf9de6e,2010-11-15 21:52:04,We need a looser TOLERANCE with --enable-singleprecision to pass our quadrature unit tests,0,,0
606d8c5,2010-11-16 16:35:07,add support for adaptive quadrature rules,0,,0
f40539b,2010-11-17 17:01:55,Avoid accessing empty string,0,,0
b28a7f0,2010-11-17 18:38:04,Adding optional matrices of variable weights to SystemNorm,0,,0
c67ccdf,2010-11-17 23:28:56,Adding level 1 AMR support across periodic boundaries.,0,,0
3039f31,2010-11-18 00:01:19,Adding an example from Cody to use/test PeriodicBoundaries as well as his new work on their interaction with MeshRefinement,0,,0
ca25299,2010-11-18 18:03:18,Moved output dual norm calculations from initialize_RB_system into train_reduced_basis.,0,,0
9c3e157,2010-11-18 22:45:58,Added flag in transient_rb_system to ensure that we only compute projection errors in truth_solve if the truth solve is called during train_reduced_basis. Otherwise this call is unnecessary.,1,,0
9f26933,2010-11-19 22:07:10,Made RBThetaData::get_mu virtual,0,,0
b1bf747,2010-11-22 08:48:53,Added support for subset solves.,0,,0
012da8b,2010-11-22 16:57:44,newlines at end of file,0,,0
042e497,2010-11-22 16:58:08,libmesh::out --> libMesh::out,0,,0
ea17330,2010-11-24 07:31:25,Subset stuff didn't compile with PETSc < 3.0.0  fixed this now.,1,,1
1f824b5,2010-11-30 20:06:28,Correcting example number in ex25 comments  disabling for non-PETSc builds,0,,1
de78757,2010-11-30 20:54:00,Adding is_identity  set_off_diagonal_weight methods to SystemNorm,0,,0
1cbf111,2010-11-30 21:09:07,Patch (mostly from Vikram) for AdjointResidualErrorEstimator evaluations using a matrix SystemNorm,1,,1
e78f56f,2010-11-30 23:04:45,Set svn:ignore,0,,0
ebc41b6,2010-11-30 23:15:20,Updated svn:ignore,0,,0
f8dcffc,2010-12-01 15:55:07,Added non-virtual AnalyticFunction::clear(),0,,0
db93b17,2010-12-02 02:55:43,Allow differing SLEPc/PETSc version numbers - that seems to be the default on Ubuntu right now!,0,,0
e901c78,2010-12-02 03:03:33,Patch from Boyce Griffith to fix multiple BC ID I/O.,1,,1
1c27953,2010-12-02 03:54:25,configuration fix from Erik Zeek for PETSc prefix (no PETSC_ARCH) case,1,,1
912c8b8,2010-12-02 18:02:48,Patch from Boyce Griffith to fix various bugs with multiple BC ID cases.,1,,1
dfc54e1,2010-12-02 18:14:10,Fix PointLocator for --enable-2D-only,1,,1
679cd41,2010-12-02 18:46:37,Skip ex2 in 1D,0,,0
9cafd29,2010-12-02 18:47:11,Minor comment clarification,0,,0
bad8782,2010-12-02 18:55:09,Skip ex23 in 1D,0,,0
07737ec,2010-12-02 19:01:22,--enable-1D-only bugfix,0,,1
c1fe7cc,2010-12-02 19:02:35,Added --enable-1D-only configure option,0,,0
c0ee668,2010-12-02 19:12:05,Updated svn:ignore,0,,0
10d53f2,2010-12-02 20:04:04,Create php documentation directly in the doc dir,0,,0
a53d8cb,2010-12-02 20:04:39,create_example_docs should be slightly more robust now,0,,0
d0abce8,2010-12-02 20:06:05,Added examples_doc target,0,,0
61c826c,2010-12-02 20:06:36,Updated documentation for our example programs,0,,0
685e8bd,2010-12-02 20:14:25,Updated svn:ignore,0,,0
6f50a1f,2010-12-02 20:19:34,"Make examples docs as part of ""make doc""",0,,0
0184a91,2010-12-02 20:42:48,Tweaks to ex24,0,,0
e7e118d,2010-12-02 20:45:02,More example docs updates,0,,0
3baa7a8,2010-12-06 21:10:56,Support for outputting element variabes to exodus,0,,0
ba7b730,2010-12-07 16:24:05,Added accessor for temporal_data member in TransientRBSystem.,0,,0
a1cff82,2010-12-07 16:58:37,Bugfix for --disable-exodus,0,,1
5e0a4f6,2010-12-07 17:12:54,Regenerated configure with updated comment,0,,0
fde3ccc,2010-12-08 21:07:01,Fall back on double I/O when ExodusII and XDR binary won't support long double,0,,0
9b8ffe8,2010-12-09 22:13:44,Periodic boundary conditions can work on a specified variable,0,,0
d8390b4,2010-12-13 20:22:42,Removing forgotten debug print statement,0,,0
0bbc191,2010-12-15 21:07:49,Adding accessor in plane class to return a planar point (position) of the plane,0,,0
d0c2ebd,2010-12-16 20:55:15,Auto regenerated the list of publications.  Miscellaneous additions and status changes  including the first publication for 2011.,0,,0
8e3ff7b,2011-01-11 16:20:56,Added OStreamProxy shallow copy constructor  removed a couple superfluous semicolons,0,,0
91c4654,2011-01-11 16:36:50,Adding a few explicit default initializers to initializer lists,0,,0
a597ce5,2011-01-11 16:56:52,"Bugfix from Aleksej Saushev for non-portable ""=="" in test",0,,1
6b28b18,2011-01-11 17:44:32,Typo fix,1,,0
043d905,2011-01-11 17:53:48,Bugfix for recent OStreamProxy change,0,,1
6c83aec,2011-01-11 19:10:39,Fixed name demangling issue for Mac GCC users,1,,1
4e6e343,2011-01-11 23:39:30,OStreamProxy: Added some more assignment operators,0,,0
8a9c972,2011-01-12 17:06:49,Filling out Node initializer list,0,,0
064366d,2011-01-12 17:07:22,PeriodicBoundary has virtual functions now  might as well add a virtual destructor for safety's sake,0,,0
3645891.0,2011-01-12 17:07:58,Filling out Variable initialization list,0,,0
2fbfa43,2011-01-12 18:53:40,More explicit initializations in constructors  return *this from an operator=,0,,0
5f32345,2011-01-13 18:20:27,Fixing overzealous (in periodic boundaries case) assertion,1,,1
d696224,2011-01-13 18:37:07,Reordering a structure slightly  adding explicit initializers to constructor,0,,0
d2fae1f,2011-01-13 18:40:46,Moving some assignments to initializers for efficiency  adding some explicit initializers for making Weffc++ happy,0,,0
d1a1efc,2011-01-13 18:53:25,Adding explicit default initializers,0,,0
87f3ff2,2011-01-13 19:03:25,Added DofObject::operator=,0,,0
7ffb1d9,2011-01-13 19:05:54,operator++ should return *this,0,,0
cbdb1db,2011-01-13 20:41:30,Reordered a structure  added some explicit initializers,0,,0
f6c8b20,2011-01-13 23:55:44,Adding explicit initializers,0,,0
bde6d5b,2011-01-13 23:58:17,Added explicit initializers  fixed/completed copy/assignment methods,0,,0
9360000000000000.0,2011-01-17 21:56:25,Support writing information records to the exodusii file,0,,0
fab1f57,2011-01-19 22:50:51,add the ability for Partitioners to take element weights,0,,0
3901d57,2011-01-19 23:17:53,Tell exodus about the number of active elements only,0,,0
a7857fe,2011-01-20 15:17:57,Cleaning up a few warning messages,0,,0
bd9bcb6,2011-01-20 20:13:24,"Added configure test for C99 ""restrict"" keyword support in C++ compilers.",0,,0
6c691f6,2011-01-20 20:32:41,fixed a bug where subdomain restricted variables may not be completely numbered in parallel,1,,1
58c65ca,2011-01-21 19:54:11,Fixing peroidic boundary conditions for selected variables,1,,1
a643da2,2011-01-27 18:32:00,Fixing incorrect child vertex number for Hex elements - this is the source of the broken 3D AMR sidesets on Hex meshes,1,,1
8de1bde,2011-02-01 20:49:15,Added adjoint-based-refinement example,0,,0
7983576.0,2011-02-03 16:01:00,Update example comment,0,,0
4614c52,2011-02-03 17:13:51,Added adjoint-based sensitivities example,0,,0
9c92f70,2011-02-03 17:45:07,"Rename ""main.C"" in examples",0,,0
3493afd,2011-02-03 17:55:45,set svn:ignore,0,,0
8aa5c87,2011-02-03 19:13:11,Updated example docs,0,,0
03f7b2c,2011-02-03 19:40:30,Adding new examples to documentation menus,0,,0
093dc2d,2011-02-03 19:54:08,Tagging 0.7.0.4 release with Hex AMR boundary id fix,1,,0
079b2d3,2011-02-03 22:19:23,Use one fewer refinements by default for a quick test,0,,0
dd62111,2011-02-03 22:26:48,Fix new examples for --enable-complex,1,,0
9e49ab3,2011-02-07 19:54:17,Generalize PETSc-specific example code,0,,0
8160c22,2011-02-07 19:54:42,Generalize PETSc-specific comments,0,,0
c8f2acc,2011-02-07 23:45:07,Some more cleanup of the new examples,0,,0
629852e,2011-02-09 17:02:42,The new examples require 2D support,0,,0
08e2bd9,2011-02-09 17:03:33,Include header for numeric_limits directly,0,,0
3884f44,2011-02-09 17:04:17,If someone tries to load a mesh of unsupported dimension  a sensible error at read time is better than a nasty error during postprocessing,1,,0
7277c9d,2011-02-15 18:05:42,Removing DiffContext::request_jacobian - DiffSystem never got around to making it non-redundant or even using it  and the other systems might never want to use it.,0,,0
1eb54e9,2011-02-15 21:10:11,Fixing bugs in Exodus writer/Iterators must be used if elements are deleted in the mesh,1,,1
d28e1c4,2011-02-16 19:00:09,A few more iterator updates in the Exodus interface,0,,0
ca48d5c,2011-02-21 17:11:25,Fixes from Roman Vetter for data imprecision  bugs in VTK output,1,,1
f8d729e,2011-02-21 17:12:02,Remove excess chatter from VTK output,0,,0
1f35f72,2011-02-22 18:29:55,Added ex28: Subdomain-Restricted Variables  from Ben,0,,0
94cd042,2011-02-23 21:29:02,Checking in a major revision to rbOOmit. 1) Added RBEvaluation (and subclasses)  which factors out the parts of RBSystem needed to perform an RB_Solve. 2) Added RBComponent and related classes which allows us to connect RB models together using a substructuring approach.,0,,0
469c37f,2011-02-23 21:41:52,small fix for complex number support,1,,1
76ff3125,2011-02-24 02:26:20,these rbOOmit classes need some more work first...,0,,0
6c7e250,2011-02-24 02:36:11,updated config.guess and support for gcc-4.6,0,,0
951fab2,2011-02-24 16:34:44,Fix compilation failures in no-slepc  no-glpk cases,1,,1
4eaedcb,2011-02-25 20:03:25,Copy associated BoundaryInfo when copying any Mesh,0,,0
a8d14ca,2011-02-25 23:38:06,Changed initialize_calN_dependent_data to initialize_mesh_dependent_data  a more descriptive name. Also  small change to argument list for constructors in (QN)TransientRBEvaluation.,0,,0
8eb53c8,2011-02-28 21:25:22,Fix for Tet10::has_affine_map() based on patch from Johannes Huber,1,,1
83d7f94,2011-02-28 23:23:34,Patch from Roman Vetter for (serial) VTK output of parallel data.,1,,0
8b4bc0a,2011-03-01 17:56:01,Patch based on Vikram Garg's work to enable patch recovery of seminorm errors based on individual gradient components,1,,0
82d895c,2011-03-01 19:55:11,Don't let virtual functions get called indirectly from non-leaf constructor.,0,,0
dcbb990,2011-03-01 20:32:27,Switch a couple non-adaptive examples to VTKIO now that that works in parallel.,0,,0
7b0273a,2011-03-01 23:07:24,Fix for uses of topological_neighbor() that could break down on some partitionings.,1,,1
817d7dd,2011-03-02 16:03:51,Checking in David Andrs' changes to PetscVector for detecting whether the type is ghosted or MPI.,0,,0
284c2f6,2011-03-02 17:02:04,VTKIO fix for LIBMESH_DIM < 3,1,,1
b420237,2011-03-02 17:23:36,PetscVector changes compilation fix,1,,1
f8260e5,2011-03-02 17:47:33,"Support PETSc 2.x.x where VecType was #define'd to ""const char*"". This changed in 3.0.0 to be char*.",0,,0
58c9342,2011-03-02 20:38:14,Moving some const initializations to headers  and where appropriate changing external to internal linkages - there's no reason not to let compilers do a little better job optimizing here.,0,,0
891da81,2011-03-03 22:59:10,Needed to include string.h for gcc version 4.4.3,0,,0
667cb30,2011-03-03 23:00:36,Make sure the square of the residual dual norm is non-negative,0,,0
39db53d,2011-03-04 03:41:17,Added LAPACK-based svd to DenseMatrix,0,,0
e47886c,2011-03-04 03:49:20,PETSc convergence reasons patch from Roman Vetter,1,,1
83755bb,2011-03-04 03:58:10,Patch from Roman Vetter (and comments from myself) allowing System::project_vector to handle new element creation,1,,1
8e587c0,2011-03-04 16:15:09,Get rid of a magic number  sign conversion warning,0,,0
01e4298,2011-03-04 16:51:01,Compilation fix for --enable-complex,1,,1
bf7e16b,2011-03-04 18:47:22,In PETSc versions less than 3  don't name input parameter to avoid unused parameter warnings from compiler.,0,,0
ea9f975,2011-03-07 06:05:42,We're using std::set in periodic_boundaries.h now,0,,0
56b2826,2011-03-07 15:35:28,Make these headers pass the test_headers.sh script.,0,,0
c2e2c8a,2011-03-07 16:55:20,Fixed shell coloring for Mac systems  may have been using a linux-specific syntax before?,1,,0
7bc78ba,2011-03-07 18:54:41,This class must be #ifdef'd out if SLEPC and GLPK are not available  since it depends on QNTransientRBSystem  which is also #ifdef'd out if those classes are not available.,0,,0
3ddb2e3,2011-03-07 23:33:12,Added CondensedEigenSystem  which solves eigenvalue problems with specified dofs removed. This is convenient for solving eigenvalue problems with Dirichlet boundary conditions  for example.,1,,0
3c27f82,2011-03-07 23:50:33,Added transpose matvec function to DenseMatrix  with BLAS support.,0,,0
485ecb0,2011-03-08 00:54:19,Removed non_dirichlet_dofs_vector from RBSystem  it's now stored in CondensedEigenSystem. Cleaned up CondensedEigenSystem::solve(). Also  we now loop over local dofs in CondensedEigenSystem::initialize_condensed_dofs in order to set up the list of non condensed dofs.,0,,0
4ad02b7,2011-03-08 20:21:49,NewtonSolver can exit line search early if it's only looking for finite residuals and it's already got one.,0,,0
bf79775,2011-03-08 22:48:24,Fix for iteration count reporting when maximum iteration count is reached,1,,1
5201a8f,2011-03-08 22:51:50,Added n_global_non_condensed_dofs() to CondensedEigenSystem.,0,,0
b69bee7,2011-03-09 17:07:24,Replaced this->clear() call at end of solve().,0,,0
e79e812,2011-03-09 19:11:34,Reverting recent projection change - it was skipping newly added elements  but it was also skipping other elements it shouldn't have.,0,,0
79ea7dc,2011-03-09 21:29:10,David added exodus flush commands in several places.,0,,0
908bd0b,2011-03-09 22:44:32,Throw an error if the output directory hasn't already been created in RBSystem::write_output_data_to_files,1,,0
4c23b91,2011-03-10 19:36:28,clean up compiler warnings based on buildbot feedback,0,,0
51fb57f,2011-03-10 19:54:00,clean up compiler warnings based on buildbot feedback,0,,0
5c6ebad,2011-03-11 00:03:35,PetscMatrix::print_personal now prints to file when requested (rather than just cout).  The implementation is not particularly efficient (since print_personal gets passed an ostream) but it does work.  And how efficient do you need to be if you are printing out matrices anyway?,0,,0
b32df14,2011-03-11 21:29:48,Adjoints examples : Removed some now-redundant casts,0,,0
95e0bd9,2011-03-11 22:24:59,Replacing dynamic_cast with libmesh_cast where appropriate - depending on the error checking replaced this will either lead to slightly more efficient NDEBUG runs or slightly more run-time checking in debug mode runs.,1,,0
d17a3ef,2011-03-11 23:18:47,Refactoring examples slightly,0,,0
705d65c,2011-03-11 23:41:21,Moving libmesh_assert_valid_parallel_ids() to MeshBase - in the long run we might want a SerialMesh implementation of this too  in the short run it makes ParallelMesh testing code less convoluted.,0,,0
ea12407,2011-03-11 23:44:17,Use an actual defined FEMNormType in comment...,0,,0
e81014b,2011-03-12 04:20:55,fixed colors,1,,1
4467f0f,2011-03-12 04:39:57,renamed user-provided function pointers to include _function on the end for clarity,0,,0
0c2f38f,2011-03-12 04:42:24,gcc-4.6 syntax clarification suggestion,0,,0
6b7c0ad,2011-03-12 04:44:04,svn keyword expansion,0,,0
b72baeb,2011-03-12 05:04:05,64-bit tecplot API library,0,,0
65bd8b4,2011-03-12 21:13:18,svn keyword expansion,0,,0
5403ce6,2011-03-14 04:21:58,Make sure libmesh_cast_ptr() has been defined,0,,0
a6f26a4,2011-03-14 04:26:09,Specifying libMesh namespace  we can't guarantee a using statement will precede this file.,0,,0
79271f8,2011-03-14 05:48:26,Adding missing namespace libMesh,0,,0
bf80d2c,2011-03-14 05:49:09,"Add a ""using namespace libMesh"" to apps for when it's disabled in headers",0,,0
967e4b7,2011-03-14 15:02:36,Print more informative messages about which includes are being removed  and use a more consistent/correct method to test-compile the files.,0,,0
3216b91,2011-03-14 16:19:20,Get away with only a forward declaration of Partitioner in mesh_base.h.,0,,0
e86f48c,2011-03-14 18:22:04,Build debug-only virtual functions even in non-DEBUG modes  or Boyce & John see messed up vtables and strange errors when DEBUG and non-DEBUG object files are mixed.,1,,0
2fc68d0,2011-03-14 18:38:12,Use libmesh_CPPFLAGS when building example object files too,0,,0
e16f43d,2011-03-15 03:07:18,Fixing Petsc 3.1.0 logic error in libMesh,1,,1
491ea73,2011-03-15 14:07:08,"Examples can now be built in parallel with ""make -jN examples"".",0,,0
83eb98c,2011-03-15 15:22:12,Added non_dirichlet_inner_product_matrix and an accessor in RBSystem,0,,0
8a21dbc,2011-03-16 09:24:03,SparseMatrix::print() can now optionally print in a sparse format.,0,,0
efe9906,2011-03-17 20:09:44,Added code to read in the boolean initialize_mesh_dependent_data from file,0,,0
c5c80db,2011-03-17 22:08:02,Fix for overzealous assertion that could be triggered on some BoundaryMesh elements,1,,1
08abbad,2011-03-18 17:00:59,Re-bootstrapped with newer autotools  so that change won't obscure real changes to follow,0,,0
3269855.0,2011-03-18 17:02:00,Added a test for xz compression,0,,0
fd8216a,2011-03-18 17:40:18,Support for xz file compression,0,,0
98bc8b0,2011-03-18 18:07:00,Provide access to raw SNESConvergedReason from PetscNonlinearSolver.,0,,0
4bbb1b9,2011-03-18 22:01:42,Using a virtual method instead of a dynamic cast,0,,0
e2b5765,2011-03-18 22:04:47,Use a virtual function rather than a dynamic cast for fix_broken_numbering calls,0,,0
3368add,2011-03-18 22:08:24,Elem::side() can return an Elem pointer  since it never produces a DofObject.  This means we don't need a virtual operator== in DofObject since we never need to compare a Node to an Elem.,0,,0
6411f5d,2011-03-18 22:10:28,libMesh can now work even when configured with -fno-rtti,0,,0
a944de0,2011-03-21 15:23:30,Reverting until John can track down some regressions in INL's tests,0,,0
9033b00,2011-03-21 17:01:31,Reinstating Friday's changes  but with the Parameters::have_parameter behavior (in a HAVE_RTTI context) restored to prevent MOOSE regressions,0,,0
31ae4dd,2011-03-21 20:01:50,Added fix suggested by Vetter Roman.,1,,1
e93e737,2011-03-22 03:06:25,Added a utility for comparing two restart files,0,,0
5d3d53e,2011-03-22 16:23:33,Modified the write_offline_data_to_files and read_offline_data_from_files methods in rbOOmit. They now take an extra argument (with default value ALL_DATA) that indicates whether we should write out all the data  or just the basis function (in)dependent subset. Also  the greedy_params vector has been moved from RBSystem to RBEvaluation since each basis is generated with a different set of greedy parameters in general.,0,,0
97fdefa,2011-03-23 15:15:59,Separators in ASCII Xdr::data(vector) output,0,,0
ae83615,2011-03-23 15:16:47,Semicolons are our friends.,0,,0
12dc3e0,2011-03-23 21:34:34,Fixed missing STOP_LOGs in some of the RB classes.,1,,1
403dac9,2011-03-24 03:55:50,Added add_vector_transpose to NumericVector  which computes A^T * v,0,,0
65beeb5,2011-03-24 13:16:35,Made attach_output virtual in RBSystem.,0,,0
493ef16,2011-03-24 15:46:19,Added Jed Brown's patch fixing MatZeroRows for PETSc 3.1.1+,1,,0
bee399b,2011-03-24 16:24:13,Jed Brown's updated ISCreateLibMesh patch.,1,,1
33965a5,2011-03-24 17:58:06,Forward Partitioner declaration was causing some compiler warnings,0,,0
822ddbc,2011-03-24 18:00:34,Fix for error message,1,,0
9ec6f96,2011-03-24 19:09:37,Added a short-circuit for RBSystem::compute_output_dual_norms when we don't have any outputs,0,,0
97bad34,2011-03-24 21:24:45,Fixing VTKIO memory leak/memory corruption bugs  moving an unnecessarily heap'ed array to the stack.,1,,1
cb8127c,2011-03-24 21:44:07,Bugfixes for ParallelMesh  plus a more general correction to the last VTKIO fix,1,,1
0297e9f,2011-03-25 12:45:00,object-based assembly etc...,0,,0
8b562b7,2011-03-28 04:19:53,Use standard C++ string conversion and parsing instead of the sort-of-standard C functions that were giving Cygwin trouble,0,,0
5a54840,2011-03-28 13:04:54,support for object-based QOI functions and derivatives,0,,0
38d9796,2011-03-28 13:44:32,still need stdarg.h for variable-length arguments,0,,0
e10d35a,2011-03-28 15:47:11,string.h needed for strcmp  strncmp  strlen  strncpy,0,,0
7750ef6,2011-03-28 16:17:08,Changed default output data format for RB output vectors  they are now written to a single file outputs.dat by default  rather than to multiple files. The boolean multiple_files_for_outputs in RBEvaluation controls whether we write to a single file or multiple files.,0,,0
bfcfd77,2011-03-28 16:40:09,Do parallel_only verification on libMeshInit,0,,0
dece5d1,2011-03-28 18:14:12,Revert to strtok_r for now,0,,0
bb601ea,2011-03-28 19:21:27,An fopen failure isn't an internal problem to assert away  it's something to always test and potentially throw a file error exception for.,1,,0
059e3ac,2011-03-29 20:16:45,setting CC_TRY_LIST and then overwriting it is not a good idea...,0,,0
2b7e018,2011-03-30 14:20:37,Replaced usage of strtok_r with std::string operations.  strtok_r is deprecated on some systems and is not available on some flavors of Cygwin.,0,,0
2a8e2de,2011-03-30 16:15:50,include <time.h>  this error was discovered on cygwin.,1,,0
48ab641,2011-03-30 16:36:44,Some small changes to the RB classes. In particular  made residual_scaling_denom return alpha_LB rather than sqrt alpha_LB  since that is the appropriate default for a coercive problem.,1,,0
1a5ae00,2011-03-30 17:58:37,Remember to read comments off of the end of vector<complex> data,0,,0
3f10167,2011-03-30 18:53:33,Detect Intel v12 compilers,0,,0
53a64c4,2011-03-31 04:44:04,Changed add_new_rb_evaluation_object so that it returns a pointer to the newly added RBEvaluation object.,0,,0
8bc3d84,2011-03-31 21:03:13,Disable example VTKIO(ParallelMesh) output until we can get that working,0,,0
ee637d6,2011-03-31 21:04:09,Disable adaptive coarsening examples when --enable-parmesh is on until that bug is fixed,1,,0
a75d28a,2011-03-31 21:06:34,Bug fixes and workarounds for serial output of ParallelMesh.  We no longer require the user to allgather() by hand  so now ParallelMesh users can use serializing I/O safely and will benefit when it gets more parallelized under the hood.,1,,1
fd15305,2011-03-31 21:35:45,MeshData is now libmesh_deprecated(),0,,0
7dc88e4,2011-03-31 22:32:55,Bug fix for ambiguous var name,1,,1
9b553c3,2011-04-01 04:11:43,Added Parallel::barrier() to synchronize before creating an Xdr object to avoid errors in parallel.,1,,0
a06d489,2011-04-01 11:51:41,Fixes for compiler warnings,1,,0
7ea67da,2011-04-01 20:27:52,Fixed incorrect if-statement in boundary_id() and boundary_ids() functions.,1,,1
93e75b7,2011-04-05 15:11:08,Removed the QNTransient classes from rbOOmit. These classes are too specific to live in libMesh  they should be viewed more as an rbOOmit-based application code. Also  wrapped F_q  A_q and M_q representor initializations in if-tests to prevent potential memory leaks.,0,,0
7cd6c0e,2011-04-05 18:20:52,rbOOmit change: Pulled the basis dependent Riesz representors out of RBSystem and subclasses  and moved them into RBEvaluation and subclasses.,0,,0
4d0879d,2011-04-05 20:14:02,Cleaned up the code for clearing RB systems. It can mostly now be done by clearing the associated RBEvaluation object  do not need the complicated clear_basis_dependent_data etc any more.,0,,0
4f1d850,2011-04-06 03:39:56,Added clear_riesz_representors() to RBEvaluation to clear the Riesz representor vectors used in computing the residual in the RB method. This can allow us to save memory when we train many bases.,0,,0
e0e5e4c,2011-04-06 06:49:37,rbOOmit change: Moved Fq_representor_norms from RBEvaluation into RBSystem  since they are not basis dependent,0,,0
582a57b,2011-04-06 16:02:34,add callback for extra send_list entries,0,,0
7ca0720,2011-04-06 16:02:47,cleanup refinement flags on init and read,0,,0
e1b893b,2011-04-06 16:28:14,rbOOmit change: Changed DerivedRBEvaluation so that clear resets residual_type_flag to RESIDUAL_WRT_UBER. This can be important in hp calculations  for example.,0,,0
1da8fb6,2011-04-06 20:46:49,Use LibMeshInit,0,,0
a039a2a,2011-04-06 23:30:09,System::print_info now outputs some DofMap information about sparsity and constraints,0,,0
f0d00d8,2011-04-07 17:57:59,Changed some DenseMatrix methods so they behave with empty matrices. rbOOmit change: Modified the train_reduced_basis method so that it starts with N=0  also had to change RB_solve so it works for N=0  changed default error bound mode to absolute rather than relative.,1,,0
ae0f470,2011-04-07 22:19:52,rbOOmit change: added resize_RB_data in RBEvaluation  which clears and resizes all the data that depends on the reduced basis space. This allows us to change the amount of data a given RBEvaluation can hold.,0,,0
9b8ca55,2011-04-08 13:22:07,fix newline warning,1,,0
cfbe357,2011-04-08 15:16:57,return value warning on gcc-4.1 fixed.,1,,1
2e4be07,2011-04-08 22:44:43,If we read system data from a file that has fewer variables than our current system  let's remap that data onto our own variables of the same name.  This enables physics-upgrading restarts.,0,,0
23ff717,2011-04-10 20:52:31,Major rbOOmit revision: removed the function-pointer based assembly and replaced it with object-based assembly via RBTheta and ElemAssembly. This approach is much more flexible. Made corresponding changes in ex23.,0,,0
6bde4db,2011-04-11 19:52:03,Nemesis reader now reads sidesets.,0,,0
eb2b119,2011-04-11 20:33:01,Don't call ex_get_side_set unless there are sidesets to get  otherwise Exodus prints an annoying warning.,0,,0
4fd7960,2011-04-11 21:20:51,Fixed overzealous assert.,1,,1
46a0746,2011-04-11 22:12:05,Need to also read and write header information in order to do correct basis function IO in RBEvaluation.,0,,0
01fa209,2011-04-11 23:28:22,Nemesis now reads nodesets.,0,,0
4c648c4,2011-04-12 16:36:03,Only check for PETSC_ARCH (and disable PETSc if not present) in PETSc 2.x builds.,0,,0
ec5cca0,2011-04-13 03:20:05,Increment reference counter if the copy constructor is called,0,,0
cc162e2,2011-04-13 14:22:17,Call base class copy constructor  otherwise compiler warns in dbg mode...,0,,0
f6a6c0e,2011-04-13 19:37:04,Fix for false negatives in Tet::is_child_on_side,1,,1
0e3bc0a,2011-04-13 19:55:51,"Exodus files also call Quad4's ""quad4"" in addition to QUAD  QUAD4  and quad.",0,,0
ec81c50,2011-04-13 19:57:36,Made the compile line more modular.,0,,0
95a2a09,2011-04-13 19:59:49,Nemesis no longer trusts the input file to tell it the mesh dimension... instead it determines that from the dimensions of all the elements it actually reads in.,0,,0
a5c4515,2011-04-14 14:08:04,Fix memory leak reported by valgrind.,1,,1
83a87df,2011-04-14 14:17:46,avoid cast warning on gcc-4.1,0,,0
330cf38,2011-04-14 16:17:37,Derek's fixes for ParallelMesh stuff.,1,,1
dff2f9e,2011-04-14 19:39:13,We need to call is_child_on_side() from the parent for it to be correct on tets  due to the diagonal selection trick.,0,,0
c9a868e,2011-04-14 20:02:47,Use the correct configure result for xz support,0,,0
bf81bbe,2011-04-14 22:58:55,Better (and race-condition-free when two apps read the same zipped file at once...) xz/bzip2 support,0,,0
7e2e6ca,2011-04-14 23:03:36,Tagging 0.7.1-rc1,0,,0
1a40b4e,2011-04-14 23:40:08,Left pad filenames with zeroes to match nemesis behavior.,0,,0
f7f4054,2011-04-15 14:49:27,avoid divide by 0 for explicit sytems,0,,0
1f8f0da,2011-04-15 15:28:29,Derek's fixes for --disable-amr.,1,,1
d62bf67,2011-04-15 15:49:30,Changes log from 0.7.0->0.7.1,0,,0
3c955a0,2011-04-15 17:30:00,Changed plotting from GMV to ExodusII.,0,,0
6b8356e,2011-04-15 18:05:12,Revert accidental turning on of verbose mode in Nemesis_IO.,0,,0
6044fd0,2011-04-19 07:23:18,Fix for --disable-amr --disable-periodic,1,,1
2a5805c,2011-04-19 13:35:57,.) Implemented partitioning for ParallelMesh.,0,,0
8f105bb,2011-04-19 14:50:30,UnstructuredMesh does not need to redefine partition() if it does not extend it.,0,,0
f796d95,2011-04-19 18:51:33,add ability to insert extra ghosted dofs,0,,0
d2ac2c2,2011-04-19 18:51:56,allow for turning off partitioning,0,,0
6.421e+54,2011-04-19 19:10:08,We want to use LIBMESH_OPTIONS everywhere - start_in_debugger is nice...,0,,0
a29c0c8,2011-04-19 20:16:35,Fix for now-overzealous assertion: we can read_additional_data even on systems with already-initialized vectors.,1,,1
2e05bbd,2011-04-19 20:30:15,Disable some AMR-only examples when --disable-amr is used,0,,0
f7ef34d,2011-04-19 20:34:22,Fix for inefficient send_list bug with --disable-amr,1,,1
16dd5e2,2011-04-19 22:30:47,Some more flexible quiet/verbose options for DiffSolver,0,,0
88914de,2011-04-19 23:21:26,remove debug printing,0,,0
d379d19,2011-04-20 16:05:56,actually implement BoundingBox::intersect(),0,,0
50a0d9a,2011-04-20 18:50:40,Fix for PointLocatorTree application to non-planar 2D meshes,1,,1
657f732,2011-04-20 18:55:14,Don't call redistribute  etc. if this is actually a serial mesh but libmesh was configured with --enable-parmesh.,0,,0
9da87ec,2011-04-20 19:22:16,Fix global Parallel::set_union() implementation,1,,1
33d27cc,2011-04-20 19:40:27,Fix for how-the-hell-did-this-compile-for-me error in global Parallel::set_union,1,,1
92f5e64,2011-04-20 19:41:19,Handle repartitioning of fewer-elements-than-processors non-serial meshes,0,,0
b25ee68,2011-04-20 20:47:24,Need to disable ParallelMesh non-serial repartitioning for 0.7.1  it'll need a lot of work before it works with refinement.,0,,0
24dfff7,2011-04-20 21:27:44,Fix test for std::hash,1,,1
d6c1f84,2011-04-20 21:34:33,Don't catch exceptions in ex26/ex27  we don't expect convergence failures but we do expect possible logic bugs when developing,1,,0
867d856,2011-04-20 22:02:59,Make sure parallel_only() failures occur at a libmesh_assert() which gives us a nice stack trace  not at a weird internal MPI buffer size mismatch error.,1,,1
9525ee6,2011-04-21 00:45:00,Adding Elem::replace_child  to make ParallelMesh modification code easier,0,,0
60053b0,2011-04-21 00:45:26,Partitioner::partition is parallel_only(),0,,0
aae76ee,2011-04-21 00:46:08,prepare_for_use() is parallel_only,0,,0
cb91480,2011-04-21 00:46:56,Copy constructor bugfix  extra assertions for ParallelMesh,0,,1
bdd8aed,2011-04-21 00:47:35,Bugfixes for ParallelMesh copy constructor,0,,0
f2f70f7,2011-04-21 01:15:12,Fix for SerialMesh::delete_node(),1,,1
1b89174,2011-04-21 01:17:20,Fixes for ParallelMesh::all_first_order().  Not good enough to make plot_error() work with a non-serial ParallelMesh  but we're getting closer...,1,,1
3867ee6,2011-04-21 06:51:04,Update libmesh_example_asserts for PETSc-only code,0,,0
75b9641,2011-04-21 15:57:46,TypeVector with LIBMESH_DIM < 3 no longer mollycoddles weak code.,0,,0
908c9f7,2011-04-21 17:02:25,Many library changes to optimize  and conform to new stricter --enable-2D-only TypeVector behavior,0,,0
5951497.0,2011-04-21 18:29:33,really fix BoundingBox::intersect(),1,,1
2b6db26,2011-04-21 23:35:43,Fix that BoundingBox::intersect test for LIBMESH_DIM < 3,1,,1
405c172,2011-04-22 00:20:06,"Make ex1 -o option more robust  actually test it in ""make run"".",0,,0
66ea92c,2011-04-22 04:12:18,add BoundingBox::contains_point... taking into account Roy's changes to intersect,0,,0
ad7944e,2011-04-22 15:25:56,Cleaned up and clarified a few comments,0,,0
a540f5b,2011-04-22 17:01:44,Add some comments to remind us about a thread safety gotcha when we multithread these loops,0,,0
6ae8bd3,2011-04-22 17:04:11,Fix and API change to make MeshBase::point_locator() thread-safe,1,,1
f803303,2011-04-22 18:13:16,We can't always link examples until the library's been built,0,,0
711c299,2011-04-22 18:32:39,Efficiency improvements (and a few const-correctness improvements) for periodic boundaries code,0,,0
148bcd2,2011-04-22 18:56:59,A slightly lower tolerance still gives good default results,0,,0
3a490e4,2011-04-22 23:06:48,Restoring (deprecated) point_locator() for backwards compatibility  new thread safe function is now sub_point_locator(),0,,0
a4f4b9f,2011-04-22 23:10:19,Tagging libMesh 0.7.1 (hopefully final),0,,0
88d14e5,2011-04-23 07:27:51,add missing include,0,,0
2319686.0,2011-04-23 14:08:31,Turn down the analytic Jacobian tolerances so they don't fail on single-precision tests,1,,0
a563f62,2011-04-23 15:54:58,Fix for bug in weighted sensitivity solve code when assemble_before_solve was turned off,1,,1
f1ed15d,2011-04-23 17:03:32,Fix example 28 for 1D,1,,1
44cc4a7,2011-04-23 17:34:47,Work with separate libMesh namespace,0,,0
402b556,2011-04-23 19:46:18,Fixes for separate libMesh namespace,1,,1
5c6b12d,2011-04-23 23:42:31,Fix a comment typo  mistake,1,,1
2a17eac,2011-04-23 23:54:47,More robust assertion code,0,,0
e564398,2011-04-23 23:55:21,Let's verify that set_node_processor_ids worked,0,,0
e5d3a0d,2011-04-24 00:36:24,Add missing initializer,0,,0
69cd4aa,2011-04-24 02:20:19,Fix for the previous ParallelMesh::all_first_order fix.  plot_error and ex26 seem to be working with ParallelMesh now.,1,,1
b53114c,2011-04-24 02:37:10,Disable blas/lapack use in non-double-precision cases  I'm seeing memory corruption when using this with triple-precision and threading.,0,,0
6965656.0,2011-04-24 04:46:25,Fix error message formatting,1,,0
4db9134,2011-04-24 05:01:28,The safe perturbation size we can take depends on floating point tolerance.  Of course it depends on solution scaling too  but nothing we can do about that outside user code...,0,,0
88b9490,2011-04-24 05:02:10,Tweak the ex26/ex27 tolerances so that the numerical jacobians aren't too far off in single-precision mode,0,,0
92442d5,2011-04-24 15:03:59,"Another ""32 bit floats suck"" change  ex27 now passes in single precision too.",0,,0
bd2a83f,2011-04-24 15:05:34,In fact  let's just give users an example of turning off jacobian verification instead.,0,,0
88dda4e,2011-04-25 14:30:20,Updated publications list for April 2011.,0,,0
9bd4f9c,2011-04-25 15:15:59,change in RBSystem  do not read store_non_dirichlet_operators in from input file.,0,,0
cca0522,2011-04-25 17:19:55,Adding gitignore to libmesh.,0,,0
7837dce,2011-04-25 20:03:58,Adding (untested!) quadruple-precision support.,0,,0
17df42a,2011-04-27 02:01:31,short circuit vector_mult for empty matrix,0,,0
0c524e3,2011-04-27 16:34:05,add more functions to stub spin_mutex,0,,0
70e7f51,2011-04-27 16:37:30,Optimize away transcendental (or even repeated plain arithmetic) FLOPs in PatchRecoveryErrorEstimator,0,,0
3636cb8,2011-04-27 21:20:14,Fix status message grammar,1,,1
bafaff0,2011-04-28 00:09:06,nemesis mesh output working,0,,0
6fb6661,2011-04-28 00:09:25,working nemesis output,0,,0
43f0c9e,2011-04-28 00:09:34,nemesis mesh output working,0,,0
8d07b78,2011-04-28 00:09:43,remove some debugging print statements,0,,0
2a164ae,2011-04-28 00:09:51,don't serialize mesh for parallel output formats,0,,0
08c7f2d,2011-04-28 00:10:00,fix nemesis filename padding,1,,1
220c0a4,2011-04-28 00:10:17,Fixed swapped meaning of global_elem_blk_ids and global_elem_blk_cnts.  Removing unused variable warnings.,1,,1
acf29ae,2011-04-28 00:10:30,Write zero size blocks if certain partitions don't have any elements in them on a given processor.,0,,0
1f29efb,2011-04-28 00:10:44,Refactoring: Moved sideset writing code to its own function.,0,,0
b711017,2011-04-28 03:41:47,make nemesis output solutions,0,,0
8225486.0,2011-04-28 14:43:39,1.) tecio.a support for latest OSX 2.) extended user-provided object support to the nonlinear system and solver interface.  this required creating abstract base classes inside the NonlinearImplicitSystem which the user can derive from to implement residual and jacobian computation.  additionally  the NonlinearSolver was extended to include pointers to user-provided objects of these types.,0,,0
c295a9b,2011-04-28 22:53:39,Print error messages to std:err and give more descriptive error message when opening a file fails.,1,,0
782a229,2011-04-29 01:37:00,Fix for --disable-exodus/nemesis,1,,1
a43f131,2011-04-29 19:22:30,Support string<->enum conversion for NODEELEM,0,,0
af6b234,2011-04-29 19:47:30,Added exodus files to git ignore list.,0,,0
07f643e,2011-04-30 04:00:34,Patch from Vikram Garg: Create (and have ImplicitSystem use) LinearSolver::adjoint_solve Override PetscLinearSolver::adjoint_solve to use KSPSolveTranspose Add option to reuse preconditioners Test this option in ex26,1,,1
059bbd3,2011-05-02 20:00:13,Call write_timestep only on processor 0 for exodusII,0,,0
990ea13,2011-05-02 21:35:10,"Made all conversions take an additional argument for the inverse node map.  For all elements except hex27  the ""inverse"" node map is identical to the forward node map.",0,,0
7bf51e6,2011-05-02 22:07:49,Ex4 5 11 13 14 15 18 19 22 25 28 now write out .e files instead of .exd,0,,0
2ae531f,2011-05-03 14:28:49,Patch from Boyce Griffith to enable more flexible FE reinit options,1,,1
363502e,2011-05-03 15:45:35,Fixes for segfault  possible caching bug,1,,1
7065b6d,2011-05-03 16:42:51,Slightly more legible fix for caching,1,,1
2cbd66d,2011-05-03 17:12:14,Fixes for FEXYZ,1,,1
b1b1baf,2011-05-03 23:14:36,Updated publications for May 2011.,0,,0
c1e689a,2011-05-05 13:21:34,Bugfix from Boyce Griffith for caching on new edge_reinit,0,,1
f2bb451,2011-05-05 17:36:33,New patch (of elements) reuse option to PatchRecoveryErrorEstimator  based on a patch (of software) from Vikram Garg.  Turning this on by default since it's much faster and still gives decent results in our tests.,1,,0
4e68bbf,2011-05-05 17:39:53,Set svn:ignore,0,,0
c601baa,2011-05-05 18:54:20,"Added new utility header and (empty) source file for the ""hashword"" implementation by Bob Jenkins.",0,,0
65cf99b,2011-05-05 20:15:22,Make patch_reuse a runtime option in example 26,0,,1
c13619e,2011-05-05 20:16:06,Removing some debugging chatter,0,,0
8376a56,2011-05-05 22:24:21,Avoid unused variables warning,0,,0
2201a45,2011-05-09 16:15:27,Adding an Elem::print_info() method for debugging,0,,0
2462db8,2011-05-09 16:18:26,Let's not forget to print element ids...,0,,0
63c6f16,2011-05-09 16:19:13,Print lots of element info whenever we get an inverse map convergence failure  and even when we just see an anomously large Newton step,0,,0
4472bd1,2011-05-09 17:45:48,Fix get_info/print_info for non-infinite elements,1,,1
be8370c,2011-05-09 18:08:10,Removing redundant copy,0,,0
99e9477,2011-05-09 18:21:24,Fix for non-on/off QoI weights,1,,1
e155b60,2011-05-09 18:22:54,Add setter function for QoISet  more complete citation of idea,0,,0
5898d5c,2011-05-09 18:38:37,Make our getter const  now that we've got a separate setter.,0,,0
530771f,2011-05-09 18:39:03,Bug fixes for QoISet example,1,,1
5d0342f,2011-05-09 19:27:29,Remove redundant extra error estimate at the end of the adaptive loop  we can put this back when we have an AdjointRefinement or something equally good to demonstrate instead.,1,,0
6267c27,2011-05-09 19:47:56,It's apparently possible for Newton to step well outside the master element but then come back in and converge properly.  So let's not die or scream unless we have a real divergence.,0,,0
3a8454a,2011-05-09 20:22:17,Restoring old qoi_set() setter API for compatibility,0,,0
704dc1e,2011-05-10 18:45:14,Move print_trace() to a terminate_handler - that way it happens for all uncaught exceptions  not just libMesh errors.,1,,0
a805c60,2011-05-11 16:19:52,modify system update to use ghosting,0,,0
bb3936e,2011-05-12 18:29:35,restructured DofObject internal storage,0,,0
f8c2dfe,2011-05-12 18:41:24,only set the old_dof_object if the current system has DOFs.  prevents the case of multiple systems being initialized successively - in the old implementation the first system would initialize and not set the old_dof_object.  then the second system would initialize and set the old_dof_object because the first system had added DOFs.  this fixes that erroneous behavior.,1,,1
14e6b63,2011-05-12 18:55:32,LocationMap::key() changes,0,,0
910f49b,2011-05-12 20:15:14,typedefed the storage to make it easier to play with other allocators later on,0,,0
d11affd,2011-05-12 21:02:32,Fix for old off-by-one error in refinement flagging,1,,1
e998a49,2011-05-12 22:00:16,Fix unused variable warning in fe_map.C,1,,0
e003e9f,2011-05-13 12:48:40,Update the subset of boost we include in contrib.  Added the pool allocator  this looks great for helping reduce the storage overhead and time associated with allocating many small objects.  Also added the test_boost.C file to make sure we can use the subset of boost we actually want.,0,,0
d0317d0,2011-05-13 17:31:25,look for boost  use contributed minimal one if not found,0,,0
72683f7,2011-05-13 17:39:00,add boost include path,0,,0
f6bba15,2011-05-14 03:23:45,Fix error messages  end unused vars warning,1,,0
801ab27,2011-05-14 04:56:18,Some fixes (still woefully incomplete) for ParallelMesh adaptive coarsening  and a new Elem::total_family_tree utility function,1,,1
4f7731c,2011-05-14 12:51:58,keyword expansion  added pooled allocator interface which is not used anywhere yet,0,,0
3197fb3,2011-05-15 22:39:04,fast pool allocator,0,,0
2213982.0,2011-05-16 15:04:59,Do some bounds checking in ExodusII Conversion class.,0,,0
f7de747,2011-05-16 15:34:52,Reverted faulty assert logic.,0,,0
5a2c265,2011-05-16 16:42:33,Bounds checking in ExodusII_IO_Helper::Conversion.,0,,0
f13d66b,2011-05-16 17:22:06,add methods to allow copy construction of objects using PoolAllocator<>,0,,0
e8e11f0,2011-05-16 17:44:54,Actually check against the array length  not the size of the array in bytes.,0,,0
13522f0,2011-05-16 17:52:28,Make macro a little safer by adding parentheses.,0,,0
537911c,2011-05-16 20:43:21,Updated developers list.,0,,0
7f22ad7,2011-05-16 21:11:47,updated www.mit.edu URL,0,,0
09c9877,2011-05-16 21:50:47,Added evaluate_RB_error_bound flag to RBEvaluation  allows us to turn off error bound calculation if it is not necessary (can save time in the Online stage).,1,,0
d7abcd0,2011-05-17 02:51:02,Adding MeshTools::libmesh_assert_valid_elem_procids() test,0,,0
4bf8b3a,2011-05-17 03:19:04,Fix for processor_id setting on subactive elements.  Adaptive coarsening on ParallelMesh still doesn't work (at the very least it needs DofObject communication) but it gets further now.,1,,1
1.2e+18,2011-05-17 14:52:29,Fixed typos when !LIBMESH_HAVE_BOOST..,1,,0
0b4eff2,2011-05-17 22:22:41,Fix MeshModification::distort() and MeshModification::scale() for ParallelMesh,1,,1
0449dd8,2011-05-17 22:30:14,Marking a couple more functions parallel_only(),0,,0
7213cad,2011-05-18 05:12:50,A couple more ParallelMesh fixes... these aren't actually distributed mesh specific  just corner cases I've never managed to trigger with a SerialMesh,1,,1
34320bd,2011-05-18 05:30:19,BoundaryInfo::sync() works on any UnstructuredMesh  this should let apps choose between ParallelMesh and SerialMesh boundary meshes at runtime.,0,,0
f7c2f4c,2011-05-18 15:15:15,Fix for --disable-amr,1,,1
ee3c4d0,2011-05-18 17:08:02,Removed an assert which can be overzealous if triggered after coarsening but before partitioning,0,,0
fcebe4b,2011-05-18 22:30:56,Support out-of-order and sparse add_elem on SerialMesh  this doesn't break anything and it's the easiest way to make some higher level code ParallelMesh/SerialMesh agnostic.,0,,0
6e503db,2011-05-19 14:26:32,Fix for --disable-amr,1,,1
13d968c,2011-05-19 22:45:16,New Parallel::StandardType<T> for more automatic generation and use of built-in and derived MPI types.,0,,0
f4d5d51,2011-05-20 16:16:07,If Parallel:: functions expecting equal buffer sizes are passed inequal buffer sizes  in DEBUG mode we want to catch that with a nice libmesh_assert rather than relying on the mercy of the MPI stack for a comprehensible error message.,1,,0
7d3b9c8,2011-05-20 19:55:18,Early return for a degenerate case,0,,0
29c2d43,2011-05-20 21:16:59,Refactoring MeshOutputSerializer -> MeshSerializer,0,,0
b064cf8,2011-05-21 03:51:30,Fixes for --disable-mpi,1,,1
308753b,2011-05-23 15:28:21,Added inline libmesh_ignore() utility function.,0,,0
07cb552,2011-05-23 17:10:34,A fix for an unlikely degenerate case  plus a similar fix for a just-introduced bug.,1,,1
0e9dd5a,2011-05-23 22:12:28,Added MeshTools::libmesh_assert_valid_stuff_some_more to aid in ParallelMesh restart debugging,0,,0
db00647,2011-05-24 04:02:38,libmesh_assert_valid_refinement_tree is no longer overzealous on a distributed mesh,0,,0
e2a25b1,2011-05-24 04:23:17,A little more debugging for delete_remote_elements and MeshCommunication::redistribute.,0,,0
89d6b53,2011-05-24 16:02:36,print system number,0,,0
eae024c,2011-05-24 16:18:57,add a function to remap subdomain ids,0,,0
3d9a33a,2011-05-24 16:21:12,Provide a way to support >65 534 processors,0,,0
c8a0864,2011-05-24 16:45:25,Fix recalculate_n_partitions() to work with ParallelMesh,1,,1
325dafe,2011-05-24 16:47:39,Make MeshSerializer default to true  for slightly cleaner syntax in non-MeshOutput uses.,0,,0
68e8286,2011-05-24 16:49:02,Fix a buggy was-supposed-to-be-temporary mesh serialization by replacing it with MeshSerializer,1,,1
e7a5826,2011-05-24 16:49:57,Fix typo in comment,1,,0
8ca215d,2011-05-24 16:57:48,Parent processor ids need to be based on (and only on) their active descendants,0,,0
2d8097a,2011-05-24 20:45:53,Fix for make_links_to_me_remote() with boundary elements,1,,1
126dc1f,2011-05-24 20:47:22,Additional debugging in delete_remote_elements  and fixes for boundary meshes,1,,1
485ab95,2011-05-24 20:59:50,Major rbOOmit change: Reorganized code so that RBEvaluation does not refer to RBSystem. RBBaseSystem and RBEvaluation both inherit from RBBase  which defines a parameter domain and stores an RBThetaExpansion object. Also  we now store data for a temporal discretization in a TemporalDiscretization object to avoid duplication between TransientRBSystem and TransientRBEvaluation.,0,,0
856e855,2011-05-24 21:08:35,Add -Wextra warnings for gcc,0,,0
690aa92,2011-05-24 21:09:24,Fix for one parallel.h unused variables warning  John is working on the fix for the other.,1,,1
27dc837,2011-05-24 21:23:19,Keep the ParallelMesh max_*_id counts in sync after partitioning,0,,0
300e8c9,2011-05-24 22:25:38,Fix new assertion,1,,1
9384c4c,2011-05-24 22:46:03,Marking a parallel_only function,0,,0
49e83f6,2011-05-25 01:46:35,rbOOmit change: Removed redundant call to build_temporal_discretization in transient_rb_system.C,0,,0
c964faa,2011-05-25 01:54:50,Corrected comment in ex23.C,0,,0
1dbf11c,2011-05-25 14:06:09,Removed unnecessary includes in rb_base.C,0,,0
975145c,2011-05-25 14:07:01,allow for point value to optionally return 0 if the point is not found.  this is required for example when comparing TC stacks to an ablator problem where a TC eventually burns out and leaves the domain.,1,,0
9480bd9,2011-05-25 17:13:13,Add insist_on_success option to System::point_gradient/hessian  too,0,,0
7ca0523,2011-05-25 18:04:16,ex10 finally passed my tests with ParallelMesh  let's get that into regression tests now.,0,,0
75096c7,2011-05-25 19:52:04,Make BoundaryInfo::sync() ParallelMesh-friendly  always keep boundary mesh partitioning to match interior mesh  and refactor multiple sync() variants to use one code path.,0,,0
5865213.0,2011-05-26 17:09:33,We can return const references from const methods - that should be just as cheap for an inline function and it makes Parallel:: operations on these objects easier.,0,,0
0e59ffb,2011-05-26 17:43:17,A few refactoring tweaks to StandardType  plus a change to catch compile-time errors using it.,1,,0
6e388bf,2011-05-26 17:47:34,Add (and use) Parallel:: support for our 3-vectors and 3x3-tensors,0,,0
02bb036,2011-05-26 18:26:01,rbOOmit change: Replaced function pointer parametrized_function_ptr by a functor class ParametrizedFunction in RBEIMSystem.,0,,0
14becd5,2011-05-26 19:48:33,Support (and use) Parallel:: operations on Points,0,,0
fec7b23,2011-05-26 19:55:32,Parallel::set_union works now  so we can use it for Nemesis,0,,0
adffc4f,2011-05-26 21:16:01,Hilbert indices are *unsigned* ints.,0,,0
c4f78dd,2011-05-27 03:44:55,rbOOmit change: Cleaned up recent changes a bit. RBThetaExpansion no longer stores a parameter reference  it is a more pure functor-like object now where parameters get passed in. In RBBase  rb_theta_expansion is now a raw pointer rather than AutoPtr since we may want to share the pointer (shared_ptr may ultimately be better). eval_theta_q functions are now in RBThetaExpansion  not in RBBase.,0,,0
618a987,2011-05-27 13:57:17,Modified white space in rb_theta_expansion.C,0,,0
484090b,2011-05-27 19:34:55,Cleaned up whitespace for consistency in transient_rb_theta_expansion.C,0,,0
3ab8711,2011-05-27 21:15:34,rbOOmit change: Further improvements to the rbOOmit API  related to separation of Construction and Evaluation stages. We now only call RBSystem::initialize_RB_system if we need to do truth-dependent calculations  for Online (evaluation) calculations  we do not need RBSystem::initialize_RB_system  we just use an RBEvaluation instead.,0,,0
53061f4,2011-05-31 14:34:07,more readable print_info(),0,,0
57ba14e,2011-05-31 18:05:57,Let's just use Hilbert::inttype and not make assumptions about how it was configured.,0,,0
82dc070,2011-05-31 19:06:44,"Remove static libraries before archiving objects into them - otherwise with ""ar rv"" the binary output of deleted source files never gets removed!",0,,0
c523e3b,2011-06-01 18:40:49,rbOOmit change: rearranged headers a bit,0,,0
3d9b111,2011-06-01 23:22:47,Fixes for --disable-mpi,1,,1
5f7e147,2011-06-03 16:34:52,Avoid warnings in non-double-precision cases,0,,0
e8206f0,2011-06-03 16:44:41,Fix for --disable-second,1,,1
be1cea7,2011-06-03 21:10:52,Performance improvements for find_*_neighbors  and a new find_point_neighbors version for finding neighbors at just one point,0,,0
0b752eb,2011-06-05 02:06:43,rbOOmit change: Got rid of initialize_mesh_dependent_data flag in RBSystem  it is no longer necessary now that RBEvaluation has been separated from RBSystem.,0,,0
ce8bbb7,2011-06-06 01:31:48,rbOOmit change: Modified RBSystem so that by default it just has one pointer to an RBEvaluation  since this is the most relevant default case. Derive from RBSystem to use than one RBEvaluation.,0,,0
dc5a9b0,2011-06-06 03:34:46,rbOOmit change: RBSystem no longer deletes rb_eval in the destructor.,0,,0
430fa9e,2011-06-06 03:49:43,Changed reference to pointer in rb_system.C,0,,0
7feffe1,2011-06-06 17:13:10,Cleaned up some commenting in rbOOmit,0,,0
1988415.0,2011-06-06 19:18:38,Fixing sidesets on Prisms with adaptivity,1,,1
49d99da,2011-06-07 21:35:30,Fix System::update() workaround.  This should still employ the fix that Derek put in for parallel->ghosted update()  it should fix any similar bug with other uses of localize()  and it should fix the Trilinos and noMPI regressions that the previous workaround had caused.,1,,1
1ceb9d3,2011-06-08 17:24:00,rbOOmit change: Renamed RBSystem to RBConstruction. This name is much more appropriate because now the code is structured so that the Evaluation stage is encapsulated in RBEvaluation  and RBConstruction handles Construction of an RB space.,0,,0
dbc1254,2011-06-08 18:38:21,"Fix for overzealous assert David Andrs caught  if processor 0 has no DoFs then it's ""last DoF index"" ends up being UINT_MAX.",1,,1
f850218,2011-06-08 20:22:40,Removed redundant print statement,0,,0
2be893b,2011-06-08 20:30:54,indenting fix,1,,1
7cf2311,2011-06-09 16:07:48,make_dependencies should work for c files too,0,,0
7bc0131,2011-06-09 17:32:42,Make it possible to instantiate a base System,0,,0
2a22077,2011-06-09 17:33:04,TransientBaseSystem for Derek,0,,0
e819840,2011-06-09 17:34:25,.depend should also include the .c files  and depends on every file it scans,0,,0
b3adbe9,2011-06-09 17:36:00,Relying on GNU Make to auto-regenerate .depend based on its include line seems to work better than putting it in .PHONY  this seems to fix the problem where Make would update .depend every time but would use the pre-updated version.,1,,0
2533d1b,2011-06-09 18:00:18,"Added ""ignore_warnings.h"" and ""restore_warnings.h""  so we can keep the libMesh warning levels cranked up even in the presence of less clean headers.  With my gcc 4.5 version this is at least enough to shut up ""unused variable"" warnings from the MPI headers  gcc 4.6 and later ought to be more useful still.",0,,0
55c21b3,2011-06-09 19:10:42,No need for meshtool to abort just because we printed the usage message,0,,0
7a91079,2011-06-09 20:00:39,More informative error message,1,,0
998c693,2011-06-09 21:50:15,Intel compilers lie about being __GNUC__,0,,0
f2e4101,2011-06-09 22:34:19,Minor bugfixes for Trilinos algebra.  This fixes the ex19 regression and make the trilinos nonlinear solver compatible with Ben's new function-object interface.,1,,1
25cf8ce,2011-06-09 22:49:33,Added meshbcid utility,0,,0
155ce03,2011-06-10 15:24:02,expose petsc callbacks and allow users the option to call SNESSetJacobian on their own,0,,0
25f6965,2011-06-10 15:24:18,allow assignment between ghosted and serial petsc vectors,0,,0
ad52558,2011-06-10 15:24:33,Ghosted solution has to be closed on System::update,0,,0
ac95f2c,2011-06-10 17:20:14,New app to update element subdomain IDs  sideset IDs and nodeset IDs,0,,0
6201259.0,2011-06-10 17:28:22,Close solution vectors before system update,0,,0
cb43805,2011-06-10 17:44:22,Fixing shameful bug from previous commit.,1,,1
3a70760,2011-06-10 18:00:03,Make sure examples/*/.depend get updated when necessary,0,,0
bb0131c,2011-06-10 18:55:12,Moving close() of ghosted vectors from System::update() into PetscVector,0,,0
e9f1ebb,2011-06-10 23:15:10,Adding Elem::opposite_node and Elem::opposite_side functions  useful for us benighted souls working on semi-structured grids.,0,,0
f4658dd,2011-06-13 17:11:35,Fix slightly outdated ExodusII API where future patch will be applied,1,,1
81d0d29,2011-06-13 22:29:28,Updated .gitignore.,0,,0
e7ab1a7,2011-06-14 19:53:28,Updates to TetGenMeshInterface:,0,,0
8cbd144,2011-06-15 16:01:06,Using MeshBase::sub_point_locator() can be much much cheaper than building a new tree from scratch.,0,,0
e328798,2011-06-15 16:56:49,Avoid unused variable warning,0,,0
98e80ad,2011-06-15 17:05:08,Add a PerfLog entry for PointLocatorTree - that can be awfully expensive sometimes...,0,,0
4f0dcca,2011-06-15 17:12:36,Knowing when the tree fails and we're stuck with a linear search is useful for performance testing too,1,,0
3ee98f1,2011-06-15 17:27:58,"Optimize Elem::contains_point for the ""often-false"" use case",0,,0
ae66e56,2011-06-15 17:34:16,Disabling contains_point optimization for now - there's a false negative case possible.,0,,0
4cd36a8,2011-06-15 17:48:42,Fixes (to commented out code...) for LIBMESH_DIM < 3,1,,1
984e3dd,2011-06-15 18:03:53,Reenable contains_point() optimization  but only for first order elements,0,,0
6ac5ccd,2011-06-15 20:48:49,Adding projection app,0,,0
97e06f4,2011-06-16 00:34:59,Now Quad::opposite node returns correct values on *all four* sides! ...,0,,0
39c454f,2011-06-16 13:33:32,"Need an explict include of ""libmesh_logging"" for some configurations",0,,0
89f7890,2011-06-16 14:02:01,Don't try to allocate size zero arrays.,0,,0
1506ccf,2011-06-16 14:02:17,Loop with node iterators rather than sequentially with integers.  This is the most general and correct way to loop over nodes.,0,,0
58047ab,2011-06-16 14:21:34,Fix unused variable warning in DEBUG mode.,1,,0
f69c134,2011-06-16 16:15:35,optimize DenseMatrix::zero(),0,,0
8832cd5,2011-06-16 18:54:35,Fixes for LaplaceMeshSmoother.,1,,1
8459ee7,2011-06-16 20:51:39,Include proper system headers for memset.,0,,0
9af3e1a,2011-06-16 21:26:54,TriangleInterface updates.,0,,0
b4102a2,2011-06-16 21:47:09,rbOOmit change: changed TransientRBConstruction and TransientRBEvaluation so they store a TemporalDiscretization (rather than a pointer to one). Renamed RBEvaluation::initialize to resize_data_structures. Moved parameter range out of RBBase  parameter ranges are now only in RBBaseConstruction since we train an RB space with a parameter domain in mind.,0,,0
bd3b0ec,2011-06-16 22:35:15,Don't forget to calculate the extra derivative terms for 1D elements that aren't parallel to the x axis,0,,0
4df4cd7,2011-06-16 22:47:53,Constructing bare System objects is more useful if we can load restart files with them  too...,0,,0
f72f59a,2011-06-16 23:43:20,Adding ex29.,0,,0
0fbc14f,2011-06-17 01:51:14,rbOOmit change: renamed RBBase to RBParametrizedObject  a more descriptive name... also renamed RBBaseConstruction to RBConstructionBase,0,,0
04ad459,2011-06-17 02:11:33,rbOOmit change: commented out code for writing output data to a single file in RBEvaluation,0,,0
e3ee461,2011-06-17 17:31:44,Small edit to RBConstruction::train_reduced_basis,0,,0
e68a510,2011-06-17 17:42:01,It doesn't happen very often  but when we *do* change a contrib/ header we want to recompile the objects depending on it.,0,,0
bfee618,2011-06-17 18:39:12,Disabling tetrahedralize_domain() until I can figure out why tetgen is infinite looping...,0,,0
c3cdaa4,2011-06-17 19:22:17,"""BasicSystem"" -> ""Basic""  to be more consistent with the other system names.",0,,0
28fe193,2011-06-17 19:42:45,BoundaryInfo can reset the mesh_dimension of the boundary mesh to keep it accurate.,0,,0
00cd2c7,2011-06-17 20:48:31,rbOOmit change: Removed assert in RBParametrized object,0,,0
6f56718,2011-06-18 04:26:08,Disable ex29 for --enable-1D-only,0,,0
6e96283,2011-06-19 20:20:38,Removed redundant line in rb_construction.C,0,,0
1bf62f5,2011-06-20 03:40:26,rbOOmit change: renamed RB_solve and initialize_RB_construction to all lower-case (to be more in line with standard naming practices). Also  initialize_rb_construction no longer takes an argument.,0,,0
0a5e484,2011-06-20 13:21:12,Fixed comment in ex23,1,,0
172c015,2011-06-20 15:25:31,Our triangle interface seems to fail with single or long double precision,1,,0
271b51d,2011-06-20 16:10:17,Our triangle.c copy now includes libmesh_config.h to choose scalar precision.,0,,0
b7af34e,2011-06-20 16:14:32,ex29 ought to work on non-double-precision libMesh now  let's try it.,0,,0
8e99cb1,2011-06-20 16:20:55,Putting some notices up on the file we modified as well as on the README to better comport with the Triangle license.,0,,0
b8a721c,2011-06-20 16:21:36,Adding -g  general flags to intel CFLAGS,0,,0
3fe7e61,2011-06-20 16:36:01,configure built with new compiler.m4 changes,0,,0
1856082.0,2011-06-20 16:59:42,Print a little more output,0,,0
c2fdeb0,2011-06-20 17:18:06,Don't compile Triangle or Tetgen code when libMesh wasn't configured with Triangle/Tetgen enabled.,0,,0
33fa547,2011-06-21 05:36:42,Differently-const versions of the same method shouldn't also be differently-protected.  That way lies madness.,0,,0
e620507,2011-06-21 05:37:23,More assertions.  Yes  I wrote user code that would have tripped one of these.  No  I'm not proud.,0,,0
8371901.0,2011-06-21 18:49:09,Disable gcc diagnostic pragmas for gcc 4.0 and 4.1  which don't support them.  These headers are supposed to be disabling warnings for 3rd party code  not adding warnings for our own code.,0,,0
62f9a67,2011-06-21 19:06:47,Adding virtual destructor to Abstract Base Class,0,,0
e9ba7c2,2011-06-21 19:19:40,whitespace fix,1,,0
346b134,2011-06-21 19:20:52,On my Macbook we need template instantiation to follow all function definitions to prevent runtime dynamic linking failure,0,,0
1da0185,2011-06-21 19:30:01,My Macbook's linker doesn't recognize one of those options and gives duplicate symbol errors with that object file.  Disabling them for gcc <= 4.0  which fixes things for me and hopefully shouldn't mess with the INL gcc 4.2 builds.,1,,0
6090a1f,2011-06-22 15:01:27,libmesh_example_assert  ifdef  comment updates,0,,0
c3960a2,2011-06-22 16:18:46,Fix VTK connectivity for TRI6.,1,,1
32de6c9,2011-06-22 17:36:39,Fixes for writing VTK elements:,1,,1
67910d4,2011-06-22 23:19:16,Add edge capabilities to FEMContext - the added cost should be trivial when edge_fe_reinit isn't called.,0,,0
995d2ea,2011-06-23 16:03:18,Add proper dependences and inherit compiler flags for TetGen.,0,,0
2dc99cb,2011-06-23 16:07:34,Add braces around empty body in while statement to pacify compiler.,0,,0
c8c888f,2011-06-23 16:41:22,Added infinite loop detection and some simple bounds checking.,0,,0
5fdeb7f,2011-06-23 16:46:00,Ignoring generated files in ex29.,0,,0
bec60a6,2011-06-23 16:50:59,Fix warning about signed/unsigned comparison.,1,,0
b18069b,2011-06-23 20:31:44,Added Makefile dependencies for contrib software:,0,,0
cb86fd6,2011-06-24 22:32:12,Making comments more accurate - not all System assembly calls involve a matrix.,0,,0
02d2c00,2011-06-24 22:41:36,switch around compiler options so users can override them,0,,0
095981f,2011-06-25 06:52:27,"Fixes for the ""boundary id on internal sides"" case.",1,,1
e40ebc1,2011-06-27 16:02:53,Added Eigen config stuff from David Knezevic.,0,,0
dd2a85a,2011-06-27 19:04:36,rbOOmit change: added Parellel::barrier at start of basis function IO,0,,0
ff13bed,2011-06-27 19:30:32,Look for Eigen headers in EIGEN_INC/Eigen rather than EIGEN_INC.  This makes more sense when #including them.,0,,0
bdd81e2,2011-06-27 19:36:05,Fixed typo.,1,,0
876b8f9,2011-06-27 19:52:18,Adding READ_BASIC_ONLY option to EquationSystems::read().  This is only a big win for projection.C  whose costs are still dominated by PointLocator's inverse_map tests  but getting rid of unnecessary sparse matrix allocation and sparsity pattern calculation shaves 80% off the runtime of some more app-specific utility programs I've got.,0,,0
9da0005,2011-06-28 14:45:42,Removed redundant success status message from Eigen.,0,,0
2b5ae15,2011-06-29 19:06:10,Working on a system for generating and using constraint data that's indexed by nodes  not just by dof indices.,0,,0
b82da0a,2011-06-29 22:08:31,Try to print the *correct* average constraint length...,0,,0
377d3b8,2011-06-29 22:19:25,Print Node constraints too,0,,0
86120f1,2011-06-29 22:29:51,compute_node_constraints bugfix,0,,1
1ce9782,2011-06-29 22:30:31,Computing NodeConstraints (except for periodic cases) now.,0,,0
f03bbf5,2011-07-01 17:50:48,rbOOmit change: renamed low_memory_mode flag to more descriptive name: single_matrix_mode,0,,0
50755000000000.0,2011-07-01 23:09:32,Try to compute node constraints in the periodic boundary case too.,0,,0
ac89740,2011-07-04 19:25:30,Fix for nodal constraint construction on periodic BCs,1,,1
3fa0e85,2011-07-04 20:34:48,Making NodeConstraints a configure-time option  default disabled,0,,0
fbe5090,2011-07-04 21:01:33,Merged changes from trunk,0,,0
363bbc8,2011-07-04 21:36:29,Merged in new NodeConstraints option from branch,0,,0
41e3043,2011-07-05 16:10:27,Shut up unused variable warnings when !LIBMESH_ENABLE_NODE_CONSTRAINTS.,0,,0
e7aa1ba,2011-07-05 17:09:15,Creating branch to work on changes to DiffContext/DiffSystem for use with Discontinuous Galerkin methods.,0,,0
38299fa,2011-07-07 20:00:52,Get rid of some unnecessary code in NodeConstraints calculations,0,,1
1489bed,2011-07-07 22:57:16,allgather with an empty r used to trigger a GLIBCXX_DEBUG assertion failure,0,,0
550caf5,2011-07-08 01:44:58,point_* methods should accept a const Point.,0,,0
6774d2f,2011-07-08 02:08:36,Tweak code for clarity,0,,0
4973867.0,2011-07-08 02:44:37,NodeConstraints bugfix,0,,1
4995624.0,2011-07-08 04:15:48,Commenting out overzealous asserts - non-processor-0 nodes are going to want to read and write zipped files in the parallel i/o cases.,0,,0
2c441bc,2011-07-08 04:37:31,Make sure parallel-read-in vectors are closed after reading,0,,0
504529a,2011-07-08 16:44:20,First cut at adding access to neighbor values to DifferentialSystem framework. This will come in handy for Discontinuous Galerkin simulations. I still need to debug and also add fixed* implementation.,0,,1
d1e00ed,2011-07-08 17:33:23,If we make Parallel::verify() a no-op when called for types T that don't have MPI_MIN/MPI_MAX defined  then we can use it even in generic calls that aren't always instantiated with verifiable T.,0,,0
4f7b6cc,2011-07-08 19:33:02,When we've got a non-serial Mesh  we should default to non-serial I/O unless the user says otherwise.,0,,0
e1538bf,2011-07-08 20:38:36,Fixed a memory access out of range error that showed up when trying to access neighbors on the boundary. Also implemented DiffSystem constructing DiffContext with compute_neighbor_values.,1,,1
90728c2,2011-07-08 21:22:10,First cut at adding neighbor information to DiffSystem/DiffContext for Discontinuos Galerkin simulations.,0,,0
270f009,2011-07-08 21:39:54,Adding an extra flag to help oprofile,0,,0
23ad00e,2011-07-09 16:28:05,rbOOmit change: pulled printing out from process_parameters_file and put it in a new function  print_info,0,,0
72352000000000.0,2011-07-09 18:01:13,rbOOmit change: Renamed load_RB_solution to load_rb_solution (for consistency of function names...),0,,0
e829432,2011-07-09 18:43:41,rbOOmit change: rb_solve now returns a non-normalized (i.e. absolute) error bound. Renamed flag return_rel_error_bound to use_relative_bound_in_greedy  and this is only used inside RBConstruction now  not passed to RBEvaluation.,1,,0
62d509d,2011-07-09 18:55:43,rbOOmit change: Need to set compute_RB_inner_product = true in TransientRBEvaluation ctor,0,,0
e2c4783,2011-07-11 16:52:46,Modifications to ex29 to get it working under Linux.,0,,0
fc5c9f7,2011-07-11 18:22:14,Split TetGenWrapper class into its own header file.,0,,0
756ef4f,2011-07-11 18:51:40,Moved MeshSerializer class to its own file.,0,,0
24e6a01,2011-07-11 22:50:56,Split out the TriangleInterface::Hole classes into a separate file.,0,,0
3ecb0ff,2011-07-12 14:21:31,ExodusII update that enables writting out zero IDs to the output file,0,,0
1832eb6,2011-07-12 15:10:56,Added Makefile dependencies for new ExodusII files.,0,,0
47213ce,2011-07-12 17:49:03,rbOOmit change: removed impose_internal_dirichlet_BCs and impose_internal_fluxes from the set of parameters that are read in from input file in process_parameter_file. These parameters should be set programmatically in a class since they effect the assembly behavior significantly.,0,,0
3c1d5d8,2011-07-12 18:51:44,get rid of include/mesh/mesh_generation.h:133:8: warning: extra tokens at end of #endif directive,0,,0
c2e4cf7,2011-07-13 19:25:55,My Macbook's linker doesn't recognize one of those options and gives duplicate symbol errors with that object file.  Disabling them for gcc <= 4.0  which fixes things for me and hopefully shouldn't mess with the INL gcc 4.2 builds.,1,,0
6a715d2,2011-07-13 19:26:18,libmesh_example_assert  ifdef  comment updates,0,,0
7587718.0,2011-07-13 19:26:25,Fix VTK connectivity for TRI6.,1,,1
42ead08,2011-07-13 19:26:34,Fixes for writing VTK elements:,1,,1
9ce94a1,2011-07-13 19:26:44,Add edge capabilities to FEMContext - the added cost should be trivial when edge_fe_reinit isn't called.,0,,0
ad1a399,2011-07-13 19:26:52,Add proper dependences and inherit compiler flags for TetGen.,0,,0
38a5dfa,2011-07-13 19:27:00,Add braces around empty body in while statement to pacify compiler.,0,,0
5c35452,2011-07-13 19:27:08,Added infinite loop detection and some simple bounds checking.,0,,0
4a7a3ae,2011-07-13 19:27:15,Fix warning about signed/unsigned comparison.,1,,0
812474b,2011-07-13 19:28:31,Added Makefile dependencies for contrib software:,0,,0
7a3eda3,2011-07-13 19:28:42,Making comments more accurate - not all System assembly calls involve a matrix.,0,,0
ccbcd0f,2011-07-13 19:28:48,switch around compiler options so users can override them,0,,0
7f6c3ac,2011-07-13 19:28:56,"Fixes for the ""boundary id on internal sides"" case.",1,,1
1ddfd76,2011-07-13 19:29:08,Added Eigen config stuff from David Knezevic.,0,,0
da47e90,2011-07-13 19:29:16,rbOOmit change: added Parellel::barrier at start of basis function IO,0,,0
a50ee42,2011-07-13 19:29:23,Look for Eigen headers in EIGEN_INC/Eigen rather than EIGEN_INC.  This makes more sense when #including them.,0,,0
53d4a78,2011-07-13 19:29:30,Fixed typo.,1,,0
4368497.0,2011-07-13 19:29:43,Adding READ_BASIC_ONLY option to EquationSystems::read().  This is only a big win for projection.C  whose costs are still dominated by PointLocator's inverse_map tests  but getting rid of unnecessary sparse matrix allocation and sparsity pattern calculation shaves 80% off the runtime of some more app-specific utility programs I've got.,0,,0
87b72ee,2011-07-13 19:29:50,Removed redundant success status message from Eigen.,0,,0
e3a8ace,2011-07-13 19:29:58,Try to print the *correct* average constraint length...,0,,0
8d78f72,2011-07-13 19:30:09,rbOOmit change: renamed low_memory_mode flag to more descriptive name: single_matrix_mode,0,,0
c2576c2,2011-07-13 19:30:21,Merged in new NodeConstraints option from branch,0,,0
364c501,2011-07-13 19:30:30,Shut up unused variable warnings when !LIBMESH_ENABLE_NODE_CONSTRAINTS.,0,,0
340761b,2011-07-13 19:30:37,Get rid of some unnecessary code in NodeConstraints calculations,0,,1
680fcb2,2011-07-13 19:30:45,allgather with an empty r used to trigger a GLIBCXX_DEBUG assertion failure,0,,0
24cdb40,2011-07-13 19:30:54,point_* methods should accept a const Point.,0,,0
5bf2f5a,2011-07-13 19:31:02,Tweak code for clarity,0,,0
adeef00,2011-07-13 19:31:10,NodeConstraints bugfix,0,,1
0b67a69,2011-07-13 19:31:18,Commenting out overzealous asserts - non-processor-0 nodes are going to want to read and write zipped files in the parallel i/o cases.,0,,0
5b3b31f,2011-07-13 19:31:26,Make sure parallel-read-in vectors are closed after reading,0,,0
9d5212c,2011-07-13 19:31:37,First cut at adding access to neighbor values to DifferentialSystem framework. This will come in handy for Discontinuous Galerkin simulations. I still need to debug and also add fixed* implementation.,0,,1
ef6c330,2011-07-13 19:31:46,If we make Parallel::verify() a no-op when called for types T that don't have MPI_MIN/MPI_MAX defined  then we can use it even in generic calls that aren't always instantiated with verifiable T.,0,,0
ce6df11,2011-07-13 19:31:54,When we've got a non-serial Mesh  we should default to non-serial I/O unless the user says otherwise.,0,,0
e99b60e,2011-07-13 19:32:01,Adding an extra flag to help oprofile,0,,0
a9e2a05,2011-07-13 19:32:13,rbOOmit change: pulled printing out from process_parameters_file and put it in a new function  print_info,0,,0
ac252b4,2011-07-13 19:32:25,rbOOmit change: Renamed load_RB_solution to load_rb_solution (for consistency of function names...),0,,0
de581aa,2011-07-13 19:32:38,rbOOmit change: rb_solve now returns a non-normalized (i.e. absolute) error bound. Renamed flag return_rel_error_bound to use_relative_bound_in_greedy  and this is only used inside RBConstruction now  not passed to RBEvaluation.,1,,0
b7dc89e,2011-07-13 19:32:47,rbOOmit change: Need to set compute_RB_inner_product = true in TransientRBEvaluation ctor,0,,0
9aa57d2,2011-07-13 19:32:58,Modifications to ex29 to get it working under Linux.,0,,0
81f20d8,2011-07-13 19:33:11,Continuing to implement compute_neighbor_values in DiffSystem framework. Worked on constructors for DiffContext/FEMContext and added neighbor code to FEMSystem::assembly. Cleaned up some dirty formatting.,0,,0
d04dced,2011-07-13 19:57:29,Removing mucked up branch,0,,0
221379.0,2011-07-13 19:57:53,Removing mucked up branch,0,,0
bb5640b,2011-07-14 14:26:37,Creating branch to work on Discontinuous Galerkin in DiffSystem framework,0,,0
a563b6d,2011-07-14 15:14:55,Worked on FEMSystem::assembly to add neighbor calculations. Also added a reference to System in DiffContext. Several other changes to implement compute_neighbor_values.,0,,0
f853767,2011-07-14 21:26:16,Added element-neighbor cross-terms in jacobian for compute_neighbor_value in DiffSystem.,0,,0
e70475d,2011-07-15 20:42:35,edited developers.php,0,,0
8dd9207,2011-07-15 20:51:39,Updated djk.jpg,0,,0
f0bd09a,2011-07-18 22:00:25,Added neigh-elem jacobian contributions to fem_system.C for use in DG problems.,1,,0
6.789e+81,2011-07-18 22:00:37,Renamed some neighbor_ variables to be more consistent.,0,,0
b0c37bf,2011-07-18 22:01:13,Create branch master,0,,0
0e3a085,2011-07-18 22:02:55,deleted extra branch,0,,0
cf0185c,2011-07-19 03:35:15,asserts and const-correctness in NodeConstraints code  disabling an allgather in that code which currently fails badly on ParallelMesh,1,,0
a520054,2011-07-19 17:20:43,No need to specify non-basic node iterators,0,,0
a0f9d72,2011-07-19 17:22:18,Exposing parallel_n_{elem nodes} to MeshBase users,0,,0
5fd0841,2011-07-19 17:39:39,Removing empty/typoed header,0,,0
e2ad2f1,2011-07-19 18:26:12,We ought to be able to write Nemesis files from SerialMesh data structures too eventually  if only for testing purposes.,0,,0
c3461ad,2011-07-19 18:26:51,"Fix for ""no sidesets"" case",1,,1
12073b7,2011-07-19 20:06:02,If we try to write out a hybrid subdomain using Exodus/Nemesis IO that still doesn't support that  we ought to die at an assert which explains that.,0,,0
4afc5a8,2011-07-19 21:10:38,Nemesis IO: Handle some empty-vector-producing corner cases,0,,0
61b072a,2011-07-19 21:32:18,Implemented some more changes for DG. Notably worked on numerical_jacobians in FEMSystem.,0,,0
ac5c0ec,2011-07-19 22:37:04,"Some fixes (but not enough yet  is this even possible with Nemesis?) for the ""writing out Nemesis when you have processors containing no elements"" corner case.",1,,1
4cdb851,2011-07-20 05:18:02,That new assertion needs to be less zealous unless we want to forbid Exodus/Nemesis output with infinite elements,0,,0
5a223eb,2011-07-20 21:49:16,We need to support separate-file parallel xdr/xda meshes eventually  and here's the API I'd like to use for deciding when to write in parallel vs serial.  Going to have to put implementation on the back burner for a little while  though...,0,,0
56d6720,2011-07-21 20:05:35,Added neighbor norm calculations to verify_jacobians. Also added code to constrain neighbor residuals and jacobians (this code may be incorrect  it definitely needs to be double-checked). It appears that the numeric jacobian is not calculation elem-neighbor cross terms. Need to fix this.,1,,0
442af60,2011-07-21 20:41:28,Working on fixing numerical jacobian element-neighbor cross-terms. Still needs work.,1,,0
5792cf9,2011-07-22 16:36:16,Documentation fix.,1,,0
0b9c6f1,2011-07-22 18:42:01,Fixed some issues with numerical_jacobian and neighbor-element cross-terms.,1,,1
21e9b52,2011-07-22 19:01:38,Cleaned up some TODOs,0,,0
26b2ce0,2011-07-22 20:27:26,"Dispatch to NemesisIO if UnstructuredMesh is asked to read/write a "".n"" or "".nem"" file",0,,0
c9db6d6,2011-07-22 20:29:14,Pre-test for all files' existence in the case of parallel mesh files.,0,,0
2ebc4f4,2011-07-26 13:47:02,Updated publications for July 2011.,0,,0
f920a9c,2011-07-27 13:42:40,EquationSystems::read() modifies only systems in the XDA file,0,,0
6516f1c,2011-07-28 18:16:12,allow resticting which variables get output from Exodus,0,,0
d964132,2011-07-28 21:02:58,rbOOmit change: Added method to attach a full affine expansion to a RBConstruction object,0,,0
743940000.0,2011-07-28 21:38:38,rbOOmit change: cleaned up RBConstruction::attach_affine_expansion,0,,0
2640df3,2011-07-28 23:26:13,rbOOmit change: removed RBConstruction::initialize_rb_eval  since it was too focused on the case in which we define an RBThetaExpansion in the RBConstruction and pass it to an RBEvaluation. We often want to go the opposite direction.,0,,0
11177f9,2011-08-01 18:29:44,White space in these comment diagrams made vim syntax highlighting think there was an error...,1,,0
ab389a6,2011-08-01 19:04:15,Avoid warning about unsigned/int comparison.,0,,0
36e3bc4,2011-08-01 20:46:08,Patch from Jed Brown: * Use public Local-to-global mapping APIs,1,,0
89aa9e7,2011-08-01 20:46:59,Patch from Jed Brown: * Update for the new XXDestroy() API coming in PETSc 3.2,1,,1
4628991.0,2011-08-01 22:52:31,rbOOmit change: Added RBAssemblyExpansion class  analogous to RBThetaExpansion class.,0,,0
c326da8,2011-08-01 23:02:16,Patch  mostly from Lorenzo Botti  to allow for FE calculations on sides without using inverse_map in the common cases.,1,,1
4e64b13,2011-08-01 23:43:16,ex23 chanage: Cleaned up main function by defining custom RBThetaExpansion and RBAssembly expansion classes.,0,,0
eac2d61,2011-08-02 20:56:07,Starting over with DG implementation.,0,,0
8f43264,2011-08-02 20:58:18,Removing dg2 branch,0,,0
0720c73,2011-08-02 22:51:41,Starting work on DPGSystem and DPGContext.,0,,0
1f93da0,2011-08-03 15:29:54,Removed some old work with DiffSystem/DiffContext for DG stuff. The plan is to refactor this into a DGSystem/DGContext eventually.,0,,0
7585ce6,2011-08-03 16:43:17,rbOOmit change: changed RBConstruction gram-schmidt to modified gram-schmidt (thanks to A. Gerner),0,,0
7163940.0,2011-08-03 20:56:59,Cast to int for comparison with enums so compiler doesn't complain.,0,,0
771cf4a,2011-08-03 22:40:23,Read and store node and elem attributes in TetGenIO.,0,,0
d4e22e1,2011-08-04 16:56:27,Fixed some minor indentation issues.,1,,0
1caafff,2011-08-05 17:34:39,Updated google analytics info.,0,,0
2.6e+107,2011-08-05 22:23:34,"Make QoISet::add_index/remove_index behavior consistent with ""indices all start set to true"" behavior",0,,0
9ac5851,2011-08-09 14:45:40,Added discontinuous hierarchical finite element: L2_HIERARCHIC.,0,,0
2a95a3b,2011-08-09 16:46:10,Utility to renumber blocks/sidesets/nodesets in exodus meshes,0,,0
185360000.0,2011-08-09 18:36:24,ExodusII_IO/Nemesis_IO patch for zero IDs,1,,1
8cba54e,2011-08-09 21:03:00,Subdomain_id_size is configurable: 1  2  or 4 bytes (default = 2),0,,0
8dc02f3,2011-08-10 16:30:35,Disable ex10 and ex24 with parmesh until we've got better parallel xdr I/O added.,0,,0
16ffce0,2011-08-10 21:25:46,Changes to GMVIO: * Made GMVIO work with ParallelMesh input via MeshSerializer. * Factored out a bunch of cut-n-paste code into a single function. * Fixed bug in eletypes definition for TET4 writing. * Properly read in elements using node maps.,1,,1
8bed96f,2011-08-11 18:03:36,Patch from Boyce Griffith for clean opt-mode compiles if the user has extra warnings enabled.,1,,1
31042a4,2011-08-11 22:08:46,Requesting ILU/LU in parallel on the PetscPreconditioner now sets block Jacobi parallel preconditioner + ILU/LU sub-preconditioner.,0,,0
b438ffc,2011-08-11 22:11:45,Ignoring generated files.,0,,0
2a10aed,2011-08-14 23:22:07,meshid guts don't compile without --enable-exodus,0,,0
e63ccba,2011-08-18 17:07:21,Added test_variable functions to dpg_system.,0,,0
f2a8c4d,2011-08-19 19:55:49,Documentation update.,0,,0
3867aa1,2011-08-19 20:13:33,Print slightly more information when a NetCDF error is raised.,1,,0
bac8fb9,2011-08-19 21:42:47,The meshid application can now be used to change the dimension on an Exodus file with e.g.,0,,0
c9c7daf,2011-08-21 13:08:13,Fix for --enable-single,1,,1
4f686ab,2011-08-23 17:32:38,Flag Fix for Implicit warnings in C++ DBG/DVL compiles,1,,1
6a2d4cc,2011-08-24 22:11:19,Removing debug warnings,0,,0
6f4713b,2011-08-25 15:13:32,Fix to PHP files  hopefully detect Linux+Chromium browsers.,1,,1
825c1e9,2011-08-25 17:41:24,Updated .gitignore for documentation.,0,,0
fd647a1,2011-08-25 20:36:16,Do some logging of output functions,0,,0
14fb37a,2011-08-25 22:22:42,Minor attempts at optimization,0,,0
23a76f1,2011-08-25 22:23:17,A little more perf logging,0,,0
c10aeba,2011-08-25 22:32:02,Added entries for examples 28 and 29 to navigation menu.,0,,0
750830000.0,2011-08-25 22:51:45,"Adding a user defined hook in Petsc_nonlinear_solver right before ""solve"". This is necessary for setting the ""post check line search"" option and perhaps others in Petsc 3.1",0,,0
d6aa0c2,2011-08-25 22:59:13,Adding extra content div's in the header and footer seems to fix the Classes/Namespaces/Files pages and not hurt anything else too bad.,1,,0
85db425,2011-08-26 14:50:41,Deleting old trumanellis branch.,0,,0
e20baa8,2011-08-26 17:03:57,People might want a user_presolve for non-PETSc-specific tasks too,0,,0
909e8d2,2011-08-26 18:15:22,System::point_* should be const.  Also  in debug mode they ought to verify that they're called with the same point on each system.,0,,0
e9addd4,2011-08-26 20:05:03,Added L2_HIERARCHIC finite element as a discontinuous HIERARCHIC.,0,,0
dc02a33,2011-08-26 20:27:06,Forgot to add header files for new L2_HIERARCHIC finite elements.,0,,0
133351c,2011-08-26 20:39:47,Added L2_HIERARCHIC to string_to_enum. Sorry for the partial broken commits  everything should be working now.,0,,0
e6e826a,2011-08-29 14:45:55,Avoid unused variable warnings in debug mode.,0,,0
bf8529e,2011-08-29 14:51:25,Enable SVN keyword expansion in all files.,0,,0
747a26e,2011-08-29 15:51:16,Fix for disabling second derivatives,1,,1
e4aa718,2011-08-29 18:42:34,Reverted accidental expanded RCS keyword check-in.,0,,0
34510ea,2011-08-30 19:17:58,Fixing Parallel:broadcast of std::set,1,,1
1b8a673,2011-08-30 19:18:24,Storing subdomain ids in and XDA solution file,0,,0
3571682.0,2011-08-30 19:39:38,Removed old code from previous attempt at building DG into FEMSystem. A better approach would be to inherit to DGSystem. Everything should be clean now.,0,,0
f44eda1,2011-08-30 20:47:09,Do not use assign() on std::set - it does not exist,0,,0
86b72cd,2011-08-30 21:24:51,Updating Fortran flags for PIC code (shared libraries),0,,0
6a4fc2c,2011-08-30 22:27:20,Avoid signed/unsigned comparsion warning  string::find() returns string::size_type.,0,,0
f27a29b,2011-08-31 21:31:25,Patch from Vijay Mahadevan updating SLEPc to new XXXDestroy syntax.,1,,1
32e9003,2011-08-31 21:31:37,Patch from Vijay Mahadevan adding paths for SLEPc include files.,1,,1
9f0b396,2011-08-31 21:31:48,Fix cut and paste bug in SLEPc section of Make.common.in.,1,,1
76a36a6,2011-08-31 21:32:02,Don't let arbitrary default values make it into Make.common.,0,,0
442a3c9,2011-09-01 17:05:04,Fixing footer/header for doxygen generated docs,1,,0
3bba2f0,2011-09-01 22:11:14,Fix regression on SLEPc 3.1.0,1,,1
c2dc2fd,2011-09-01 23:13:17,Don't override slepc_common_variables SLEPC_LIB  or linking against SLEPc breaks,0,,0
03efdea,2011-09-02 02:32:42,Autodetecting SLEPc on Ubuntu was a feature.  Features are good. Regressions are bad.,0,,0
51d50d2,2011-09-02 16:32:08,Unset SLEPC_DIR if default is not found to avoid arbitrary defaults in Make.common.,0,,0
c54d32e,2011-09-07 18:04:14,Fixing bug in writing zero-length vectors in XDA,1,,1
228b367,2011-09-07 19:18:28,Fixing test for HYPRE in Petsc 3.0 for environments with $PETSC_ARCH set,1,,1
0058b82,2011-09-15 13:57:43,Adding support for Trilinos 10.6.4,0,,0
2f1a0a7,2011-09-19 15:42:02,updated configure for intel 12.1 - it was being detected as gcc,0,,0
b4bb8f4,2011-09-19 18:22:54,fixed broken link,1,,1
e65bfd2,2011-09-19 21:31:16,added callback to allow sparsity pattern modification,0,,0
9fbbc83,2011-09-19 21:31:36,add ability to get number of linear iterations out of petsc nonlinear solver,0,,0
b95e252,2011-09-22 23:06:09,Git rid of Metis warnings,0,,0
c127484,2011-09-23 18:19:57,Take CFLAGS from environment  not just CXXFLAGS/CPPFLAGS,0,,0
94ba114,2011-09-23 18:22:44,We need to filter-*out* -Wimplicit.  Filtering out everything else instead breaks some configurations when we lose -fPIC.,0,,0
12d53d2,2011-09-28 15:34:47,Improving AztecOO solver capabilities,0,,0
257713f,2011-09-28 15:35:17,Improving capability of NOX solver wrapper,0,,0
e3513f2,2011-09-28 15:35:44,Adding support for Trilinos ML package,0,,0
97bbfb9,2011-09-28 15:35:56,Do not try configure with Trilinos 9 if Trilinos 10 found,0,,0
e3ca76a,2011-09-28 15:36:18,Implementing get_total_linear_iterations() in Trilinos nonlinear solver,0,,0
87e5cf4,2011-10-03 16:03:27,Fix NodeConstraints std::allocator use (and the resulting compilation bug on my MacBook),1,,1
978d9ee,2011-10-03 17:26:59,Patch from Paul Bauman for 1D ExodusII output,1,,1
9009394.0,2011-10-06 21:03:21,Fix overzealous assert in extract_local_vector,1,,1
bccf707,2011-10-06 21:03:42,More debugging output when we try to request a non-ghosted DoF from a ghosted vector,0,,0
a966429,2011-10-06 22:52:08,Patch to fix ExodusII error from Paul,1,,1
c6bbc3a,2011-10-06 23:18:40,Make it possible to System::init() on an existing system (useful if you want to keep structure but not data) multiple times without ending up with PETSc errors afterward.,1,,0
b078e5f,2011-10-07 03:20:20,Added missing header (thanks to Paul Bauman),0,,0
dcb8e17,2011-10-07 03:20:53,Avoid signed/unsigned comparison warning,0,,0
c7ccf47,2011-10-07 19:26:36,Fix a slight leakage of encapsulation,1,,1
02ed2e7,2011-10-07 22:36:18,Use subclass member arrays rather than base class dynamically-allocated arrays for _nodes  _neighbors  and _parent links.,0,,0
b114d16,2011-10-08 03:35:47,Support a real interior_parent() pointer on lower-dimensional Elems,0,,0
09d12b1,2011-10-08 05:24:50,BoundaryInfo::sync() should build a refined (even adaptively refined) boundary mesh when appropriate.,0,,0
8db5567,2011-10-09 01:56:32,Added Elem::which_side_am_i utility method,0,,0
1c2f7f2,2011-10-09 03:20:53,Fixes for BoundaryInfo::sync() to refined boundary,1,,1
739472f,2011-10-10 03:21:02,Adding Elem::is_semilocal(),0,,0
61f5cbf,2011-10-10 03:21:35,Adding semilocal-only Patch construction options,1,,1
bba2ab8,2011-10-18 20:55:27,Adding the ability to build side lists from node lists,0,,0
1f779c0,2011-10-18 23:04:45,More explicit template instantiation added to fe_map.C and another instantiation added to fe_macro.h,0,,0
2b92fbd,2011-10-19 14:22:07,"Adding ""-r"" switch to remove the conftest directory during configure - this is causing errors in OS X 10.7",1,,0
302eb87,2011-10-19 15:11:37,Removing trailing semi-colon from explicit template instantiation,0,,0
5d2c2ce,2011-10-19 15:53:19,Added comment for GmshIO::read() suggested by Matteo Semplice.,0,,0
ee152b4,2011-10-19 22:52:23,Make numerical jacobian utility methods public instead of protected. They're needed by the TBB functor classes I'm about to put in fem_system.C  and there's really no need to restrict them from use by anything else.,0,,0
5748aee,2011-10-19 22:52:43,Adding multithreading support to FEMSystem,0,,0
feaec0a,2011-10-20 17:40:07,Output better info about parallelism from MeshBase (although we ought to move this elsewhere eventually...),0,,0
355f319,2011-10-20 17:53:42,Bandwidth printing should be less misleading when we're calculating bandwidth upper bounds,0,,0
e63271d,2011-10-20 19:27:52,Use full precision for FEMSystem::print_* debugging  avoid redundant parallel synchronization,0,,0
53092ba,2011-10-22 04:13:28,Access to the global perflog needs to be mutex'ed to be thread-safe.,0,,0
8f6cb20,2011-10-24 13:22:09,Add missing header - we weren't building properly with barebones config,0,,0
4a10414,2011-10-24 13:55:07,Fix constructor order warning,1,,0
16465d8,2011-10-25 16:54:35,Locking libMesh::perflog isn't enough to stop bugs from out-of-order log start/stop commands when multithreading.  Nothing to do for now but turn off the perflog when we're running more than one thread.,1,,0
65b3772,2011-10-25 18:31:03,Better fix for PerfLog/Threads interaction.  We were already doing the right thing most of the time  but when the user manually disabled logging we shouldn't have been reenabling it again.,1,,1
cfbed58,2011-10-27 19:12:11,Updated publications.,0,,0
9ccd13e,2011-10-27 21:39:30,vector::iterator::difference_type doesn't seem to be in Stroustrop  but vector::difference_type is and Portland Group C++ likes that better.,0,,0
61236f7,2011-10-27 23:21:21,We can't use -Wno-deprecated unless the compiler supports it. Portland Group C++  in particular  screams and dies if it sees an unrecognized command line option.,0,,0
b805544,2011-10-29 23:48:13,Patch from Vijay for SLEPc 3.2 support,1,,1
af2b5fd,2011-10-31 22:01:42,Added Abaqus reader.,0,,0
ac3f24d,2011-11-01 19:29:57,Use -eps_type lapack for the example SLEPc program  for some reason arnoldi doesn't like our generalized eigen problem when it's complex-valued?,1,,0
475db35,2011-11-01 19:57:18,Added <cstddef> to include/parallel/threads_allocators.h. Also  rbOOmit change: Replaced RBSCMSystem with RBSCMConstruction and RBSCMEvaluation classes.,0,,0
ca81171,2011-11-02 16:47:18,"Removing unused ""using"" declarations",0,,0
7a61973,2011-11-02 16:48:02,- Adding a function to allow for variations on CLI options - Accepting both --n_threads and --n-threads,0,,0
9afe652,2011-11-02 16:58:58,Allow Utility::pow<>() to operate on non-Real values too.,0,,0
81dc766,2011-11-02 18:57:48,test first time with writing access,0,,0
eefaa3e,2011-11-02 19:36:59,Updated ignores.,0,,0
84c4785,2011-11-02 19:37:14,Refactoring fe_lagrange.C functions to use specialization instead of instantiation.,0,,0
439168f,2011-11-02 19:37:29,Refactoring fe_monomial.C functions to use specialization instead of instantiation.,0,,0
68ebfb8,2011-11-02 19:37:44,Refactoring fe_xyz.C functions to use specialization instead of instantiation.,0,,0
487af95,2011-11-02 19:37:58,Refactoring fe_hermite.C functions to use specialization instead of instantiation.,0,,0
a8c3d57,2011-11-02 19:38:13,Refactoring fe_hierarchic.C functions to use specialization instead of instantiation.,0,,0
023bcbb,2011-11-02 19:38:27,Refactoring fe_l2_hierarchic.C functions to use specialization instead of instantiation.,0,,0
9b69759,2011-11-02 19:38:41,Refactoring fe_clough.C functions to use specialization instead of instantiation.,0,,0
70c04de,2011-11-02 19:38:56,Refactoring fe_bernstein.C functions to use specialization instead of instantiation.,0,,0
2c686b9,2011-11-02 19:39:10,Refactoring fe_scalar.C functions to use specialization instead of instantiation.,0,,0
bd7c630,2011-11-02 19:39:24,Refactoring fe_szabab.C functions to use specialization instead of instantiation.,0,,0
e71f282,2011-11-02 19:39:55,The INSTANTIATE_MBRF macro is no longer necessary  after the FE specialization refactoring.,0,,0
7960b91,2011-11-03 15:19:36,Added Abaqus to UnstructuredMesh::read().,0,,0
0c60d61,2011-11-03 15:31:21,rbOOmit change: allow training_parameters_random_seed to be read in from file in rb_scm_construction,0,,0
6731a80,2011-11-03 17:02:55,Make ex6 write out .e files instead of .exd to be consistent with other examples.,0,,0
cb36398,2011-11-03 17:03:10,Refactoring inf_fe_jacobi_20_00_eval.C functions to use specialization instead of instantiation.,0,,0
c5ca15d,2011-11-03 17:03:24,Refactoring inf_fe_jacobi_30_00_eval.C functions to use specialization instead of instantiation.,0,,0
057af77,2011-11-03 17:03:38,Refactoring inf_fe_lagrange_eval.C functions to use specialization instead of instantiation.,0,,0
5dca71c,2011-11-03 17:03:53,Refactoring inf_fe_legendre_eval.C functions to use specialization instead of instantiation.,0,,0
cc372d8,2011-11-03 17:04:19,Removed redundant const from protected InfFE::eval() and InfFE::eval_deriv() interfaces.,0,,0
cb95f34,2011-11-03 17:26:55,Refactoring inf_fe_map_eval.C functions to use specialization instead of instantiation.,0,,0
769007a,2011-11-03 19:50:21,rbOOmit change: updated ex23,0,,0
8ae5a57,2011-11-03 20:10:40,rbOOmit: small changes to RBSCMConstruction,0,,0
9dbf061,2011-11-07 16:38:54,Fixing memory leak when merging existing parameters,1,,1
d381fe2,2011-11-07 17:17:33,Turn on keyword expansion in various new files.,0,,0
e4909a4,2011-11-07 17:52:34,Fixing really old bug which always caused 4 distribution factors to be written out for sidesets.  This was crashing some versions of Paraview.,1,,1
24ffa41,2011-11-07 18:17:16,Enabling keyword expansion in examples and fixing incorrect hard-coded date strings.,1,,1
5b8494a,2011-11-07 18:21:22,Enable keyword expansion in m4 files and fix hard-coded one.,1,,1
c82aea8,2011-11-07 18:29:24,SVN Keyword expansion cleanup,0,,0
67c098c,2011-11-07 18:30:24,Turned on keyword expansion for .c files as well.,0,,0
7d38ff5,2011-11-07 18:32:20,Fixed keyword expansion in example Makefiles.,1,,1
f9d6c15,2011-11-08 16:53:43,Macros to make compare_types.h a little more terse,0,,0
b3b5601,2011-11-08 17:49:18,Let the user specify that he wants to write Exodus files with mesh.mesh_dimension() rather than mesh.spatial_dimension().  This can be useful e.g. if you know that your 2D mesh lies in the z=0 plane.,0,,0
15958c3,2011-11-09 00:41:32,Added Elem::is_linear(),0,,0
e73cdbe,2011-11-09 00:42:54,That optimization is allowable for linear shape functions only  not for any affine element!,0,,0
67b28c0,2011-11-09 02:51:14,created new directories  include/reduced_basis and src/reduced_basis  and moved all the rbOOmit code into there,0,,0
ef0228c,2011-11-09 04:15:05,rbOOmit change: removed build_rb_evaluation from RBEIMConstruction,0,,0
9f5a403,2011-11-09 18:18:41,The Laplace mesh smoother does not currently work with parallel meshes.,0,,0
6855093.0,2011-11-09 18:22:48,Fix bug with L2_HIERARCHIC on non-simplices,1,,1
1d23ee1,2011-11-09 18:31:32,Use ExodusII instead of GMV for DG example,0,,0
7698aeb,2011-11-09 19:09:47,Fixed bugs in L2_HIERARCHIC.,1,,1
c627ec2,2011-11-09 19:25:09,Reverting Truman's fix  it was redundant after mine,1,,1
6e3914e,2011-11-09 20:16:18,Fix based on Boyce Griffith's patch for boundary calculations with shape-dependent quadrature rules or user-specified point sets,1,,1
33ff1ec,2011-11-09 20:26:02,Tagged libMesh 0.7.2-rc1,0,,0
48a67e4,2011-11-09 21:49:41,Updated CHANGES for 0.7.2,0,,0
9a31fd3,2011-11-09 22:02:03,Use sub_point_locator()  not deprecated point_locator(),0,,0
c7dd5e4,2011-11-09 22:03:36,Tiny optimization,0,,0
30030fd,2011-11-10 15:20:56,Added support for PRISM6/15 and TET10 elements to Abaqus reader.,0,,0
1b955a2,2011-11-10 20:02:20,Fix for discontinuous ExodusII output in parallel,1,,1
b280f3c,2011-11-10 20:25:48,Fix missing header includes,1,,0
07f0684,2011-11-10 20:30:26,"If a ""test_headers.sh"" includes any failures  return a failure code. ""make test_headers"" should now actually fail now when it fails",1,,0
07809bb,2011-11-10 21:00:47,Patch from Lorenzo Botti: Avoid unnecessary inverse_map() to get node locations,1,,0
749d109,2011-11-10 21:01:10,Tagging libMesh 0.7.2,0,,0
