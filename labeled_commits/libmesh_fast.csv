Document Title,Abstract,Year,PDF Link,label
14dc6e9,changed int to unsigned int for srand,2018,,
1c7e1ae,Added some documentation.,2018,,
0a7b376,fixed shared library linking on the IBM,2018,,
89243ad,fix for xlC,2018,,
e5e6193,added virtual bool Elem::infinite().  Will add inf_elem_iterators soon.,2018,,
868c69a,linker fix for cxx,2018,,
6ff9291,replaced unnecessary }  with } in examples,2018,,
b3cb54f,fixed (hacked?) configure for the IBM Power4,2018,,
02bc647,fixed (hacked?) configure for the IBM Power4,2018,,
6a19c7a,fixed (hacked?) configure for the IBM Power4,2018,,
98abf6a,OK  fixed for the last time?,2018,,
c259398,sorry to keep doing this... there is no autoconf on the IBM.,2018,,
859b965,sorry to keep doing this... there is no autoconf on the IBM.,2018,,
e6401ee,sorry to keep doing this... there is no autoconf on the IBM.,2018,,
ddf972b,final tweak for IBM xlC,2018,,
fb850fc,sorry to keep doing this... there is no autoconf on the IBM.,2018,,
b56812f,Added prism6 to unv_support. I also added it to write_gmv  where it is treated as a phex8.,2018,,
6c99922,minor optimizations in iinline point methods. print more useful information when a call to inverse_map fails,2018,,
5c09610,- moved the FEInterface::is_inf_elem to private.  There is no public need   anymore since bool Elem::infinite(). This clears up  the use of InfFE. - thought about the worth of inf_elem_iterator  and really do not need   them.  Would be straightforward to implement  so if anybody needs   them  tell me.,2018,,
639bd2c,various changes to InfFE: - fixed bug that occured only with higher-order base approximation - changed internal dof & node numbering scheme completely - added inverse_map() - split implementation files for better overview,2018,,
b24115f,moved the hanging node condtraint computation out of dof_map into the individual FE types.  This allows each FE type to implement its own constraint calculation  and the DofMap does not need to know anything about it.,2018,,
816881f,added #include<map>,2018,,
ca7104e,Added configure tests for hash_map and others.  Will start using these when available for performance-critical applications (like the find_neighbors() and point location methods,2018,,
7e69b1f,compiler optimizations,2018,,
6f8c950,fixes for SGI,2018,,
522b968,optimization options for xlC,2018,,
8eab73b,- added _build_ support for 2D infinite elements - fixed nodal_soln for infinite elements - added static member libMesh::zero.  May not be really necessary    but want to be on the safe side: who knows what the default   constructor of std::complex does with only one double passed in. - added container class FEComputeData.  Serves as a hide for   I/O to customized FE classes.  E.g. for the notorious infinite   elements  the compute_data()  using FEComputeData  is the physically   correct counterpart to shape(),2018,,
599016d,- cleaned up the EquationSystems::read() and write() to   (a) handle multiple vectors  if desired    (b) delegated tasks to SystemBase that SystemBase can do   (c) added get_info() for SystemBase  two more inline methods in EqnSysBase    (d) fixed a silly bug in FrequencySystem that did allocate additional       vectors  but omitted to assign values,2018,,
23fa027,forgot to add this one...,2018,,
7b9185f,"fixes for HP.  Ben  was it IBM or SGI that did not like this ""FE<Dim-1 ...>""?  I fixed that for HP  perhaps the other compilers are now happy  too.",2018,,
52913e7,technically  an iterator and a const_iterator are different types of objects  and comparisons between the two are not allowed.  fixed two instances of this,2018,,
2938e02,oops...  did not mean to check these in!  undid the change,2018,,
6ff230f,added libMesh::msg() and libMesh::err() as parallel-aware replacements for std::cout and std::cerr  respectively.  This is much like the message and error_message functionality in s3  but without the macros,2018,,
eb2d1f7,Added command-line parsing for true/false flags via the libMesh::on_command_line() method.  This is used to enable run-time switching between solver packages.  For example  if you have PETSc and LASPACK installed you can switch between them like this:,2018,,
5c89ad5,updated the dependencies for command-line parsing,2018,,
0ca79ec,fixed doc bug,2018,,
fab0cad,forget libMesh::msg() et. al  found a way to reroute std::cout so that messages do not appear from non-processor 0 processors.,2018,,
b489176,forget libMesh::msg() et. al  found a way to reroute std::cout so that messages do not appear from non-processor 0 processors.,2018,,
56b7f91,Added a build_solution_vector overload in equation_systems which can be used to build (locally) the global solution for a single variable in a single system.  I cant remember why I wanted to do that  the code is untested and has error() in the beginning.  Testing to come.,2018,,
d36d854,fixed a missing std:: in getpot.h,2018,,
0187a7e,added NewmarkSystem derived from SystemBase and an example 8 to show how NewmarkSystem can be used,2018,,
6c057b0,uhps  forgot to check in header file,2018,,
68a9091,forgot the .C-file too,2018,,
f6597a2,* Ben once said  EquationSystems should take care of time stepping.   so i changed ex8 to make use of the EquationSystems features (flag    param) * added two macros that keep instantiation data in (almost) one place    for the two templated classes EquationSystems<> and FE<>.  This   was already done with InfFE<>. * cleaned NewmarkSystem of some unnecessary member data,2018,,
2faea96,forgot to add .depend and fix .cvsignore... here it is.  -),2018,,
670efee,improved compatibility with infinite elements.  Sorry John  when i added the if-test  i did not think that conventional FE may still need it. Right now  i think this is something we both can live with  -),2018,,
3fed62c,just moved a few lines,2018,,
538e613,small compatibility enhancements: - explicitly assigning values to the FEFamily entries helps in   identifying the family  whether a .dat file was produced with or   without enabled ifem - for the EquationSystems<T> I/O it actually does not matter   what System type it handles  and what system type it loads.   So  changed the error (in case of system type mismatch) to a simple std::out - added in FrequencySystem the EquationSystems::parameter n_frequencies,2018,,
f7b6610,Changed targets in the example programs from ex1 to ./ex1  for example.  This fixes the problem of not having . in your path  which was pointed out by Denis.  Thanks.,2018,,
a257c77,updated config.guess and config.sub from ftp.gnu.org/pub/gnu/config,2018,,
fa1c98d,check for strstream if sstream is not found,2018,,
63f1e9b,fixed aclocal  was printing incorrect comments for locale and sstream #defines,2018,,
3e564af,Added a bool argument secure to FEInterface::inverse_map and respective methods in FE and InfFE. If secure is false we do not bother about convergence of the newton algorithm in inverse_map (e.g. when checking if an element contains a certain point).,2018,,
d403113,added a missing #ifdef ENABLE_INFINITE_ELEMENTS,2018,,
7245f1c,removed const problem from getpot,2018,,
eec0334,Added an additional acronym.,2018,,
035b6c5,implemented matrix/vector product in LaspackVector  now successfully runs ex8,2018,,
5c8eeb3,This commit was manufactured by cvs2svn to create tag 'libmesh-0_3_4'.,2018,,
c5e9041,removed *.html from the .cvsignore file.  This probably prevented the footer.html file from getting updated for some of you.  This file is needed as it adds a reference to SourceForge that allows them to monitor the website traffic.,2018,,
4312a2c,forgot to replace an @ in the make rule for ex1,2018,,
c0d3a52,describe what Mesh/MeshBase offers,2018,,
d2e8cfa,corrections for --enable-ifem: InfFE and FE now use identical FEType to ease overall handling  added FEBase::build_InfFE  some typos,2018,,
4510a6e,partial fixes for InfFE  removed empty face_infinite.C  added some explanatory comments for invalid calls to n_dofs etc  added an example #5 -- better do not use it (yet)  currently only for debugging InfFE  Had some problems with the build_cube() method  with higher-order HEX elements: too many nodes initialized. Only gcc 295? don't know  haven't tested...,2018,,
0f7d15d,Added Jacobi quadrature rules. These rules allow for conical product quadrature to be performed on tris and tets.  Although these types of rules are non-optimal (use more points than necessary and cluster points) they are correct  and easy to construct for high orders.  At this time  if you select anything beyond fifth-order quadrature for tets or tris you will get a conical product Gauss-Jacobi rule.  Other changes include fixing a broken 7 point Gauss quadrature rule which had the wrong weights  and making a few functions in the QBase class virtual instead of pure virtual.  This way you can create concrete quadrature classes without implementing anything for 2 and 3D.  The init_1D function is still pure virtual so you will at least need to define 1D quadrature rules if you create a new class.,2018,,
b574311,The map inversion no longer makes assumptions about dimensionality.  Specifically  you can find the inverse map of a point in 3-space that sits on a 1D edge eleement.  This is being used to create more general & efficient hanging node constraints.  Also added the amr example program.,2018,,
9.695e+49,added static build method for quadrature rules (who _needs_ this? - Ifem  & fun  -)  moved example 5 (ifems) to example 6  example 5 now departs from example 4 and dwells on the use of the QBase::build  added namespace QuadratureRules (similar to ElemQuality etc),2018,,
fe1e990,Added ex7. This example uses complex numbers.,2018,,
9ba2878,some optimizations in the Point class.  Removed unnecessary constructor calls.,2018,,
7.49e+82,PerfLog now records the time an object exists and the total time spent in logged methods.  This allows for a more meaninful percentage to be displayed,2018,,
3843f04,Removed a couple of unnecessary return  statements.,2018,,
ea55009,rearranged some configure tests  reformatted the PerfLog print line,2018,,
8715f40,finally understood what the Jacobi quadrature is all about  fixed the QBase::build appropriately  so that it makes more sense  took the liberty to include this gained knowledge in the QJacobi documentation,2018,,
4a99422,minor optimizations.  Will add a universal PerfLog that all classes can log to rather than one PerfLog per class,2018,,
71531c3,changed gmv_support to write abs() when complex is enabled.,2018,,
a891cf3,added laspack in the contrib directory.  This will be used to build non-parallel iterative solvers,2018,,
9f875d7,documentation  added run target to examples Makefiles  ComplexDenseMatrix can now add a RealDenseMatrix  but obviously not vice versa,2018,,
3362bdc,pretty builds,2018,,
91ffa81,added SparseMatrix base class.  This will allow transparent switching between Petsc and Laspack solvers.  LaspackMatrix mostly implemented.,2018,,
369245b,"minor documentation fix for namespace Petsc  for --enable-ifem: decreased virtual members in FE classes  so that uniform usage of both FE and InfFE is now possible: see ex6  ex6: included variational form  need thorough testing! fixed ""make examples"" dependency  adjusted to Ben's pretty builds",2018,,
e36707c,This may be only temporary (wanted to do patch but cannot  since patch only works on revisions already in the repository) -- Open for discussion  will send email --- Note: library still works with this  but this is definitely not final state Split up SystemData to accomodate for other physical problem classes,2018,,
83641b1,Abstracted out PetscMatrix  PetscVector  and PetscInterface.  Added support for LASPACK solvers  uniprocessor real only at the moment.  Should be easy to extend to uniprocessor complex.  Will make SystemBase dynamically switch between solver packages at runtime  most likely tomorrow.,2018,,
4c98bd8,removed stray copy/paste error,2018,,
53d409b,manicure,2018,,
2a1a66e,manicure,2018,,
9cba32d,small documentation fixes: doxygen now runs without any complaints  simplified & corrected ex7 param list to be more handle-safe,2018,,
d8d0fed,LASPACK solvers now work for real data types.  To use them do ./configure --disable-petsc,2018,,
340ea83,LASPACK solvers now work for real data types.  To use them do ./configure --disable-petsc,2018,,
8c88ff5,fixed broken LaspackVector assignment operator,2018,,
9c03490,IRIX compatibility fixes,2018,,
5ff91e3,IRIX compatibility fixes,2018,,
7b5c3c1,compatibility fixes,2018,,
e8510cd,configure for mpi,2018,,
6540bb9,SystemData now became GeneralSystem  this works fine  but EquationSystems currently only handles a GeneralSystem  added FrequencySystem (only an outline!)  documentation,2018,,
e52e015,dded the PredicatedIterator class.  The PredicatedIterator is derived from std::iterator and is designed to mimic the usual iteration over the contents of a container. It differs from normal iterators in that op++ automatically advances the iterator to the next item in the container which satisfies the user-supplied predicate.  From the abstract PredicatedIterator base class  several concrete classes have already been defined.  They are currently used in the MeshBase class to iterate over the _elements vector.  Whereas before one would say:,2018,,
1c322e7,Changed default behavior of the basic_elem_iterator to return true if the Elem* is not NULL.  Added typedefs for predicated iterators into arrays of Elem*.  Added accessor functions to elem.h to return the begin and end of the neighbors array.  This may be useful when iterating over neighbors and deciding which ones are (are not) on the boundary.,2018,,
45285d4,added the DofObject class.  This moves the dof indexing out of the DofMap class and into the Elem and Node objects.  This should be the last big design change necessary to facilitate parallelizing the reamining data structures.,2018,,
10cb649,added node iterators,2018,,
2a8c42d,IRIX syntax changes,2018,,
3d84fdf,removed all unnecessary   from the code,2018,,
b00d68f,added the libMesh all-static class for bookkeeping.  Consolidated to one PerfLog for the library.,2018,,
1aa8540,added the libMesh all-static class for bookkeeping.  Consolidated to one PerfLog for the library.,2018,,
aa1a08b,Changed basic_active_type_elem_iterator to be multiply inherited from active_elem_iterator and type_elem_iterator rather than reimplementing the functionality of either.  May turn out to be really useful for composite predicate iterators  or may be dangerous.  Time will tell.,2018,,
6d4fe60,fixed a bug in the DofObject that only allowed for one system,2018,,
8000555.0,fix for multiple systems,2018,,
d4a35ba,minor FE optimizations.  Changed DofMap::component stuff to DofMap::variable to be more consistent with all the other classes in the code,2018,,
d2c7100,fixed a bug in libMesh that copied argc and argv instead of taking references,2018,,
79a735c,one final DofMap::component changed to variable,2018,,
1535141.0,Added multiply-inherited basic_active_pid_elem_iterator. Fixed some virtual inheritance classes which needed to explicitly call their hared parents constructor.,2018,,
08c57f7,used the active_pid_elem_iterator to make the DofMap more clear,2018,,
8818121.0,added the DistributedVector class.  This will be used to hide some details in parallelizing the library,2018,,
16ab5fa,finished DistributedVector,2018,,
d763f11,Templated all the numeric data types to provide a clearer distinction between Real and Complex data types.,2018,,
f59025b,minor SGI fixes,2018,,
a04a884,fixed some bugs in InfFE,2018,,
df31347,documentation,2018,,
9aaf1a6,documentation formatting,2018,,
5f28080,added compute map to update the radial distances and shape functions independently,2018,,
e7d01d7,Silly documentation stuff.  Added the Tet10 embedding matrices at long last for refining those elements.  Will likely release libmesh-0.3.0 tomorrow,2018,,
084ab07,redid the Tecplot support so that it writes one file even with complex numbers,2018,,
51b34ec,fixed for 0.3.0 release,2018,,
0a54fa8,Made the predicate member protected.  There is no reason that the user should be allowed to call it. Also added a make doc command to the upload documentation script so that if there is no documentation  some will get built before you rsync.,2018,,
05ad08d,documentation,2018,,
d48dcb1,stylesheet fixed,2018,,
41fdd30,This commit was manufactured by cvs2svn to create tag 'libmesh-0_3_0'.,2018,,
9e45641,Update DiffPhysics::time_evolving to store time order,2018,,
4fb2e2f,Add DiffSystem::time_evolving() overrides,2018,,
f711b27,Add UnsteadySolver hooks for specifying var order,2018,,
78113a0,Indicate time order to UnsteadySolver,2018,,
e9bfca0,Make space for DiffContext second order var accels,2018,,
bf0ddd7,Add FirstOrderUnsteadySolver::init() override,2018,,
12040cb,Add new FirstOrderUnsteadySolver source and bootstrap,2018,,
654db99,Rework CheckpointIO a bit to make it more conducive toward working as a splitting format,2018,,
d7ee4e8,Add the ability to set the processor_id and n_procs for CheckpointIO,2018,,
6d87d35,Fixup CheckpointIO again to make it work properly for serial,2018,,
35ce521,More fixes for CheckpointIO parallel writing.,2018,,
0e4af23,Some optimization of Parallel CheckpointIO writing,2018,,
84f7a96,Add splitter app for splitting mesh files into parallel CheckpointIO partitions,2018,,
7.35e+57,Makefile updates for splitter app,2018,,
ca61348,PointNeighborCoupling class,2018,,
349419b,Build PointNeighborCoupling code,2018,,
7d6695b,Re-bootstrap,2018,,
d00137d,Some small updates to read_ref_elem().,2018,,
de0f71f,fix operator= for vecs with nonlocal state,2018,,
ce1d9dd,Merge pull request #1132 from rwcarlsen/fix-op-eq,2018,,
6c2c460,Use UniquePtr to manage helper class lifetimes in ExodusII_IO and Nemesis_IO.,2018,,
9a3930e,Merge pull request #1133 from jwpeterson/reference_elem,2018,,
47663c2,Treat empty _dof_coupling as full _dof_coupling,2018,,
9768197.0,Optionally skip find_neighbors in MeshBase::read,2018,,
e867f9c,Added 'target' spectrum positions,2018,,
4575b72,Merge pull request #1136 from dknez/skip_find_neighbors_in_read,2018,,
57a795b,Merge pull request #1135 from jwpeterson/unique_helper,2018,,
66af865,Update citations.,2018,,
b64cb69,Merge branch 'set_initial_space',2018,,
4da7227,Add PointNeighborCoupling unit test,2018,,
68fc793,Build and run PointNeighborCoupling test,2018,,
9df0a07,Re-bootstrap,2018,,
53834a1,Add option to set initial guess for the SLEPc eigensolver.,2018,,
2d2f1ec,Leave _default_evaluating->_dof_coupling == NULL,2018,,
2a9eb87,Avoid unused variable warning in some configs.,2018,,
562c4ad,Disallow renumbering of GMV meshes in non-deprecated way.,2018,,
26b0bb4,Use std::vector in GMVIO instead of manually managing memory.,2018,,
fd44b19,Fix binary writing of GMV files.,2018,,
680f909,Merge pull request #1140 from jwpeterson/gmv_delete,2018,,
430a7dd,Bugfix merges of NULL+non-null CouplingMatrix,2018,,
981b255,Fix spacing/indentation issues.,2018,,
e98e2bb,Merge pull request #1134 from roystgnr/handle_empty_dof_coupling,2018,,
c2a08b1,Merge branch 'pos_target',2018,,
d115ccc,Guard use EPS_TARGET_XXX to SLEPc >= 3.1.,2018,,
2614ad9,eigenproblems_ex2 is already wrapped in ifdefs.,2018,,
2148bdb,Always check for successful cast.,2018,,
6f9f1f2,Fix remaining C-style comments.,2018,,
6e92862,Merge branch 'slepc_misc',2018,,
11c7afd,Merge pull request #1139 from roystgnr/safer_algebraic_coupling,2018,,
5866cf6,fix for distcheck,2018,,
0c1355e,Use UniquePtr to automatically manage lifetime of _periodic_boundaries.,2018,,
09ea823,Use UniquePtr to automatically manage lifetime of _dirichlet_boundaries.,2018,,
ef54050,Manage lifetime of tetgen_output object with a UniquePtr.,2018,,
d01ed87,Merge branch 'tetgen_unique',2018,,
6c2beb6,Manage lifetime of _pmetis pointer with UniquePtr.,2018,,
c59d1c1,Manage lifetime of _fe and _qrule in RBEIMAssembly with UniquePtr.,2018,,
99ef670,Manage lifetime of _mesh_function in RBEIMConstruction with UniquePtr.,2018,,
3fa9220,Remove unnecessary release/delete idiom.,2018,,
d8459f4,Manage subprecond_matrix lifetime with a UniquePtr.,2018,,
cc7584a,MatSetTransposeNullSpace requires PETSc >= 3.6.,2018,,
9ec197a,Merge pull request #1141 from jwpeterson/unique_boundaries,2018,,
e478f82,Manage lifetime of matrix_A and matrix_B with UniquePtrs.,2018,,
ce95843,Manage the lifetime of _edge_qrule with a UniquePtr.,2018,,
76059a6,Use a UniquePtr to manage the lifetime of xdrs in the Xdr class.,2018,,
76eae43,Avoid dynamic memory allocation for fixed length array.,2018,,
523ebdb,Manage the lifetime of EpetraVector::_map with a UniquePtr.,2018,,
d961c3d,Merge pull request #1142 from jwpeterson/guard_petsc,2018,,
0927af7,Merge pull request #1107 from roystgnr/point_neighbor_coupling,2018,,
9ba8fb4,fix for distcheck,2018,,
85dbadd,fix for --disable-optional,2018,,
b890605,fix for --disable-amr,2018,,
186335f,Test updated traffic collection script.,2018,,
11b1944,Merge pull request #1143 from jwpeterson/uniquify,2018,,
82e3be9,Deprecate ImplicitSystem::get_linear_solver().,2018,,
7cf702d,Fix scripting atavism,2018,,
03266f4,Fix unique_id setting in all_tri(),2018,,
6f9c020,Fix heisenbug in all_tri(),2018,,
bd5447c,Merge pull request #1144 from roystgnr/fix_all_tri,2018,,
d04985b,fix shim constructor for when fparser is not available,2018,,
4cd8af3,Merge pull request #1145 from jwpeterson/get_linear_solver,2018,,
93954d7,Add TRI3  QUAD4 cases to Szabab case statements.,2018,,
406d9cb,Fix for new UniquePtr member in ENABLE_SLEPC case,2018,,
753e29d,Merge pull request #1147 from roystgnr/enable_slepc_fix,2018,,
ca11037,Merge pull request #1148 from jwpeterson/szabab,2018,,
c067132,Update citations.,2018,,
f493d85,Update traffic.,2018,,
0fff089,Update citations.,2018,,
78a89d6,Update statistics for Oct 2016.,2018,,
88b953b,Regenerate publications website.,2018,,
3099d33,build_InfFE in FEMContext when necessary,2018,,
326387c,Adding Elem::is_mid_infinite_edge_node(),2018,,
8e3a0a9,infinite-edge-node-aware parent_bracketing_nodes,2018,,
66cdacf,Remove overzealous InfFE assert,2018,,
7d98795,radial_pts option in init_radial_shape_functions,2018,,
3f4fda1,InfFE::reinit() should support pts argument,2018,,
08f4bd8,InfFE::combine_base_radial() without qrules,2018,,
e81ba90,Fixes for --disable-ifem configuration,2018,,
3a90559,Try local projections when needed on InfFE,2018,,
87ffa2d,Update citations.,2018,,
3f3e1b1,Update traffic.,2018,,
5b5c132,ifdef to handle --disable-periodic case,2018,,
7f27a6b,get() underlying pointer before testing smart ptr,2018,,
a70dae9,Use TOLERANCE in systems_of_equations_ex3,2018,,
c71a4fe,Using os_unfair_lock on mac OS X Sierra,2018,,
bf49639,Merge pull request #1154 from libMesh/andrsd/sierra-spin-lock,2018,,
08f7bb7,Allow virtual methods for edge_fe_reinit() and elem_fe_reinit(),2018,,
ecd5682,Merge pull request #1152 from roystgnr/auto_ptr_fix,2018,,
7d4ce47,Merge pull request #1150 from roystgnr/adaptive_inf_fem,2018,,
846bb4f,Merge pull request #1151 from roystgnr/disable_periodic_fix,2018,,
657124d,Merge pull request #1153 from roystgnr/variable_systems_ex3_tol,2018,,
ff59ce1,NonlinearImplicitSystem::ComputeVectorSubspace as an abstract class,2018,,
ec82973,Merge pull request #1155 from balborian/patch-1,2018,,
c9d4d1a,Update .mailmap.,2018,,
5d7e734,Merge pull request #1156 from balborian/patch-2,2018,,
4fdf0da,Update traffic.,2018,,
e0d761f,"Fix ""maybe uninitialized"" warning from GCC 5.3.0.",2018,,
d9d8ce5,Avoid deprecated-declaration warnings in nanoflann examples.,2018,,
690a8bb,Merge pull request #1157 from jwpeterson/fix_warning,2018,,
d25b578,Don't try to run CLOUGH with threads,2018,,
b2a36db,Enable 1D HERMITE elements of arbitrary p,2018,,
1a8f034,1D hp tests in examples,2018,,
b2af793,Avoid unused variable warnings in opt mode,2018,,
9b31174,Report the unique_id in Elem::get_info().,2018,,
559d5d7,Write out elements connected to local elements,2018,,
ac6c6d9,Fix spacing/indentation in splitter app.,2018,,
34418c0,Remove unnecessary headers from splitter app.,2018,,
27e4b01,Fix for/if statement spacing.,2018,,
09a5dcd,Make writing files from splitter app the default.,2018,,
657ffed,Add CheckpointIO unit test.,2018,,
8be6824,Run bootstrap.,2018,,
de27e8d,Merge pull request #1160 from jwpeterson/checkpoint_split_ghosting_functor_merge,2018,,
fb99e38,Print the physical point when inverse_map() fails.,2018,,
505537f,Add support for --redirect-output command line option.,2018,,
d418ee9,Terminology fix in comment,2018,,
4bf4ec5,Prefix libMesh Parallel:: macros with LIBMESH_,2018,,
243c47e,Removed overzealous assert,2018,,
9c782a6,Fix GetPot off-by-1 bug.,2018,,
dd47a1b,Merge pull request #1162 from roystgnr/libmesh_prefix_macros,2018,,
66dc3ee,Merge pull request #1161 from dknez/remove_assert,2018,,
57be7d8,Merge pull request #1163 from jwpeterson/redirect_output,2018,,
d6dfcf5,Update citations.,2018,,
273f3c8,Update traffic.,2018,,
dfdd1a7,MeshBase option to stop delete_remote_elements(),2018,,
998e24a,Approximation order option in adaptivity ex4,2018,,
1201497.0,Comment on why we turn off Clough-Tocher threads,2018,,
3e3994a,Support 1D runs in adaptivity_ex4,2018,,
e806015,Do a p=4 1D run in adaptivity_ex4,2018,,
72be577,Checkpoint unit test assumes ReplicatedMesh,2018,,
7adf183,Put renamed Mesh subclasses in renamed headers,2018,,
ebead48,Add replicated/distributed headers to build system,2018,,
9691890.0,Old headers are now shims for new headers,2018,,
4.52e+88,Merge pull request #1166 from roystgnr/adaptivity_ex4_coverage,2018,,
ac467ee,Re-bootstrap,2018,,
e9c2975,Use new header names in library sources,2018,,
e1a76f1,Use replicated_mesh.h in unit tests,2018,,
2938f12,Use replicated_mesh.h in examples,2018,,
796b7cd,Examples use ReplicatedMesh/DistributedMesh names,2018,,
190b366,Merge pull request #1164 from roystgnr/no_remote_removal_option,2018,,
75391d1,Use new names in unit tests,2018,,
277f563,include parallel_mesh.h in code using ParallelMesh,2018,,
53d4a7a,Move shim classes into shim headers,2018,,
90816df,Merge pull request #1167 from roystgnr/checkpoint_unit_fix,2018,,
33125a8,Update traffic.,2018,,
cf59a6a,Update citations.,2018,,
45402ad,Update citations.,2018,,
205902.0,Update LOC count for November 2016.,2018,,
6634b72,Merge pull request #1168 from roystgnr/fix_header_names,2018,,
da48147,Rename parallel/serial_mesh.C,2018,,
4fb224e,Re-bootstrap,2018,,
bc1ab16,Use static lookup table for Elem names in GMVIO.,2018,,
5113c24,Merge pull request #1170 from roystgnr/rename_mesh_sources,2018,,
75775b3,Add GMV node map for Hex27.,2018,,
28c4689,Merge branch 'gmv',2018,,
977829a,Fix unused variable warning in ParsedFEMFunction,2018,,
5c1ba6f,Add GetPot::get_subsection_names() method,2018,,
f076f35,Unit tests for GetPot::get_subsection_names(),2018,,
42f5721,Ignore missing override warnings from VTK headers.,2018,,
839239.0,Fix for VTK 7.1 compatibility.,2018,,
f67b842,Merge pull request #1173 from jwpeterson/vtk_71,2018,,
c2833ad,Merge pull request #1171 from roystgnr/unused_variable_warning_fix,2018,,
72b3fb7,Merge pull request #1172 from roystgnr/getpot_subsections,2018,,
f0fa117,Update statistics for Nov 2016.,2018,,
0d32937,Regenerate PDFs.,2018,,
a720837,Set up SLEPc defines for major  minor  subminor version numbers.,2018,,
9461ccb,Run bootstrap.,2018,,
4f098cf,Implement SLEPC_VERSION_LESS_THAN macro with new defines.,2018,,
7bc4279,Fix Trilinos ifdefs.,2018,,
3bb3113,Add configure test for Epetra_CombineMode.h.,2018,,
55f1ff6,Run bootstrap.,2018,,
6b62fb8,Merge pull request #1175 from jwpeterson/slepc_version_detect,2018,,
e39b579,Merge pull request #1176 from jwpeterson/trilinos_check,2018,,
4636ea5,Do not set VTK_LEGACY_REMOVE.,2018,,
ef77864,Merge pull request #1177 from jwpeterson/vtk_fix,2018,,
c65f552,Update citations.,2018,,
cbab3c3,Update LOC count for December 2016.,2018,,
9fb26a9,Add PointLocatorBase::locate_node(),2018,,
352833.0,Add PointLocatorTest unit tests,2018,,
20fb0e9,Build and run PointLocatorTest,2018,,
58ed2f7,Re-bootstrap,2018,,
f88d1e9,Merge in NEWS file updates from 1.1.0 branch.,2018,,
4cfac82,Update configure.ac version to 1.2.0-pre.,2018,,
1b95fd3,Run bootstrap.,2018,,
d5d2f32,Add tolerance option to locate_node(),2018,,
5e16786,Fix about-to-be-ambiguous overload,2018,,
6b058d5,Add dof_indices(Node*) overload,2018,,
460d742,Add DofMap::is_evaluable(Node) overload,2018,,
4c8b88a,Add code for initializing/finalizing vtkMPIController.,2018,,
521d984,Add configure test for vtkMPIController support in VTK.,2018,,
76d360d,Run bootstrap.,2018,,
e9f8df6,Don't AC_SUBST or AC_DEFINE unless working VTK is found.,2018,,
937515f,Enable evaluable predicate on Nodes,2018,,
844c5e4,Add evaluable_nodes iterators,2018,,
ede081b,Merge pull request #1178 from roystgnr/locate_node,2018,,
74a7ec0,Ignore warnings from VTK header.,2018,,
5518d83,Update configure test for VTK-5.x.,2018,,
7a4c729,Run bootstrap.,2018,,
f2142a8,Fix shadowing issue in CheckpointIO::build_elem_list().,2018,,
3e8292b,find_point_neighbors() can only be called on active elements.,2018,,
f5ff7f2,Clear neighbors every time now that we aren't always calling find_point_neighbors().,2018,,
5.129e+96,Only write current-level elements in write_connectivity().,2018,,
9fea023,Merge pull request #1181 from jwpeterson/vtk_mpi,2018,,
ab18980,Merge pull request #1180 from roystgnr/evaluable_node,2018,,
7b2002a,Actually overwrite constraints when users request,2018,,
9c90583,Merge pull request #1182 from jwpeterson/checkpoint_io_fix,2018,,
a6b6a26,Doxygen: Playing around with PREDEFINED option.,2018,,
54f2666,Doxygen: Properly escape math.,2018,,
7c2e7c7,Merge pull request #1183 from roystgnr/overwrite_constraints,2018,,
7d4768b,Bugfix for FEMContext::pre_fe_reinit SCALAR case,2018,,
b3edfb2,Doxygen: Add \brief descriptions for classes in geom.,2018,,
8c6448b,Doxygen: Remove libmesh_final directives before calling Doxygen.,2018,,
e2a0ccb,Run bootstrap.,2018,,
a631d2a,Merge pull request #1185 from roystgnr/fem_context_scalar_fix,2018,,
e20b8b2,"Revert ""Doxygen: Playing around with PREDEFINED option.""",2018,,
47e49a4,Mark new iterator functions libmesh_override.,2018,,
a61bbec,Add historic authorship information.,2018,,
cc9f581,Merge pull request #1186 from jwpeterson/doxygen_fixes,2018,,
31e773e,Fix typo.,2018,,
d32ff19,Reduce the number of dot threads used by Doxygen.,2018,,
bc0e0c7,Update traffic.,2018,,
b357727,More historical authorship information.,2018,,
6212445.0,int -> PetscBLASInt in BLAS/LAPACK routines.,2018,,
1bf2423,Remove duplicate type information from documentation.,2018,,
c3659b1,The _pivots array should use PetscBLASInt when PETSc is available.,2018,,
2154abc,Use PetscBLASInt when calling SLEPc wrapped BLAS too.,2018,,
743fd75,Merge pull request #1188 from jwpeterson/petsc_blas_int,2018,,
2f3dfee,Update traffic.,2018,,
67c1f05,Use only VTK header that's needed,2018,,
a3341f0,Merge pull request #1189 from pbauman/vtk-header-fix,2018,,
3ee1d6c,Fix gmsh numbering and node ordering for PRISM15. (Resolves #1191),2018,,
eca6c9a,AdjointRefinement ghosted adjoint compatibility,2018,,
91f5741,Merge pull request #1193 from roystgnr/adjoint_refinement_ghosted_fix,2018,,
3670e8a,Use vector  not map  for xda_systems,2018,,
b46e08f,Use pointer argument in read_SCALAR_dofs,2018,,
c0b9852,read_serialized_blocked_dof_objects NULL handling,2018,,
ff7aed9,Use pointer in templated read_serialized_vector,2018,,
4fd552c,Always read past additional vector data,2018,,
862c0c7,Update traffic.,2018,,
1bb0b5d,Merge pull request #1194 from roystgnr/fix_multisystem_reads,2018,,
b0ff744,Merge pull request #1192 from lindsayad/gmsh_prism_1191,2018,,
34e880d,Update citations.,2018,,
9a646d1,Increase the target_bin_size in TreeNode beyond a specified refinement level,2018,,
d94ac5d,Merge pull request #1196 from dknez/target_bin_size_increase,2018,,
26a697d,Resolved issue with linear dependence in inverse_map().,2018,,
2824584.0,Update citations.,2018,,
8e0497f,Update traffic.,2018,,
fa406e1,Update traffic.,2018,,
63e648b,Update citations.,2018,,
2a16c4c,Add extra trilinos package search paths,2018,,
8a41433,Update statistics for December 2016.,2018,,
ad18418,Merge pull request #1202 from rppawlo/issue_1201,2018,,
1556c24,Add libmesh_isinf() helper function.,2018,,
6c7743e,Use libmesh_isinf() in InfFE::inverse_map().,2018,,
92fa593,Test UniquePtr  not AutoPtr,2018,,
388553e,Merge pull request #1203 from jwpeterson/ifem_isinf,2018,,
13f28c9,Move GitHub traffic data into CSV files.,2018,,
21ac9c4,Loosen tolerance on straight-line check in Edge3::volume().,2018,,
bf300b0,Re-bootstrap,2018,,
7f99a80,Avoid unnecessary calculations in straight-line case.,2018,,
07e5d51,Better CheckpointIO error message,2018,,
82528fd,parallel apparently might not be 0 or 1!,2018,,
c43122e,CheckpointIO test barrier between read and write,2018,,
082e88d,Merge pull request #1204 from roystgnr/unique_ptr_test,2018,,
36a0964,Merge pull request #1206 from roystgnr/checkpoint_io_error_message,2018,,
ae5f457,Update traffic.,2018,,
195f412,Merge pull request #1205 from jwpeterson/edge3_vol_fix,2018,,
7c9228f,Update citations.,2018,,
5ea7fe1,Fix issue with errno.h inclusion in a namespace.,2018,,
628b5d9,Update configure test for errno.h issue.,2018,,
ceee626,Run bootstrap.,2018,,
5c0fe61,Update LOC count for January 2017.,2018,,
2dbe38f,Merge pull request #1209 from jwpeterson/errno_fix,2018,,
ea6803a,Reorder paths starting with /lib to the end of the list.,2018,,
e61b691,Fix regexes which were too greedy.,2018,,
80d4a22,Merge pull request #1210 from jwpeterson/reorder_libs,2018,,
bc46eac,Merge pull request #1207 from roystgnr/checkpoint_test_barrier,2018,,
fe105ad,Fix documentation typos and wording in include/geom.,2018,,
3eadd78,Update citations.,2018,,
b36673c,Update copyright notice for 2017.,2018,,
ec5c76f,Fix documentation typos and wording in include/partitioning.,2018,,
d0fac29,Fix documentation typos and wording in include/quadrature.,2018,,
b7bfe3d,Use Gauss quadrature in 1D for QConical.,2018,,
b0e6395,Use Gauss quadrature in 1D for QGrundmann_Moller.,2018,,
0d33d7e,Merge branch 'spellcheck',2018,,
8fd59cb,Optionally skip lower dimensional element in element counting in TreeNode,2018,,
d5c3f9a,Merge pull request #1211 from dknez/tree_node_elem_count,2018,,
5b98917,regex_match is in namespace std.,2018,,
17ad994,Run bootstrap.,2018,,
e241435,Merge branch 'regex_test',2018,,
00d5f17,Update traffic.,2018,,
0ef555e,Update citations.,2018,,
61b4b46,More robust caching with Clough-Tocher elements,2018,,
4376a57,distcheck fix,2018,,
7138f9d,Update citations.,2018,,
86e715b,Use the -fno-limit-debug-info flag in dbg/devel mode for clang.,2018,,
7c83307,Run bootstrap.,2018,,
0c296b1,Only serialize the mesh to processor 0 for Exodus,2018,,
12eb1e3,Update traffic.,2018,,
61a2cbb,Merge pull request #1212 from roystgnr/clough_caching,2018,,
b2c2cf7,Merge pull request #1213 from jwpeterson/clang_dbg,2018,,
3770f87,For char and unsigned char parameters  convert to int before printing to avoid displaying unprintable characters.,2018,,
b8bda48,n_edge_conds() can be parallel_only: don't skip it,2018,,
fadfe2b,Only processors which gathered reset_remote_elem,2018,,
ac346b7,Use C++ style casts.,2018,,
1e95a6f,Merge branch 'brianmoose/param',2018,,
3e184fa,More accurate echo in example run script messages,2018,,
fa49336,Add a barrier() to ~LibMeshInit,2018,,
a30b871,Use libmesh_call_mpi() in LibMeshInit code,2018,,
d58277d,Add '-Wunused -Wunused-parameter' for clang in all modes.,2018,,
07639a3,Fix unused parameter warnings found with new flags.,2018,,
7fe245f,Fix new unused-variable warnings in contrib.,2018,,
3613df9,Merge pull request #1217 from jwpeterson/clang_unused,2018,,
8352e5b,DEBUG is not defined in devel mode.,2018,,
b8e71c0,Merge pull request #1221 from jwpeterson/mesh_to_zero,2018,,
1ef35a4,Merge pull request #1218 from roystgnr/message_tweak,2018,,
20a9288,Merge pull request #1219 from roystgnr/libmeshinit_tweaks,2018,,
1862113.0,Update traffic.,2018,,
e8917f2,Add MeshTools::paranoid_n_levels(),2018,,
5df1bf5,Use paranoid_n_levels() in broadcast(),2018,,
2833a07,MeshCommunication::send_coarse_ghosts(),2018,,
2ed63e3,Use send_coarse_ghosts() after coarsening,2018,,
6afd568,Merge pull request #1223 from roystgnr/paranoid_n_levels,2018,,
31ac36d,Update citations.,2018,,
40b4393,Merge pull request #1224 from roystgnr/send_coarse_ghosts,2018,,
9f6a0c7,MeshTools::n*levels was broken on empty meshes,2018,,
a1727d6,Merge pull request #1225 from roystgnr/zero_level_meshes,2018,,
4c1a343,Avoid vtkSmartPointer include,2018,,
4c0e873,Make sync_node_data_by_element_id robust,2018,,
f7e1304,Ensure new nodes are created with valid id+proc_id,2018,,
dbb1ab6,Fix all_second_order() with DistributedMesh,2018,,
dd4b6f6,Update statistics for Jan 2017.,2018,,
ed0a97e,Change node processor_id() during refinement,2018,,
93a9497,Sync processor_id() on newly-changed nodes,2018,,
30c76b4,Communicate ghosted elements *before* coarsening,2018,,
87db081,Fixup receive_packed_range call,2018,,
d28ac22,Merge pull request #1227 from roystgnr/distributed_mesh_fixes,2018,,
00ec25c,Small changes to splitter to change the way the filenames are output,2018,,
be0ecd4,Change the way Splitter prints out progress,2018,,
cc49a53,Merge pull request #1228 from friedmud/splitter_filename,2018,,
7c41153,Update LOC count for Feb 2017.,2018,,
4d9ca29,Update traffic.,2018,,
2e25cb2,Update citations.,2018,,
8289df6,Use std::size_t  which is equivalent to vector<T>::size_type.,2018,,
1c8b107,Fix 'clever' for-loop increments.,2018,,
f64c717,Use std::size_t in examples.,2018,,
c54e822,Merge pull request #1226 from roystgnr/vtk_dumb_pointer,2018,,
8488c31,Merge pull request #1229 from jwpeterson/size_t,2018,,
8d74337,Add Eigen optimizations for DenseVector::l2_norm()  l1_norm()  linfty_norm().,2018,,
ce8533f,Merge pull request #1230 from jwpeterson/dense_vector_eigen,2018,,
21f4452,Loosening adjoints_ex3 tolerance,2018,,
43e9ef9,add flag to ES::reinit to skip internal refine/coarsen calls,2018,,
c4b3b00,unit test for preserving refinement flags post-reinit,2018,,
dfa102b,More debug-mode tests,2018,,
d620383,Fix BoundaryInfo::operator=,2018,,
9ae43d2,Merge pull request #1232 from roystgnr/adjoint_tolerance_tweak,2018,,
099af27,Merge pull request #1234 from roystgnr/boundary_info_fix,2018,,
a735399,Ignore warnings about misleading indentation,2018,,
78e8c2b,Use ignore/restore_warnings.h with Eigen,2018,,
49eae67,Ignore CppUnit warnings in Trilinos unit test,2018,,
4b96823,Merge pull request #1233 from tradowsk/eq-sys-preserve-refine-flags,2018,,
7400474.0,Merge pull request #1235 from roystgnr/ignore_eigen_warnings,2018,,
39759cb,Merge pull request #1236 from roystgnr/ignore_trilinos_warnings,2018,,
c001fff,Add MeshBase::is_replicated(),2018,,
d27e2a5,Use MeshBase::is_replicated() in CheckpointIO,2018,,
b96b760,Use is_replicated() in MeshRefinement,2018,,
be12536,Fix disable_refine_on_reinit() test with parmesh,2018,,
7feffb3,Merge pull request #1237 from roystgnr/fix_new_test,2018,,
84b1df9,Small optimization in TreeNode,2018,,
1109a2b,Use std::vector::assign.,2018,,
265c189,Merge branch 'tree_node_opt',2018,,
3c8c1f3,Update traffic.,2018,,
4d30d2e,Ignore -Wmisleading-indentation on GCC 6+ only,2018,,
e39052b,Merge pull request #1239 from roystgnr/gcc_6_only,2018,,
bce2ab7,Add FirstOrderUnsteadySolver::prepare_accel,2018,,
97b5f74,Add FirstOrderUnsteadySolver::compute_second_order_eqns,2018,,
d7aab05,First order TimeSolvers now handle second order vars,2018,,
8dee99d,Add Eigen-based optimization for DenseVector<T>::dot().,2018,,
2ddcb00,Use DistributedMesh temporary ids even in serial,2018,,
044cb32,Update citations.,2018,,
4c1c8de,Allow users to control if the matrix and RHS should be zeroed out,2018,,
2005cdf,Merge pull request #1241 from roystgnr/serialized_distributed,2018,,
7a02ada,Add UnsteadySolver::is_<first second>_order_var,2018,,
74e55da,Cache map from second order vars to vel vars,2018,,
c32e55e,Add UnsteadySolver::get_second_order_dot_var API and impls,2018,,
28dc361,Helper functions for checking for SCALAR vars,2018,,
389e7dd,Add tests for first order TimeSolver for second order problems,2018,,
84de531,AbaqusIO: Allow the shorter string 'S3' instead of 'S3R'.,2018,,
ca8a577,AbaqusIO: Support generated elsets and nsets.,2018,,
1f277f6,Merge pull request #1243 from jwpeterson/abaqus_io_generate,2018,,
2b398a6,Merge pull request #1242 from libMesh/andrsd/zero-m-rhs-impl-sys,2018,,
8e2a145,Check for early returns for zero length vectors.,2018,,
dd7c4e5,Remove PetscMatrix::update_preallocation_and_zero().,2018,,
a94f67d,systems_of_equations_ex8 does not actually use update_preallocation_and_zero().,2018,,
6fece55,Officially deprecate unofficially deprecated Elem functions.,2018,,
a1304b2,Officially deprecate unofficially deprecated MeshBase functions.,2018,,
8adffcd,Document the virtual-non-const-plus-non-virtual-const design.,2018,,
403cf08,Officially deprecate old Mesh constructors.,2018,,
32a146d,Don't delete_remote_elements() inappropriately,2018,,
6be3553,Remove deprecated MeshData from transient_ex2.,2018,,
b98c4f0,Fix comment typo in misc_ex2 Makefile.am.,2018,,
8ab09b2,"Added ""dot"" vars are 1st order time evolving",2018,,
38be6e4,Updated TimeSolver test classes with libmesh_override FTW,2018,,
77ea387,Update CLEANFILES list for misc_ex2.,2018,,
7f5f568,Update TimeSolver test class naming,2018,,
1fdc5e7,misc_ex2: Use Exodus file extension recognized by Paraview.,2018,,
2942d3e,Run bootstrap.,2018,,
14327000.0,Use new time_evolving API in TimeSolver tests,2018,,
ae4a475,Add TimeSolver testing class,2018,,
4f679c3,Test Newmark using first order style,2018,,
bcf9f09,Merge pull request #1244 from jwpeterson/dense_vector_eigen,2018,,
0ff7189,Merge pull request #1245 from jwpeterson/update_preallocation_and_zero,2018,,
bb0d1e4,Merge pull request #1247 from jwpeterson/deprecate,2018,,
5fb00de,misc_ex2: Update/fix typos in documentation.,2018,,
07d700e,Merge pull request #1246 from roystgnr/fix_mistaken_distribution,2018,,
3f717ec,Remove MeshData from misc_ex2.,2018,,
384a1df,Move BoundingBox to its own header,2018,,
b112c9b,Re-bootstrap,2018,,
4a72aaf,Remove MeshData from BoundaryInfo interfaces.,2018,,
41d70ae,Remove MeshData from VTKIO interfaces.,2018,,
88fc41f,Remove MeshData from TetgenIO interfaces.,2018,,
e3e349d,Remove MeshData from UNVIO interfaces.,2018,,
19f6fd2,Remove MeshData from meshtool.C,2018,,
d9d5ad2,Remove MeshData from libmesh_documentation.h,2018,,
14fb52d,Remove all files associated with the MeshData class.,2018,,
3914720.0,Update Makefile.am files after removing MeshData files.,2018,,
6e1e9d0,Run bootstrap.,2018,,
14495d6,Remove spurious mesh_data.h inclusion from misc_ex5.,2018,,
c98a94a,Add Elem::loose_bounding_box(),2018,,
6be8e6a,Remove MeshData from Mesh classes.,2018,,
8de3f92,Remove MeshData output from misc_ex2 docs.,2018,,
f871834,Fix typo.,2018,,
a1ecb8c,Remove MeshData from EquationSystems.,2018,,
72c8d8a,Fix warning that only shows up in dbg mode with --enable-complex.,2018,,
7d6c85e,Fix unused variable warning in opt mode.,2018,,
4d6596a,Use BoundingBox in TreeNode,2018,,
a9f3153,enable_out_of_mesh_mode() on non-affine elements,2018,,
a11ed30,Don't bother with linear searches,2018,,
1bcfd5c,Enable out_of_mesh_mode on distributed meshes,2018,,
b802fd4,out_of_mesh_mode for distributed System::point_*(),2018,,
86e0866,Fix MeshTools::BoundingBox backwards compatibility,2018,,
a009c2c,Merge pull request #1248 from jwpeterson/mesh_data,2018,,
6275cd6,Merge pull request #1250 from jwpeterson/rm_mesh_data,2018,,
ce8e207,Fix a few more unsigned int/size_t mismatches in for loops.,2018,,
8f1d562,Avoid calls to virtual DenseVector::size() when possible.,2018,,
fa60866,Switch to signed integer loops in DenseVector.,2018,,
b35efd1,Add clang-specific vectorization pragmas.,2018,,
c41c552,Update traffic.,2018,,
b2a2a42,Merge pull request #1251 from jwpeterson/dv_size,2018,,
4442284.0,Merge pull request #1249 from roystgnr/loose_bounding_box,2018,,
77d898f,Update citations.,2018,,
7df0c59,Clean up citations.,2018,,
78ce08d,Update and tinyurl-ize links.,2018,,
383d013,GmshIO: Allow multiple lower-dimensional elements for BCs.,2018,,
addb90f,Fix 'missing override' warnings for Elem::loose_bounding_box().,2018,,
e8c36aa,Fix unused variable warning after MeshData removal.,2018,,
07002be,BoundaryInfo::regenerate_id_sets(),2018,,
f51178a,Call regenerate_id_sets() when appropriate,2018,,
052e7d0,Update citation counts for plot.,2018,,
61a1128,Update statistics PDFs for SIAM CSE 2017.,2018,,
84d2c36,Move tick marks to Jan of each year  suppress month in label.,2018,,
01f811b,Remove preprints from papers plot.,2018,,
9c978ee,Add 2017 to mailing list traffic plot.,2018,,
a625727,Set up tick locations automatically.,2018,,
7ad28b6,Update x-axis in LOC plot.,2018,,
6723f13,Merge branch 'stats',2018,,
8e44359,Merge pull request #1254 from jwpeterson/gmsh_fix,2018,,
d95730c,Update citations.,2018,,
906a2fd,Regenerate publications webpage.,2018,,
bf25955,Bibtex: Format author names consistently.,2018,,
81ac107,Bibtex: use endash between co-discoverers' names.,2018,,
cd82b51,More permanent links for some dissertations.,2018,,
539535c,Update citations.,2018,,
f78df65,Update traffic.,2018,,
585a762,Update fem_system_ex3 to new TimeSolver API,2018,,
1a7787c,Use *parallel* max_elem_id in assert code,2018,,
0a3c3c7,Update citations.,2018,,
443d504,Merge pull request #1255 from roystgnr/boundary_info_caches,2018,,
8873df1,Add Euler(2)Solver options to fem_system_ex3,2018,,
fc4d865,Fix DistributedMesh build_node_list_from_side_list,2018,,
344de3a,FirstOrderUnsteadySolver::add_dot_var_dirichlet_bcs and use it in init(),2018,,
0a094af,More documentation on new FirstOrderUnsteadySolver capability,2018,,
8b2c19d,Rework design of variable time-order handling,2018,,
95efd5f,Avoid race condition in non-blocking send,2018,,
1ed6e19,Merge pull request #1257 from roystgnr/pmax_elem_id,2018,,
9edd8ba,Fix BC construction for velocity variables,2018,,
14ef5bd,Update statistics for February 2017.,2018,,
6858d69,Bibtex: Use address field for InProceedings.,2018,,
7913dc7,Bibtex: Use consistent title capitalization.,2018,,
5843427.0,Ignore third party placement-new warnings in GCC6,2018,,
0202ed8,Ignore warnings from TBB,2018,,
898387e,Update traffic.,2018,,
0ed9901,Update citations.,2018,,
02b04ff,Update citations.,2018,,
36b55dd,Add SubdomainPartitioner.,2018,,
e611583,Add new files to lists and update Makefile.am.,2018,,
92e500a,Run boostrap.,2018,,
7a72b9e,Set fixed unique_id values in mesh extrusion,2018,,
40d344c,Set remote_elem links during mesh extrusion,2018,,
1f15528,Synchronize next_side_id in build_extrusion(),2018,,
9372792.0,Cleaning up the VTK parts,2018,,
81d93eb,Merge pull request #1258 from roystgnr/node_bcid_fix,2018,,
254afb3,Handle empty semilocal meshes in mesh extrusion,2018,,
44784000000.0,Merge pull request #1265 from roystgnr/distributed_extrusion,2018,,
d7c02d4,Merge pull request #1264 from acbauer/vtk_improvements,2018,,
942f9b3,Consistent naming for NewtonSolver private member,2018,,
740e4d1,Accessor for LinearSolver used by NewtonSolver,2018,,
739ea5a,Merge pull request #1262 from roystgnr/tbb_warnings,2018,,
2148606.0,Use SPARSELU for linear solver for fem_system_ex3/Euler(2)Solver,2018,,
7007ab3,Update citations.,2018,,
1b1bb81,Add unit test of SubdomainPartitioner.,2018,,
2fe687e,Add new file to unit test Makefile.am.,2018,,
b86f1ce,Run bootstrap.,2018,,
3076ba5,Remove recently deprecated code from unit tests.,2018,,
6c6c080,Update citations.,2018,,
86e8dba,ParmetisPartitioner: Slight refactor resize+fill -> assign.,2018,,
e3e2e0c,Merge pull request #1266 from jwpeterson/subdomain_partitioner,2018,,
ca26a44,Bug fix for Tri6::loose_bounding_box ()  for-loop indices should start at 1.,2018,,
0a19455,Merge pull request #1272 from dknez/tri6_bb_fix,2018,,
d963d52,Merge pull request #1270 from jwpeterson/parmetis_refactor,2018,,
2e2bbe2,Add new SubdomainPartitioner.,2018,,
e76ba9a,Rename and document BoundingBox::intersect(),2018,,
668d345,Document BoundingBox functions,2018,,
00a97e8,BoundingBox intersections and unions,2018,,
13a1d58,Fix Cell::loose_bounding_box(),2018,,
fb489e7,Clean up BoundingBox API,2018,,
2e795d7,More convenient variable names for ParaView viewing,2018,,
990c73d,Restructure how fem_system_ex3 gets run,2018,,
b919962,Update Makefile.am files.,2018,,
70a995a,Run boostrap.,2018,,
56f5845,Elem::loose_bounding_box() tests,2018,,
7d2e97b,Build and run Elem tests,2018,,
b846ebe,Add unit_tests-* to noinst_PROGRAMS,2018,,
9ea6fae,Re-bootstrap,2018,,
4c56255,Quad8::loose_bounding_box bugfix,2018,,
89ef9e2,Disallow renumbering in unit test,2018,,
85f09bb,Distributed-compatible BoundaryInfo unit tests,2018,,
d2fcc55,Better document BoundaryInfo::n_boundary_ids(),2018,,
7f1fefb,Merge pull request #1274 from roystgnr/bounding_box_fixes,2018,,
c2362a3,Merge pull request #1275 from roystgnr/distributed_mesh_tests,2018,,
431b151,Restore (deprecated) old intersect() API name,2018,,
07142a1,Fix C++11 code merged in by #1276.,2018,,
d2096b2,Added pyramid_face_map info to exodusII_io_helper.C.,2018,,
d7a08b2,Add predicated iterators for iterating over sets of subdomains.,2018,,
6e211be,Merge pull request #1276 from pbauman/second-orders-vars-first-order-timesolver-rebase,2018,,
5c2884b,Merge pull request #1277 from dknez/ExodusII_pyramid_sidesets,2018,,
c8923a6,Make extra_ghost_elements save child elems,2018,,
f53a245,Fix infinite recursion warning in BoundingBox.,2018,,
f65b73f,Fix infinite recursion warning in BoundingBox.,2018,,
9930194.0,Update traffic.,2018,,
dee3c44,Skip neighbors and neighbor offspring which are not in the range.,2018,,
152bd2a,Only allocate some Metis data structures on processor 0.,2018,,
e1e2465,libmesh_assert_valid_dof_ids one System at a time,2018,,
1259e7b,Only assert_valid_dof_ids that we already set,2018,,
03cd28e,Replace vectormap::find() with vectormap::count() calls.,2018,,
700ea3f,All vectormap algorithms can be implemented with std::lower_bound().,2018,,
6c108b0,Add unit tests of vectormap::find() and count().,2018,,
b39b5ad,Fix more C++11 scoped enumeration syntax in unit tests.,2018,,
bdbc825,Update citations.,2018,,
1f18edc,Merge pull request #1278 from jwpeterson/partitioning,2018,,
6913ec4,Merge pull request #1282 from jwpeterson/fix_vectormap,2018,,
8d77a19,Update citations.,2018,,
8506d21,Merge pull request #1279 from roystgnr/assert_one_system,2018,,
481334a,Merge pull request #1280 from roystgnr/extra_ghost_children,2018,,
06319fe,Fix 64-bit indices regression.,2018,,
95e714f,Merge pull request #1283 from jwpeterson/fix_64_bit,2018,,
fbe8f63,Update citations.,2018,,
30405be,Regenerate publications webpage.,2018,,
283fa11,distcheck fix,2018,,
662db9e,Run contrib/bin/reindent.sh in src.,2018,,
c803980,Run contrib/bin/reindent.sh in include.,2018,,
becfd49,Add missing semi-colons after class definition.,2018,,
14f3473,Run contrib/bin/reindent.sh on examples.,2018,,
d38e313,Run contrib/bin/reindent.sh on tests.,2018,,
d7e7942,Merge pull request #1284 from jwpeterson/reindent,2018,,
554299d,Update citations.,2018,,
c009784,Bibtex: Fix formatting  use tinyurls.,2018,,
4bc1418,Use uniform spacing in if-statements.,2018,,
d9e0f25,Use uniform spacing in for-loops.,2018,,
07d1ee1,Use uniform spacing in while-loops.,2018,,
dcffbdb,contrib/bin/detab.sh can now be run on multiple files.,2018,,
f5516e5,Update automake version number to 1.2.0-rc1.,2018,,
1297351.0,Run bootstrap.,2018,,
8f90490,Update NEWS file for 1.2.0 release.,2018,,
548a2ad,Merge pull request #1285 from jwpeterson/if_for_while,2018,,
9dd3d3c,Revert new METIS neighbor code until we can fix it,2018,,
a5c565b,Add support for Intel 2017 compilers.,2018,,
8161753.0,Fix ExodusII_IO::write_timestep() in single precision case.,2018,,
35f1554,Initial attempt to fix Metis bug introduced in 1f18edc.,2018,,
b07aa68,Fix ExodusII_IO::copy_* on distributed meshes,2018,,
35e31ee,PetscDiffSolver: fix solution vector locking issue with SNES solve.,2018,,
16529a7,update assert to check only active elements,2018,,
1566d39,distcheck fix,2018,,
1b86eed,Disallow remote element removal during Mesh copy,2018,,
b43536a,Fix -Winconsistent-missing-override warning.,2018,,
82ac9dc,Avoid deprecated use of public Mesh::boundary_info member.,2018,,
4ca0bba,Add incrementing copy constructor to ReferenceCounter class.,2018,,
fff84c0,Include CITATION file with distributed tarballs.,2018,,
a8a3e47,Update automake version number to 1.2.0-rc2.,2018,,
e074050,Run bootstrap.,2018,,
5a2884d,Run bootstrap.,2018,,
309d290,Merge branch 'stitch_mesh' of https://github.com/jwpeterson/libmesh,2018,,
4532ba8,Merge branch 'stitch_mesh' of https://github.com/jwpeterson/libmesh,2018,,
49879b2,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
5800f4d,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
1fc8f2f,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
bb96e8a,Added miscellaneous_ex9: Example that demonstrates a discontinuity on an internal mesh interface  which requires the sparsity pattern to be augmented.,2018,,
c6efcee,changes from running bootstrap for pthread api,2018,,
8612184.0,actual code changes and additions for pthread api,2018,,
ca20a3f,Small bug fixes for pthreads,2018,,
7400547.0,Make objects in FEMContext private  forcing users to the use API that was finalized in #108.,2018,,
a813694,adding ability to get unique id for pthreads,2018,,
56aaf2b,"Revert ""Update NEWS for FEMContext API.""",2018,,
be7f017,add in spin mutex specialization for osx,2018,,
5d3ee6a,implement spinlocks for everyone else,2018,,
c20f820,small fix for threading on linux,2018,,
fe6c3c9,make pthread_unique_id thread safe,2018,,
ca2b105,bump version in master to 0.9.3-pre,2018,,
70d4be3,Merge pull request #106 from dknez/miscellaneous_ex9,2018,,
d15cd98,incorporate misc_ex9 to build environment,2018,,
fb5e176,Merge pull request #110 from pbauman/no_really_privatize_fem_context,2018,,
96115b6,Note update on FEMContext public members going private.,2018,,
8050c9a,Bugfix for adjoints_ex4 adaptive refinement,2018,,
8e3a4fd,Fix and reenable AdjointRefinementEE splitting,2018,,
edc3346,Cut-n-paste typo fix in adjoints_ex4,2018,,
c7584a8,Dirichlet bugfix on refined meshes,2018,,
2bdd4cc,AdjointRefinementEE bugfix,2018,,
3c4f3cf,combine thread defines,2018,,
29ba079,Adding Toader 2013 preprint.,2018,,
bbe55a1,Disable misc_ex9 when Exodus is disabled,2018,,
ea6ba0b,The new example also requires 3D,2018,,
fb3b2f1,misc_ex9 fixes for dof_id_type != unsigned int,2018,,
2069713.0,Set subdomain id on sides built by Elem::build_side().,2018,,
a7400e8,more robust m4 cruft  make sure enablepthreads gets turned off when AX_PTHREAD fails,2018,,
37e1930,generated files for last change,2018,,
8ad4d56,metis relies on TLS  so invoke it.  required for --disable-tbb,2018,,
52c57b0,Merge pull request #1 from benkirk/pthread,2018,,
e5d77c4,Merge pull request #109 from friedmud/pthread,2018,,
6e2baf9,misc_ex9 currently depends on PETSc,2018,,
c422e42,misc_ex9 depends on SerialMesh,2018,,
ab43ae3,APIs for attaching adjoint DirichletBoundary,2018,,
425f872,Merge pull request #117 from benkirk/eigen_refresh,2018,,
dfea0ef,adding Eigen 3.2.0 source,2018,,
fe0ae6f,point to new eigen,2018,,
edcecd6,removing Eigen 3.1.3 branch,2018,,
bc18a7f,fix from bootstrap,2018,,
995a349,Added DofMap::enforce_adjoint_constraints_exactly,2018,,
64715ad,Re-refactoring DofMap::_dof_constraints,2018,,
c50c947,Merge pull request #119 from andrsd/typos,2018,,
e60e903,Fixing typos,2018,,
4c2f678,Making residual/jacobian zero-outing configurable,2018,,
f800d57,rbOOmit change: Added subdomain dependency to RBParametrizedFunction  and propagated that change into the EIM code.,2018,,
edfcab5,Tidy up the PetscNonlinearSolver class,2018,,
ff23a71,Merge pull request #120 from andrsd/zero-out-res-jac-in-petsc-nonlin-solver,2018,,
d1c98cf,Re-applied weird regression of NEWS in 72dcf7d,2018,,
f06fa0a,Adding Dickson 2013 report.,2018,,
91e664c,rbOOmit change: Made argument const for consistency.,2018,,
688381a,Finalizing Corsini 2013.,2018,,
f82935c,Updating publications web page for Aug 2013.,2018,,
ee336c6,Updating statistics for July 2013.,2018,,
b929a0c,Adding URLs.,2018,,
aa1e8b7,Bugfix in adjoint Dirichlet boundary resize,2018,,
f52ec67,More  more robust Dirichlet boundary accessors,2018,,
48daf62,Starting to use adjoint BCs in sensitivity calcs,2018,,
0079cc6,Adding J. Huber dissertation.,2018,,
3948082.0,Adding Rutledge  2013.,2018,,
43db8e7,Updated threads.h to trigger thread safe useage of fparser,2018,,
9713b7d,Merge pull request #122 from aeslaughter/fparser_threading,2018,,
789ecf5,Merge pull request #123 from benkirk/fparser_thread_fix,2018,,
22c4e01,Adding simple support for copying elemental solutions from exodus files,2018,,
3adecae,move definition of LIBMESH_USING_THREADS,2018,,
d938201,move FP_USE_THREAD_SAFE_EVAL definition,2018,,
ec6d0fa,Adding a check if exodus file was opened before calling copy_nodal_solution(),2018,,
b120419,Merge pull request #124 from andrsd/elem-vars,2018,,
08b6ecd,Use multiple lines (with line continuation characters) for macros in libmesh_common.h,2018,,
0a6c86d,Merge pull request #127 from dknez/stitch_surfaces,2018,,
f5454c4,Merge pull request #126 from jwpeterson/multiline_macros,2018,,
fcea919,Call MPI_Abort() from the terminate_handler() to take care of implementations which do not unwind the stack (and therefore never make it to the LibMeshInit destructor).,2018,,
eeb5801,Bugfixes for rhs evaluations,2018,,
e449119,"Checking if the file is ""created"" is overzealous.  It can be open without being created...  To be safer we should probably add a new flag  called _is_open  that gets set when you call ExodusII_IO_Helper::open()...",2018,,
02e7ed5,Added SerialMesh::stitch_surfaces to stitch adjacent surfaces on the same mesh.,2018,,
0b652ac,Fixed errant whitespace,2018,,
76404c3,Disable constraints when configured to,2018,,
9fb3238,Added N^2 node search option back into SerialMesh::stitch_meshes. This option is more robust in the case that we have tolerance issues that lead to less accurate alignment of the nodes that are to be stitched.,2018,,
c753b7a,Added an extra error checking flag for the case where we expect the number of nodes on the stitched surface IDs to match,2018,,
d584943,temporarily remove FP_USE_THREAD_SAFE_EVAL until adaptivity_ex5 works again.,2018,,
74322c8,Merge pull request #128 from dknez/master,2018,,
a12a762,Adding Botti 2013 preprint.,2018,,
01145f8,Define FP_USE_THREAD_SAFE_EVAL consistently,2018,,
9aa34d2,Re-enable thread-safe fparser,2018,,
2913d6f,Make copy_nodal/elemental_solution() fail with the same error whether you are using opt or debug mode.,2018,,
5fe8620,Adding Krol preprint.  The DOI does not seem to be active yet.,2018,,
cc87390,Adding Hales  2013 preprint.,2018,,
50e77c4,Fixing an error in homemade remove_if algorithms.,2018,,
53d13e8,Updated Krol 2013.,2018,,
7bf26bb,Reformatting only (spacing  comments) patch for this very old code.,2018,,
b98003c,Removing getters for public data members in ExodusII_IO_Helper.,2018,,
83b15cc,Use C++ data structures in ExodusII_IO_Helper::NamesData.,2018,,
4a19e16,Use the NamesData object in the following ExodusII_IO_Helper routines: * get_nodal_var_names() * get_elemental_var_names() * initialize_element_variables() * initialize_nodal_variables() * initialize_global_variables(),2018,,
66cb985,Merge branch 'exII_refactor',2018,,
b5be833,Adding shape  first  and second derivative functions for 3D Nedelec One hex,2018,,
90448a1,Now supporting first order NEDELEC_ONE for HEX20 and HEX27,2018,,
d484d49,Adding Gimenez  2013.,2018,,
764e99c,Adding _opened flag to ExodusII helper.,2018,,
ddbcc29,Use C++ style casts.,2018,,
692c055,Make spacing consistent in for loops.,2018,,
824bc08,Removing apparently redundant calls to Exodus_IO_Helper::get_time_steps().,2018,,
87f1713,Removing old comments.,2018,,
0176abe,Output now can do 2D and 3D  not just 2D.,2018,,
4b0d789,Generalize NamesData object to take a string length.,2018,,
f4edb2b,Have ExodusII_IO_Helper::write_information_records() use the NamesData object.,2018,,
d944abb,Reformatting in: * ExodusII_IO::write_element_data() * ExodusII_IO_Helper::write_element_values(),2018,,
d284186,Adding MeshSerializer object to ExodusII_IO::write_element_data().,2018,,
6cb627a,Bug fix for small dof_id_type size,2018,,
ddb0383,One more set of size type fixes,2018,,
db97ac9,Use a macro to check error codes in the Exodus reader.,2018,,
bf69bef,Remove bad shared lock,2018,,
db31ad2,Merge branch 'exII_refactor',2018,,
984896f,Adding Eftang preprint.,2018,,
63120d0,Fix bibtex warnings.,2018,,
7dd223e,Updated Rong  2013 preprint with DOI.,2018,,
04998fd,Clean up.,2018,,
3b29f5f,Updated Vallaghe preprint.,2018,,
29e326f,Consolidate ifdef sections.,2018,,
9bd8573,Setting up a new example to exercise 3D Nedelec elements.,2018,,
5bb0d65,Adding documentation.,2018,,
2f9372d,For consistency  make functions which read data from the Exodus file follow 2 conventions: .) Be called read_xyz() .) Return void,2018,,
5d61a37,Misc simplifications  improvements:,2018,,
486b4bc,Merge branch 'exII_refactor',2018,,
343c832,Adding vector_fe_ex3 and vector_fe_ex4 back into 'make check'.,2018,,
772f492,Using direct solver for the vector FE examples.,2018,,
561156e,Merge branch 'paul_nedelec',2018,,
1576a27,Updating references: * Montagnier 2011 preprint * Dec thesis * Gunther 2011 conference paper * Steih  2012 * Bauman  2011,2018,,
c5ed07c,Merge pull request #129 from libMesh/system_io_sizet,2018,,
d343ac4,Updated Montagnier 2011.,2018,,
82165a4,PETSc LU doesn't work in parallel,2018,,
8fc215a,remove out.e to fix distcheck,2018,,
8e44dbe,Merge pull request #131 from libMesh/terminate_handler,2018,,
f00b9c8,NumericVector::conjugate() patch from Jens Eftang,2018,,
ba5149f,Remove overzealous copy/pasted assert,2018,,
c5f0e3b,"Adding a configurable ""unique_id"" to DofObject.  Currently works for SerialMesh and ParallelMesh",2018,,
294888e,need #include <sstream> for new libmesh_write_traceout() implementation - Oracle caught this,2018,,
8fa9871,Updating Gunther 2013.,2018,,
5ac3c52,Enhancing documentation.,2018,,
5ca57e7,libmesh_write_traceout macro replaced by libMesh::write_traceout() function.,2018,,
0c2dcde,Removing <fstream> from libmesh_common.h.,2018,,
800727c,Adding libmesh_common.C for a place to hold the macro functions.,2018,,
e85b7b6,Automake junk associated with adding a new file.,2018,,
2dd8228,The libmesh_stop macro is now converted to a function.,2018,,
c0cf0fd,ability to clear extra ghost elems and switch it over to using add,2018,,
9d6481f,Factoring out common parts of macros.,2018,,
1a3a96a,Merge pull request #132 from libMesh/conjugate,2018,,
fb8069b,Removing csignal dependence from libmesh_common.h,2018,,
fe2752d,Adding Swiler  2013b.,2018,,
85b23db,Fixing strange filename due to unexpected behavior of std::stringstream.,2018,,
29035d3,Merge pull request #134 from libMesh/macro_functions,2018,,
16a7b88,implement  EpetraVector<T>::conjugate()  which is a no-op.,2018,,
dbb4754,rbOOmit change: There was a bug for complex-values in RBConstruction::enrich_RB_space which meant that basis functions were not orthogonal. Here we commit the simple bug fix and also add some debugging info to reduced_basis_ex1 and reduced_basis_ex7 that prints out the inner products between basis functions to make sure that they are accurately orthogonalized.,2018,,
509868c,rbOOmit change: Another small fix regarding complex-values. This one should not affect anything since the RB_inner_product_matrix is not used in complex mode at the moment.,2018,,
ae8a7bc,rbOOmit change: if --enable-complex  write out truth solution using GMV instead of exodus since exodus doesn't work with --enable-complex at the moment.,2018,,
19f7866,"Fixes for ""make test_headers""",2018,,
cd4ae6d,Adding new configure flag --enable-all-static.,2018,,
5.614e+87,Automake junk updated by bootstrap.,2018,,
1b40006,rbOOmit change: Removed incorrect libmesh_conj in calculation of truth_outputs in RBConstruction::truth_solve.,2018,,
f806105,Updating statistics for Aug 2013.,2018,,
bd37bb5,additional includes required for recent macro refactoring.,2018,,
02fc3ba,Fix typo in comment,2018,,
76c5b09,More enum types supported by string_to_enum,2018,,
78bb8a8,Bugfix in new string_to_enum macros,2018,,
2ffb39d,Additional accessors,2018,,
48f2c27,Merge pull request #136 from libMesh/enums_to_strings,2018,,
4cc22b4,clarify comment,2018,,
2508196.0,rbOOmit change: Added RBConstruction::set_rb_construction_parameters so that we can set parameters without using an input text file.,2018,,
107e851,rbOOmit change: Cleaned up a few things from the previous commit.,2018,,
6a578cd,Mem leak fix,2018,,
948444.0,Using std::endl.,2018,,
3ef288f,Merge pull request #135 from libMesh/all_static,2018,,
ce66140,Fixing warning in Laspack:,2018,,
2cd80b0,Include <time.h> for strptime() to avoid warning.,2018,,
99edb48,fix for MPI-2.  Openmpi-1.7.2 has started complaining about deprecated MPI-1 functions,2018,,
c9611e9,DofMap::heterogeneously_constrain_adjoint_rhs(),2018,,
7ec45e1,Assorted bugfixes.  We compile again.,2018,,
76f30d7,Apply heterogeneous adjoint constraints,2018,,
2.501e+40,avoid MPI-1 deprecated features when MPI_VERSION>=2,2018,,
e431947,test broadcasting std::vector<VectorValue<>> objects,2018,,
e3efbc0,refactoring StandardType<VectorValue<T> > to be mpi-2 compliant,2018,,
df7783f,Have a working MPI-2 VectorValue<> implementation  need to check other types and MPI implementations.,2018,,
2775942.0,cleaner MPI-2 implementation,2018,,
be4ba3e,extend MPI-2 implementation,2018,,
abcc048,extend test coverage,2018,,
4e75563,Assorted bugfixes,2018,,
783bfec,Merge branch 'master' of ssh://github.com/libMesh/libmesh into adjoint_dirichlet,2018,,
e116738,Bugfixes for p refinement/coarsening,2018,,
ecb9219,Bugfixes for p refinement/coarsening,2018,,
32370d9,Merge pull request #139 from libMesh/no_deprecated_mpi,2018,,
657b598,Properly clear old constraints when recalculating,2018,,
ecbe1f3,Fix FEMFunction projection bug reported by Manav Bhatia.,2018,,
bf41321,Patch from Manav Bhatia:,2018,,
c672f14,Merge pull request #142 from pbauman/fem_function_proj_fix,2018,,
1aa60d7,adding virgin 4.3.0 tree  minus cmake bits,2018,,
f91acd5,rebaseline automake files,2018,,
4984ce6,delete training whitespace,2018,,
71a9fea,fix for older HDF5-1.8.x installations,2018,,
019c074,silent rules  disable tests requiring network access by default,2018,,
4bdaff8,remove more cmake cruft,2018,,
6f40698,fix for build_testsets false & in-tree builds,2018,,
a768366,increase parameter sizes for exodus,2018,,
b86b2e1,relink v4,2018,,
b8ffe72,remove 4.2.1.1,2018,,
6f0f209,update .gitignore for make check,2018,,
8d7bcbc,remove cmake cruft from EXTRA_DIST,2018,,
1170a1f,Merge pull request #144 from benkirk/netcdf_refresh,2018,,
62cdc88,Bugfix for adjoint_already_solved init,2018,,
37ecca6,We can initialize based on a non-closed vector,2018,,
159ca38,Compute adjoint dirichlet constraints,2018,,
a6faf3e,Remove overzealous asserts  print all constraints,2018,,
782ae5f,Configurable ID fix,2018,,
6bb8f68,Build and install meshdiff,2018,,
678261.0,Re-bootstrapped with meshdiff in Makefile.am,2018,,
42a2e51,API usage fix in meshdiff,2018,,
77f143e,Merge pull request #146 from robert-we/vtksmartpointer-fix,2018,,
2eaefe4,Merge pull request #145 from robert-we/vtk-cellid,2018,,
70a5a42,Adding Corsini Periodica Polytechnica paper.,2018,,
68fd164,"Revert ""Use vtkSmartPointer correctly""",2018,,
125b7e9,Bugfix parallel heterogenous adjoint constraints,2018,,
257952c,Return correct solve result,2018,,
2843439.0,Moved linear solution monitor up from NewtonSolver to DiffSolver,2018,,
09504cf,Implement LinearSolutionMonitor support for petsc_diff_solver,2018,,
2147f3a,Add residual and iteration count to LinearSolutionMonitor  BACKWARDS INCOMPATIBLE CHANGE!,2018,,
17834ba,Use vtkSmartPointer correctly,2018,,
52d0d7d,Add element id from libMesh to the vtk files,2018,,
53eda87,Added version guards for solve results in PetscDiffSolver according to Roys suggestions,2018,,
ed6d368,Merge pull request #149 from robert-we/vtksmartpointer-fix,2018,,
5.8e+256,Add capability to append data to Exodus files.,2018,,
2d67ba9,Complete patch of correction of vtkSmartPointer usage,2018,,
ffca472,suppress unused typedef (gcc-4.8 warning),2018,,
e8995c1,defer sqrt calculation,2018,,
1c270a8,allow a Communicator object to toggle between default and synchronous send operations.,2018,,
a776215,remove stray libmesh_here(),2018,,
24dab99,extend test coverage to both DEFAULT and SYNCHRONOUS communication modes,2018,,
6feaa1d,Improve error message when trying to write mixed element meshes with Exodus.,2018,,
6fc8742,Adding current_filename and sanity checks to ExodusII_IO.,2018,,
b87b70a,Adding Neveln 2013.,2018,,
e254684,Merge pull request #133 from permcody/SerialUniqueID,2018,,
69e162a,Factor out common code from the write_nodal_data and write_nodal_data_discontinuous functions.,2018,,
298c81e,Updating statistics for September 2013.,2018,,
78ac2c7,Updating publications website for September 2013.,2018,,
6b90aca,Adding capability to output an Exodus file in transient_ex1.,2018,,
9b7b6a7,Fix up transient_ex2 IO: * Write to VTK by default  fall back on GMV if VTK is not available. * Use stringstream instead of sprintf.,2018,,
a2bbda4,Merge pull request #151 from libMesh/exII_append,2018,,
7656b86,Adding Vavourakis  2013b.,2018,,
4.253e+96,Check for existing info records before writing.,2018,,
3634110.0,Properly link config files for VPATH builds,2018,,
4d8e6c8,Throw a file error when GetPot can't open a file,2018,,
66d6333,Merge pull request #148 from robert-we/petsc-solve-result,2018,,
92d9a64,Merge pull request #147 from robert-we/linear-solution-monitor,2018,,
f7a552f,Adding _timestep_offset to hopefully avoid overwriting data when appending.,2018,,
4132345.0,Bugfix for PETSc 3.2,2018,,
1c56598,Indenting according to usual libmesh conventions.,2018,,
0d1e92b,Handle the SNES_CONVERGED_ITERATING case to avoid compiler warnings.,2018,,
9bef263,Adding additional logic so that ghosted element unique ids are exchanged when using Parallel Mesh,2018,,
032a836,Major FEMSystem  adjoint dirichlet refactoring,2018,,
d3bdb22,Merge pull request #150 from benkirk/mpi_sync_send,2018,,
e4f57f5,Adding Yeniaras  2013 preprint.,2018,,
615c05f,Reading/Writing unique_id from xdr files,2018,,
eb4d88f,Fixes for --enable-complex,2018,,
0ebe32f,Complete fix for --enable-complex rhs comparisons,2018,,
a503185,fix for barebones config,2018,,
6c6826b,Make LIBMESH_USE_64BIT_XDR work!,2018,,
c380652,Fix for VPATH make check on misc ex2,2018,,
6337b26,Add heterogenously_constrain_element_vector,2018,,
1f344a8,Heterogenous FEMSystem qoi_derivative constraints,2018,,
5469776.0,Merge pull request #155 from permcody/FP,2018,,
a902cb7,Making enableFPE() public so that users can toggle it during the run,2018,,
c6b527d,Merge pull request #152 from libMesh/getpot_file_errors,2018,,
ba2d7f7,Updated Dirichlet constraints to handle nodes,2018,,
0a441b2,Allow heterogenous constraints w/ non-primal rhs,2018,,
046e30a,Apply adjoint constraints when appropriate,2018,,
874c52c,Bugfixes for heterogenous constraints refactor,2018,,
a6e8ee4,One more fix for the refactor,2018,,
12c93df,Fixed simple compilation error,2018,,
eb6c959,build_constraint_matrix_and_vector refactor bugfix,2018,,
97d1437,Move FEMap constructor to C file  use default constructors for std::vectors.,2018,,
046ce61,Fix up minor formatting issues.,2018,,
f8557b8,Merge pull request #154 from permcody/UniqueIDGhosted,2018,,
911422d,Heterogeneous adjoint BCs support in ARefEE,2018,,
692fd16,Merge pull request #156 from permcody/XDR_64,2018,,
fe54c5f,Bugfix for last commit,2018,,
e44c88a,Added edge BC support to BoundaryInfo  and impose Dirichlet boundary constraints on edges.,2018,,
eca64ea,Updated systems_of_equations_ex6 to impose a node and edge Dirichlet boundary condition.,2018,,
b10c092,Allow user to install their own PETSc monitors,2018,,
b94b10a,Merge pull request #158 from andrsd/optional-monitor,2018,,
0a98aa5,Heterogeneous adjoint sensitivities work now,2018,,
a5ac418,Fix overzealous assertion in Nedelec elements,2018,,
56cfb9d,Merge pull request #157 from permcody/XDR_0_9_2,2018,,
5e816e6,A few more tests,2018,,
f9a3ade,More DirichletBoundary constructors,2018,,
fd5e2c1,This patch fixes the assertions seen with parallel mesh in parallel when unique_ids are enabled,2018,,
698565c,Adding Zhu preprint.,2018,,
d1c3f27,Read the number of global variables present in the Exodus file when we read the header  and don't try to initialize the global variables if there are already some global variables present.,2018,,
47204ba,Merge pull request #160 from permcody/parmesh_unique_id_fixes,2018,,
5ade8e0,Properly link input files for VPATH builds,2018,,
79d7675,more VPATH fixes,2018,,
ca4b361,#include <sstream> to keep Oracle 12.3 happy,2018,,
94fb476,"Revert ""Adding _timestep_offset to hopefully avoid overwriting data when appending.""",2018,,
4de72d3,"Handling ""blank"" entity names in XDA format",2018,,
0a2eb71,Adding ExodusII_IO::get_num_time_steps() interface.,2018,,
dbaf393,Removing debugging statement...,2018,,
06d9ecc,Adding Kirk  2013c.,2018,,
7ce5e42,Removing dead links.,2018,,
b2fdcc1,Removing outdated preprints.,2018,,
dcefdb7,Avoid reinitializing element variables when appending to Exodus files.,2018,,
10d214f,Bug fix - Reading unique IDs from XDA/XDR should be determined by what's encoded in the file  not how libmesh is configured,2018,,
af2aa00,Fixing ifdefs.,2018,,
cd1ff89,Merge pull request #161 from permcody/enablewarnings,2018,,
1055eb2,Also read the block information when appending.,2018,,
08998c4,Add configure option to enable/disable library warnings.,2018,,
ff2c4ae,Result of running bootstrap after new --enable-warnings option added,2018,,
89df37e,minimum expected update required for intel-14.,2018,,
f3ba2e5,Updating XDR interface to be compatible with OSX 10.9.,2018,,
adb3870,Include config.h so that HAVE_STRLCAT has a chance to be defined.,2018,,
f6e52d0,Merge pull request #159 from libMesh/more_dirichlet_constructors,2018,,
7acb6fc,Fixing a nasty long-standing indexing bug in FE::shape_second_deriv() for LAGRANGE and L2_LAGRANGE elements!,2018,,
d5821fd,Adding Teague  2014.,2018,,
106cd47,Fixing bug that prevented d2phidxidzeta_map from ever being computed.,2018,,
dc05eea,Fixing up warnings found in bibtex files.,2018,,
f5d9dc8,Compute second derivatives of tri-linear shape functions on HEX8s.,2018,,
c023802,Adding comm arguments to PetscVector constructors.,2018,,
fac138b,Remove unnecessary tellg()/seekg() in GetPot::_skip_whitespace() Seemed to fix weird behavior on Apple clang compiler...,2018,,
5f148ed,Fixing infinite while-loop silliness in GetPot.,2018,,
424a8e7,Declare for loop variables locally.,2018,,
1cb2d60,"Replacing ""! x"" with ""!x""",2018,,
748d635,Fix spacing around for/if/while statements.,2018,,
bef92dc,Changing,2018,,
147519a,Start for/if scope brackets on new line.,2018,,
a508947,At least three spaces between function definitions.,2018,,
f9af84c,Use consistent indentation throughout file.,2018,,
3824c42,No comments between function declaration and opening brace.,2018,,
edbcaef,Use doxygen style documentation.,2018,,
7b1814b,Removing arbitrary spacing from class declarations.,2018,,
b01bd36,Merge branch 'getpot_reformat',2018,,
4e8861b,Updating references: * Botti  2013. * Adding WSSSPE paper. * Adding Tonks  2013b. * Adding Medvedev  2012. * Adding Carlson  2013. * Adding Teague  2013 thesis. * Adding Tonks  2013 Tech report. * Adding Tonks Acta Materialia paper. * Adding Butterfield senior thesis.,2018,,
082f160,Make separate PDFs for each section and combine them together later.,2018,,
dcb8f56,Updating citation statistics for October 2013.,2018,,
c374294,Updating publications website.,2018,,
f542c74,adding vectormap class,2018,,
bb9f04d,adding vectormap to build system,2018,,
a3f63db,insert member,2018,,
ee7dfd8,initial vectormap<> implementation,2018,,
d946761,add a .count() member  update documentation,2018,,
692d24b,refactor metis to use vectormap,2018,,
43526b7,invoke METIS only on processor 0  then broadcast the partitioning,2018,,
2f6bbfd,change the vectormap<> to be from id to id rather than ptr to id  in order to save space on 64-bit machines with 32-bit indices,2018,,
6109dcd,adding vectormap unit tests,2018,,
1850747.0,test iterating,2018,,
f8dd6fd,standalone header,2018,,
8d997c2,Fixing bug in parallel mesh meta-data broadcast,2018,,
80c560f,Updating statistics for October 2013.,2018,,
964946e,refactoring Parmetis to use vectormap,2018,,
22ffe51,construct the CSR graph representation in-place,2018,,
79c574f,put the CSR graph in its own header file  so ParMETIS can eventually contain one.,2018,,
eb1a1b7,no longer need #include <map>,2018,,
8c870f4,Read/Write Nodesets in XDA format,2018,,
4abedfe,Merge pull request #163 from libMesh/vectormap,2018,,
df7b975,Adding Tonks  2013e.,2018,,
2e47894,Fix 0.7.0 bug where we didn't write out the header indicating how many sidesets to read,2018,,
3ff0e1e,Updating ElemBCData to make it work with both Node types and Elem types,2018,,
edafcb9,Merge pull request #164 from permcody/XDR_nodesets,2018,,
abb28c8,If element variables already exist in the Exodus file when calling initialize_element_variables()  check to ensure they match the requested variable names exactly.,2018,,
dfe3efe,Adding ExodusII_IO_Helper::read_global_var_names().,2018,,
6615d25,Ensure that the names of the global variables requested for initialization match the names of the global variables already in the file.,2018,,
5ae2206,Merge branch 'exII_check_vars',2018,,
f3239c4,Adding universal read_var_names() interface.,2018,,
6202f45,Removing read_elemental_var_names()  read_nodal_var_names()  read_global_var_names().,2018,,
dca0154,Renaming num_globals -> num_global_vars.,2018,,
921a918,Make the initialize_xyz_variables() interfaces the same.,2018,,
a11e89d,consistently define LIBMESH_DIM,2018,,
3f8b74d,Adding universal write_var_names() interface.,2018,,
46ed4fc,Replacing explicit calls to ex_put_var_names() with unified interface.,2018,,
111112b,Also wrap the call to ex_put_var_param() in write_var_names().,2018,,
6d1c01d,Return if no global variables to write.,2018,,
31f0980,Return if no nodal variables to write.,2018,,
cbdd993,Adding _nodal_vars_initialized flag.,2018,,
f8c0c07,Adding ExodusII_IO_Helper::check_existing_vars().,2018,,
4c5c47c,Disable xdr when we don't support xdr,2018,,
f0af43e,Using check_existing_vars() function.,2018,,
eaa64ea,All the new helper functions should be private.,2018,,
3ac8e8b,Merge branch 'exodusII_refactor',2018,,
19632bd,Merge pull request #168 from permcody/master,2018,,
e669b64,Make Exodus reader respect the numbering in elem_num_map.,2018,,
8321b31,Another attempt at fixing unique ids in parallel mesh,2018,,
cc962bf,Merge write_elements() fixes into write_elements_discontinuous() but note: * I don't have code that tests write_elements_discontinuous() * I don't know how write_elements_discontinuous() is supposed to differ   from write_elements() * It doesn't look like it's writing out the elem_num_map correctly:   it gets overwritten for each block.,2018,,
2a122c2,Merge branch 'exodusII_elem_map',2018,,
c4a7cd1,Make Exodus reader respect the numbering in node_num_map.,2018,,
ac04033,Minor code cleanup and reformatting.,2018,,
501e374,Merge branch 'exodusII_node_map',2018,,
2bb4e23,initial addition of CheckpointIO capability,2018,,
c57cc83,"Intel 13 warns about ""invalid narrowing conversion"" when a constant like 3./8. is stored in a float  but only in code that uses ""curly-bracket initialization"".  So we typically only see these warnings in libmesh when creating C-sytle arrays.",2018,,
eef3af5,Explicitly instantiate single-Point version of FE::inverse_map() to try and satisfy Intel 14 compilers.,2018,,
14355c4,Adding Rong  2013.,2018,,
68c6ea2,Nagler 2013 preprint is back with DOI.,2018,,
ba9f7c4,Merge pull request #171 from friedmud/checkpoint,2018,,
63dfbdb,Fixing error in netcdf that apparently only affects OSX 10.6.8.,2018,,
c2fc949,UniqueID fixes,2018,,
5c40284,Better fix for Snow Leopard only bug,2018,,
5b6de39,Trying one more possible fix in daputil.c that may work for Snow Leopard.,2018,,
7a54f01,Patch from Jed Brown fixing PetscDMLibMesh on Petsc >= 3.5.,2018,,
02569bf,Merge pull request #141 from libMesh/adjoint_dirichlet,2018,,
5799c13,Build the proper filename string based on the total number of processors present in a run.,2018,,
c161d28,Checking for NULL before deleting not necessary.,2018,,
99028fe,Merge branch 'nemesis_filename',2018,,
ba0f057,Bugfixes for non --enable-everything,2018,,
b0470f9,Comment out for-now unused argument,2018,,
a5b75e2,Merge pull request #1 from roystgnr/parallel_edgebcs,2018,,
f598424,Parallel communication of edge BCIDs,2018,,
380155d,Index typo fix,2018,,
870c981,Adding Elem::type_to_n_edges_map,2018,,
98fae2d,AdjointRefinement fixes,2018,,
a7025af,Added warnings in XDR and ExodusII I/O that edge boundary condition info is not supported by the format.,2018,,
98495cb,Added warning to Nemesis_IO about edge boundary IDs not being written out. Also  updated comments in boundary_info.h to emphasize that edge-based boundary IDs should only be used in 3D.,2018,,
d0fd159,Added extra warnings for Exodus and Nemesis about edge BCs not being written out. These warnings are relevant when we do write_equation_systems. The other ones were called when we just wrote the mesh.,2018,,
c81a6e9,Adding insert_node() interface at the MeshBase level.,2018,,
48488c3,"Revert ""Make Exodus reader respect the numbering in node_num_map.""",2018,,
2cb18be,"Revert ""Make Exodus reader respect the numbering in elem_num_map.""",2018,,
db2809b,Adding Exodus node_num_map and elem_num_map stuff back in.,2018,,
265606b,Merge pull request #172 from dknez/node_and_edge_dirichlet,2018,,
8572129.0,Adding second derivatives for first order LAGRANGE shape functions on PRISMs.,2018,,
cd58035,Merge pull request #174 from dknez/node_and_edge_bc_fix,2018,,
b78b784,Fixed compilation errors for --disable-amr due to recent node and edge boundary condition patch.,2018,,
8916239.0,Bugfix for --enable-complex,2018,,
44afd53,Xdr I/O bugfix,2018,,
df3b8ed,Bugfix for dof_id_type != unsigned int,2018,,
9796b53,Adding second derivatives for Hex20.,2018,,
ef0f2ba,Removing inactive libmesh_error() statement.,2018,,
325a01f,Fixing bug in logging logic,2018,,
d7cdb65,Fixes for Xdr I/O with varying id sizes,2018,,
d3f46a6,Merge pull request #176 from libMesh/xdr_type_fixes,2018,,
eece027,Merge pull request #166 from libMesh/intro_ex1_fix,2018,,
20121f8,Merge pull request #173 from libMesh/adjoint_refinement_lift,2018,,
0d7b0ed,#include <sstream> for solaris studio,2018,,
ab085d8,Adding libmesh_not_implemented() placeholders for PRISM15 in shape()  shape_deriv()  and shape_second_deriv() functions.,2018,,
2437a63,- Updated assignment operator in BoundaryInfo to copy over edge data. - Updated MeshTools::Modification::change_boundary_id to modify edge and node boundary data. - Updated SerialMesh::stitching_helper to copy over edge and node boundary data.,2018,,
a747742,Adding PRISM15 shape functions.,2018,,
2c6132b,Added PRISM15 shape function derivatives.,2018,,
58a34e3,Adding PRISM15 shape function second derivatives.,2018,,
e9eb8d0,Merge branch 'prism15',2018,,
5e324a8,Making refspace nodes match the basis function definitions for the PYRAMID5.,2018,,
627ac92,Simplify zeta derivatives of PYRAMID5 significantly.,2018,,
df0b8ce,Adding second derivatives for PYRAMID5.,2018,,
d172d46,Implement on_reference_element for PYRAMID5.,2018,,
4423cab,Merge branch 'pyramid5',2018,,
d159e43,Add missing include,2018,,
5c82e30,Fix ARefEE regression w/no heterog adjoint BCs,2018,,
835cf75,Updating our subset of Boost to 1.55.0,2018,,
5e385ad,Updating Boost Makefile.am,2018,,
a17275e,Ran bootstrap.,2018,,
df8fce3,Adding test code which should be used for generating boost dependencies.,2018,,
f05dce2,Disable multithreading when using Boost's pool allocator  otherwise Boost.Pool is no longer a header-only library.,2018,,
2c0efd0,Merge pull request #177 from libMesh/update_boost,2018,,
325c9d3,Addendum to boost updating instructions.,2018,,
1f36426,Merge branch 'insert_node',2018,,
bedc4d7,Adding Pyramid14 element.,2018,,
e7749b7,Updating Makefile.am's,2018,,
782961e,Ran boostrap.,2018,,
d2b9b43,Updating statistics for November  2013.,2018,,
e19d81a,Updating references: * Zhu_2013b * Rossa_2013 * Petrou_Thesis,2018,,
f9f5ee2,Updating publications for November 2013.,2018,,
e7bf014,"Clang ""helpfully"" warns that this function is unused when blocked storage is disabled.",2018,,
c6637d2,Fixing warnings in nanoflann.,2018,,
3a5ef3f,Clang warns about declaring nested anonymous structs  so ... don't do that  I guess?,2018,,
25c5a49,Adding PYRAMID14 basis functions.,2018,,
8b05849,Added options for triangle in TriangleInterface,2018,,
db8e915,Adding first derivatives for PYRAMID14.,2018,,
26a91bf,Adding second derivatives for PYRAMID14.,2018,,
21d5b04,Add subdomain id from libMesh to the vtk files,2018,,
474509c,rbOOmit change: Updated EIM code to pass the element that the evaluation occurs on to the parametrized function.,2018,,
c90f0bf,Add PYRAMID14 to all relevant branches in build_cube().,2018,,
7b488b4,rbOOmit change: update to previous commit to allow the case where the same element is selected in multiple EIM interpolation points.,2018,,
c5c5379,Make error message less annoying,2018,,
92aa00a,(Re?)enable meshtool element quality measurements,2018,,
83f9536,Add support for writing 14-node pyramid elements to Exodus files.,2018,,
0d3f788,Merge pull request #178 from robert-we/triangle-options,2018,,
b0ea174,Merge pull request #179 from capitalaslash/vtk-subdomainid,2018,,
21a4357,Updating documentation with what I've found about the PYRAMID14 element thus far.,2018,,
a3806dd,Adding PYRAMID14 support in miscellaneous places: * string_to_enum() * Various functions in fe_lagrange.C * Quadrature initialization routines * FEAbstract::on_reference_element() * lagrange_nodal_soln() helper function * FEAbstract::get_refspace_nodes() * FEInterface::max_order() * l2_lagrange_n_dofs() * monomial_n_dofs() * xyz_n_dofs() * Quality::valid() * ElementTypes::basic_name() * ElementTypes::name() * QGrid::init_3D(),2018,,
d9995c5,Adding one_pyramid14.xda reference element file.,2018,,
e4e0c76,Merge branch 'pyramid14',2018,,
53707de,Add one_pyramid14.xda to the list of files to install.,2018,,
6573551.0,Modifications have been made to correct behavior of h-adaptivity with higher order SZABAB and BERNSTEIN:,2018,,
bddc0e9,Merge pull request #181 from manavbhatia/bug_fix_for_RBEIMEvaluation_constructor,2018,,
1dd3eec,added comm for mesh constructor in RBEIMEvaluation,2018,,
6358191.0,Fixing is_node_on_{side edge} for Pyramid14.,2018,,
cff4227,forward declare Elem,2018,,
57b70dc,use openmp when enabled,2018,,
f8eabb1,just pass vectors through to the PETSc interface,2018,,
a45a91d,Bugfix for System::point_*,2018,,
221804c,Merge pull request #183 from friedmud/petsc_vector_optimize,2018,,
03b3781,Avoid narrowing warnings when initializing arrays.,2018,,
aa41a7b,update download link,2018,,
c63fba3,Make libmesh-config --ldflags return whatever libmesh_LDFLAGS was set to during configure.,2018,,
32f99cb,when using openmp set omp_num_threads,2018,,
f8f7e31,use static scheduling and remove unnecessary omp_get_thread_num,2018,,
0607ca7,Merge pull request #182 from friedmud/openmp_merge,2018,,
dddd11c,guard the new add_vector implementation properly,2018,,
31e4d8b,Upcoming petsc-3.5 API changes.,2018,,
58db76a,rbOOmit change: Fixed bugs in RBEIMEvaluation::read_in_interpolation_points_elem,2018,,
44279f0,rbOOmit change: Removed inverse_map from RBEIMAssembly::evaluate_basis_function. Should be a significant optimization for large systems.,2018,,
16941bf,rbOOmit change: Added logging in RBEIMAssembly::evaluate_basis_function,2018,,
bc370a3,rbOOmit change: Further optimized RBEIMAssembly::evaluate_basis_function by storing FE objects. This means we benefit from caching in the calls to reinit.,2018,,
3a20c32,Updating citations: * Fuentes  2013b * Rong  2013 * Fixing Dodd III * Tonks  2014,2018,,
b0b8903,Allow TimeSolver tolerances relative to first step,2018,,
24e45ff,Merge pull request #180 from manavbhatia/master,2018,,
a753e16,Better AdaptiveTimeSolver documentation,2018,,
982c93b,Fix outdated szabab comment,2018,,
0e6148f,Allow ExodusII_IO to have empty variable list,2018,,
907b99a,Merge pull request #184 from libMesh/time_solver_tolerance,2018,,
22d3f05,Merge pull request #186 from aeslaughter/exodus2,2018,,
4c3838a,Adding Perez  2013b.,2018,,
88873d9,Updating statistics for December 2013.,2018,,
cb72763,Adding code to detect the value of PETSC_VERSION_RELEASE during configure.,2018,,
7094b00,Ran bootstrap.,2018,,
6502f29,Adding PETSC_RELEASE_LESS_THAN macro.,2018,,
1ce81ba,Using new PETSC_RELEASE_LESS_THAN macro.,2018,,
f914baa,Merge branch 'petsc_release',2018,,
183f7ce,Use terser PETSC_RELEASE_LESS_THAN macro.,2018,,
1d3bfc4,Merge branch 'dmitry_3.5',2018,,
ca413b0,Fall back to the old PETSC_VERSION_LESS_THAN macro for old PETScs.,2018,,
f7e9b2a,Fix overzealous assert,2018,,
6af8041,Fix for --disable-xdr,2018,,
3905ca4,-Wshadow warning fix,2018,,
bce5593,Don't pollute other code with local macro definitions,2018,,
37699c7,Adding 'partition_agnostic' argument to equation systems read and write to be able to turn off renumbering,2018,,
6b8a1f3,Updating Neveln  2014.,2018,,
3da7ae8,Adding Prudencio preprint.,2018,,
aa1bfa8,Merge pull request #189 from friedmud/disable_renumber_pr,2018,,
a07f4f4,specify serial tests when using newer automakes,2018,,
416de06,dervied files from bootstrap,2018,,
9e60224,update gcc coverage,2018,,
4ecf9b8,cast to a std::size_t rather than assume  fixes cygwin,2018,,
5588d79,include Hilbert/Algorithm.hpp to resolve linking on cygwin,2018,,
8e2032f,include <cstdio> for FILE definition,2018,,
09b0288,updating NEWS,2018,,
20f0fce,Update copyright notice for 2014.,2018,,
075eefb,More 0.9.3 features in NEWS,2018,,
3879664.0,reworded NEWS,2018,,
2747c32,updating automake version number to v0.9.3-rc1,2018,,
6de0535,Fix fixed_solution_derivative in mass_residual,2018,,
94fae70,Fix long-standing VTKIO bug,2018,,
1010c2e,Use SerialMesh in reduced_basis examples,2018,,
1067511.0,updating automake version number to v0.9.3-rc2,2018,,
4884b4e,fixing derived file,2018,,
5074daf,"""make upload"" check for unset LIBMESH_SVN_USER",2018,,
e8c5b20,add 'global' comm world using functions for backporting,2018,,
caf29dc,fixup examples to try not to use the global comm,2018,,
ea5c523,Problem description and proposed fix,2018,,
a821af2,incorporate upstream openmp autoconf update  and set enableopenmp=no when the upstream test fails for proper option reporting,2018,,
c49efd1,configure update for previous m4 change,2018,,
0a64515,updating NEWS for last 0.9.3 features,2018,,
bbcd6ab,updating library version,2018,,
5d382d6,Added the ability to attch_reference_solution to the exact_error_estimator for purposes of using a comparison to a fine grid solution as an error estimator,2018,,
bb18aa1,Added the copy_nodal_solution function.  This allows you to read in a solution and store it while reading in a mesh  and then later  after you have created and initialized an EquationSystems object  copy the nodal solution from the GMVIO object into the EquationSystems and start using it.,2018,,
e7d1732,More fixes for --disable-gmv.,2018,,
0b50940,Attempted fix for unknown compilers with questionable multimap support,2018,,
27fe024,Changes to the following header files to make them pass the contrib/bin/test_headers.sh script.,2018,,
955d641,Changed arguments to encript from -W html to --language=html  though it seems both should be correct.,2018,,
d51d4ec,Make the create_example_docs script start from ex0 instead of ex1,2018,,
9bbb649,Ben is no longer a student.  Added a commented-out entry for Derek.,2018,,
d315904,Latest version of examples documentation.  Why is this in CVS again?,2018,,
46c9aa0,Utility wrapper for common MPI_ calls,2018,,
e9907b2,Run only examples  and in numerical order,2018,,
1c52274,Factored out MPI_Allreduce code into Parallel:: methods,2018,,
d53dd3e,Added link to final version of LibMesh Paper.,2018,,
633ecd3,Added a link to Ben's dissertation  which is a whopping 32Mb!,2018,,
e131332,Fixes for when HAVE_MPI is undefined,2018,,
973134a,Removed newly-extraneous variable,2018,,
94c4e9f,Added overview presentations from ERDC  semiconductors class,2018,,
8a0dce0,Moved EWC paper to top  Ben's dissertation after,2018,,
45a139e,Added developer pictures to CVS,2018,,
f7eab59,Added past developers section,2018,,
ab05199,Added blank image  fixed entry for Derek,2018,,
148b34f,Emphasize CFDLab development  add Sandia & NASA references,2018,,
2438a2e,White background with more muted but color image,2018,,
6d4dd3e,Getting more faces in CVS,2018,,
d1f7219,*** empty log message ***,2018,,
b93e0d2,Added some publications and presentations.,2018,,
8941511.0,Adding more publications.,2018,,
79d2375,Added the rest of the publications I had on hand.,2018,,
ae07423,Added some more words to the index page  also made the content div have a minimum height.,2018,,
7bd878f,Made bg image smaller and over to the side.,2018,,
74e20fe,Bugfixes for Node = Point operations,2018,,
e190ab5,Only do slanty text on Gecko-enabled browsers.,2018,,
ff9a18d,Fixed Parallel localize bug,2018,,
b3c6f09,"Use the ""Gecko"" CSS for Konqueror and Opera  even though they do not report NW_IS_GECKO.",2018,,
e688b99,Fix to make parallel .bz2 writes reliable,2018,,
7b7ddcf,"IE does not support the CSS ""float"" option for images.",2018,,
ce1838f,More reliable bz2 handling on parallel runs,2018,,
f169349,User can now specify segments for a PSLG explicitly or rely on the implicit PSLG if desired.  Also added an option to turn off mesh smoothing after triangulation. This can be useful e.g. when generating a mesh with multiple segments which you do not want to be violated by a smoother.,2018,,
ceb2ba0,Added vector-argument Parallel::min/max,2018,,
f897a61,Added recalculate_n_partitions() function to MeshBase.  The number of partitions the mesh thinks it has can be wrong if e.g. you change some of the element processor_ids by hand instead of using a Partitioner.,2018,,
169ffe0,Fix for H^2 norm compilation with complex number support,2018,,
708f194,Checked in Tim Kroger's diagonal_selection()  select_diagonal()  reselect_diagonal()  and reselect_optimal_diagonal() functions.,2018,,
045d6b4,Fix in parent error estimation code,2018,,
4.205e+53,added link for dissertation defense,2018,,
ad30df4,We use an AutoPtr outside of the #ifdefs  so we should include auto_ptr.h,2018,,
e45f52a,Changes throughout the code to allow it to compile on Solaris using Sun's compiler suite.,2018,,
3344783.0,API changes in PETSc 2.3.3,2018,,
983d9e6,More PETSc 2.3.3 API change fixes,2018,,
de1e86a,Avoid spurious warning,2018,,
752474c,"Added ""-Wno-long-long"" warning to GCC options  some MPI implementations declare long long variables.",2018,,
f9e3874,Patch for safely coarsening a perturbed mesh,2018,,
79c32a8,fixed for osx  causes gmvread to behave,2018,,
8752d51,syntax fix for when MPI is not present,2018,,
4767f7e,NASA presentation,2018,,
2344564.0,Reverted broken fix,2018,,
bcf4bf1,Added PETSC_VERSION_LESS_THAN macro to make supporting different versions of PETSc easier.,2018,,
f2c3823,Added note about the unorthodox splitting of QUAD8s  and added some asserts which should make attaching cell-centered data a little less error-prone.,2018,,
e5f3feb,Updated .depend to notice petsc_macro.h,2018,,
6c0a1ea,avoid vec.clear() not reducing memory usage,2018,,
bbe6d53,Do more tasks in numeric instead of alphabetical order,2018,,
e13223a,Initial check-in of (experimental) ContinuationSystem code.  This is basically a new type of System (derived from FEMSystem) which you can in turn derive your own System from.  It will hopefully allow generic arclength continuation for a System parameter of your choice  provided you add the additional required matrix assembly code.  Still probably a good deal of bugs and non-robust code to be worked out  so use with caution.,2018,,
d499644,use quadtrees in the point locator for planar 2D meshes,2018,,
2d864e2,added a stop() macro which forces a serial run to stop at the desired point until a SIGCONT is recieved,2018,,
2b4f485,increased granularity of performance logging  fixed a bug in DofMap::add_neighbors_to_send_list() which caused the _send_list to become excessively large.  Further  this slowed the DofMap::sort_send_list() method considerably.,2018,,
620bf61,did not mean to check in these two,2018,,
4da5ec8,increased granularity of performance logging  fixed a bug in DofMap::add_neighbors_to_send_list() which caused the _send_list to become excessively large.  Further  this slowed the DofMap::sort_send_list() method considerably.,2018,,
21b0b3e,increased granularity of performance logging  fixed a bug in DofMap::add_neighbors_to_send_list() which caused the _send_list to become excessively large.  Further  this slowed the DofMap::sort_send_list() method considerably.,2018,,
8ff3d72,increased granularity of performance logging  fixed a bug in DofMap::add_neighbors_to_send_list() which caused the _send_list to become excessively large.  Further  this slowed the DofMap::sort_send_list() method considerably.,2018,,
5545b9f,use the NODES method to populate Octree-based PointLocators since it is much  much faster,2018,,
7356c29,truly empty nodes array after it is used to populate the tree,2018,,
d7e1844,Once the boundary mesh is sync'd  remove all unconnected nodes.,2018,,
9ab15bb,"Added ""Euler2"" TimeSolver implementation",2018,,
dd090ef,Added Euler2Solver dependencies,2018,,
ae6c9bb,put a point_locator in the mesh,2018,,
f524fc5,spelling of Nicolson,2018,,
42383a9,Updated dependencies,2018,,
ae4d9cd,Link to Sandia libMesh slides,2018,,
128d767,Print debugging constraint info to any ostream  not just cout,2018,,
dbd5fe6,If we're going to spell Phyllis Nicolson's name right  we might as well spell it right everywhere...,2018,,
cd49c55,New max_growth parameter  new deltat resizing behavior  some refactoring,2018,,
c0037f9,Support upper_tolerance parameter,2018,,
5b8b856,Print !quiet output ASAP,2018,,
ae5ae85,PerfLog the time spent calculating norms,2018,,
2d06b35,Ensure const-correctness on all compilers,2018,,
a4b6224,include limits header for std::numeric_limits,2018,,
d4814ae,include unistd.h for unlink(),2018,,
f4457f6,Fix undersized buffer,2018,,
fad7738,Remove odd undef SEEK_* entries,2018,,
f43e25f,Avoid infinite template recursion with icc 7.1,2018,,
1d95c0d,updated configure to accept command-line options for the compilers and to print the configuration information into libmesh_config.h,2018,,
b6d1bc0,updated configure to accept command-line options for the compilers and to print the configuration information into libmesh_config.h,2018,,
3e85640,Added ParallelMesh stub,2018,,
d4d486b,added a unique namespace for libmesh make variables,2018,,
aff06c6,Added stubs for first Mesh parallelization methods,2018,,
ae54210,*** empty log message ***,2018,,
7d58c54,Added not_local and active_non_local iterators.,2018,,
5690837.0,added new paper,2018,,
62d2d8a,updated link,2018,,
7c996f8,flush-right logo,2018,,
50f8bb5,flush-right logo,2018,,
505aba0,updated documentation,2018,,
b9da12f,updated documentation,2018,,
16e2862,updated documentation,2018,,
bb6719d,updated publications,2018,,
7896e6d,backslashed quotes being eaten on IRIX and AIX  do not use them,2018,,
c574fed,added Dereks USNCCM 2007 presentation,2018,,
abcffad,do not include petscconf.  this has bitten me for the last time.,2018,,
d27ec2d,get the link/include stuff at configure time,2018,,
f3d4b78,Added another USNCCM9 presentation,2018,,
cd961dd,Added VTKIO class by Wout Ruijter and configure options to link against VTK if it is available.,2018,,
db3ed88,Added CVS ID tags.,2018,,
6d919d5,reverted pestc build method.,2018,,
ab2b2e8,Do not add -Wno-deprecated as a general CXXFLAG.  It triggers other warnings on C files.,2018,,
0f8a21f,Remember to always stop perflogging calculate_norm(),2018,,
6cbf369,*** empty log message ***,2018,,
99ddf22,Fix for coarsening code with use_old_dof_indices==false,2018,,
ad44a92,Refactoring  added estimate_parent_errors support,2018,,
fc1b554,Fixed accidental code deletions,2018,,
7e5fd80,Reliability bugfixes,2018,,
431a409,Added delete_nonlocal_elements implementation,2018,,
32c1887,Fixes for VTK tests.,2018,,
f55504e,FLIBS should be libmesh_FLIBS  thanks.,2018,,
509f094,changed char* to const char*,2018,,
2cd466f,Martins new smoothing implementation,2018,,
f4e2745,Don't prepare_for_use - it does too much,2018,,
b15205a,This commit was manufactured by cvs2svn to create tag 'pre_serialmesh'.,2018,,
f0dbca6,Refactored Mesh into SerialMesh  ParallelMesh,2018,,
7e52a88,Added SerialMesh  UnstructuredMesh classes to MeshBase tree,2018,,
b3e72ab,Fix for ENABLE_PERIODIC && !ENABLE_AMR,2018,,
11dc5d0,Can only set _p_level when ENABLE_AMR is off,2018,,
af3ca23,Fixes for ENABLE_PERIODIC && !ENABLE_AMR,2018,,
5f669c5,Fixed misplaced ifdefs,2018,,
1fa1d60,Added assert(),2018,,
31495b3,More conservative plot_error arguments,2018,,
69e51a3,Add test for gcc ABI demangling (necessary for in-code stack traces),2018,,
a71cfaa,Add print_trace() function  supporting #define,2018,,
699d169,Move implementations to .C file,2018,,
491e72a,print_trace dependencies,2018,,
c07e362,Don't compile when we may not have dl functions available,2018,,
66d7e6c,Test for dladdr(),2018,,
1201988.0,Additional test to avoid breaking cygwin,2018,,
115bc83,Add Elem::set_parent() function for use by MeshModification code,2018,,
4d8a31c,Fix stupid bug,2018,,
1d9dc06,Reverting bad code,2018,,
95a1e32,Make Elem::_parent non-const for use in MeshModification methods,2018,,
0250b4c,Fixed parallel bug,2018,,
8c54786,More Mesh refactoring - node  element storage details pushed out into SerialMesh and ParallelMesh,2018,,
71e3906,New dependencies based on SerialMesh  ParallelMesh refactoring,2018,,
4ffcd66,Bugfixes against time when max_elem_id > n_elem,2018,,
3f76511,Use namespaced env variables,2018,,
edbd719,Fix bug for case VTK,2018,,
d9f5b90,Don't try to write twice to files with both .dat and .plt in them,2018,,
c67e53f,Write VTK output when requested,2018,,
8db6dd3,Added NumericVector<T>::sum(),2018,,
9c109cf,Use T (PetscScalar  may be complex) for PetscVector::sum return,2018,,
5e+80,Added has_mesh_data method,2018,,
0f1a067,(Hopefully) better configuration and implementation of print_trace(),2018,,
e7a546f,Fix make variable namespace,2018,,
bd3fa6b,New VTK code from Wout Ruijter,2018,,
f593b04,Only need mesh_base.h  not mesh.h,2018,,
672a835,fixed for the case of no VTK.,2018,,
9b13338,removed extra space,2018,,
d438c8f,Only need unstructured_mesh.h  not mesh.h,2018,,
4dff3a2,Use UnstructuredMesh instead of Mesh where possible,2018,,
c9472ec,Need unstructured_mesh.h  not mesh.h,2018,,
e5f596f,Remove unnecessary headers,2018,,
3818c22,Removed unnecessary headers,2018,,
ebc5d2c,Only need mesh_base.h  not mesh.h,2018,,
8586f84,Only need MeshBase  not Mesh,2018,,
cd75501,Only need a MeshBase  not Mesh,2018,,
4069485.0,Only need MeshBase  not Mesh,2018,,
5adb516,Include mesh_base.h  not mesh.h,2018,,
fa9f0a2,Use MeshBase instead of Mesh,2018,,
15249d6,Add ENABLE_PARMESH option (disabled by default) to use ParallelMesh as Mesh,2018,,
61271f5,Revision number update (ran autoconf after cvs commit configure.in...),2018,,
db76c0e,Updated dependencies,2018,,
d25bc16,Only need MeshBase  not Mesh,2018,,
928614.0,Added access to the VTK Unstructured grid  also a test in committing source,2018,,
d29959a,no need for the #ifdefs since the vtkUnstructuredGrid is forward declared and only used as a pointer.  This fixes a bug for the case of no VTK support,2018,,
3ca8701,cast to a long int to match the print statement.  Alternatively  could change %ld to %d?,2018,,
98e7ff9,updated compiler flags for PGI 7.0-7 compilers,2018,,
bf1415c,give a hint as to which std::sqrt<>() to call.  Required for pgCC,2018,,
ddad4c0,const bool return type is meaningless - replace with bool,2018,,
61c43ec,"For the VTK connectivity function  if the user requests a ""subchild"" other than zero  throw an error.  The VTK Hex20 is implemented as a single element.",2018,,
6daa331,Do not use char buffer to set filename.,2018,,
f9062e2,Added the axes_limit string.  Allows you to specify the limits of the axes used in GNUplot's 2D output.,2018,,
9ef83f7,support for Intel v10.0,2018,,
d55d60d,added SPAI_LIB in case PETSc is built with SPAI support,2018,,
0b16019,updates for intel 10 on itanium,2018,,
e8bc980,"Added bibtex-format citations.  Also added ""official"" libMesh citation.",2018,,
da4cc37,This commit was manufactured by cvs2svn to create tag 'libmesh-0_6_1-rc1'.,2018,,
92a53eb,This code still has a good deal of extraneous comments  etc and shouldn't be used unless you know what you are doing.,2018,,
1.059e+102,Fixes for --enable-complex,2018,,
3d3b7cc,Compilation workarounds for --enable-complex,2018,,
3daf655,used uint without typedefing it.  Sun compiler caught this,2018,,
0ad6a7c,First check-in of the generalized EigenTimeSolver based on Steffen's Slepc solver.  This code is largely untested and probably shouldn't be used yet unless you know what you're doing.,2018,,
bd4bd1f,explicit casts to help sun compilers figure out which overloaded std::pow to use,2018,,
2086387.0,Sun Studio support,2018,,
0ded1b4,updated config.guess,2018,,
9e119a0,#ifdef HAVE_SLEPC,2018,,
e65fe86,removed C++-style comment,2018,,
1275212.0,Fixes for --enable-complex,2018,,
95cdcab,remove deprecated char*  replaced with const char*,2018,,
195aa45,Bugfix for broken 1D Hermites,2018,,
d9fa464,Bugfix for 1D Hermites,2018,,
26e0715,Include numeric_vector.h  not petsc_vector.h which we may not be compiled to use,2018,,
adcc169,Bugfix for 1D Hermites,2018,,
4534fd7,updated copyright notice,2018,,
3d44735,allow the user to specify which method to use when building a PointLocatorTree from MeshFunction,2018,,
f8e38fd,Trying out a different underlying container for ParallelMesh,2018,,
0c0c202,Updated dependencies,2018,,
af406f7,"Print better description of ""make run""",2018,,
0eb9a0a,Bugfixes for mapvector-based ParallelMesh,2018,,
b097a42,Added option to set initial Newton tolerance.  Added ability to turn off stepgrowth based on # Newton steps req'd for convergence.,2018,,
1ccd521,Only add the matrix B to the system if the user has not already added it.,2018,,
e801c4d,Switch to element iterators rather than indexing  for ParallelMesh compatibility,2018,,
7fa3a52,Use element iterators instead of indexing for ParallelMesh compatibility,2018,,
50330c3,Add a quick comment to mapvector class,2018,,
f98387d,Fix for ParallelMesh compatibility,2018,,
55b27fc,Don't run ex12 in parallel  MeshData objects don't get set correctly from a parallel Mesh::read().  We should probably fix that someday.,2018,,
8098bc7,Removed inadvertently-committed debugging statements,2018,,
4ca0693,This commit was manufactured by cvs2svn to create tag 'libmesh-0_6_1'.,2018,,
4cc3797,Adding new Parallel:: helper functions  testing out subversion,2018,,
fd50de2,Remove inactive branch.,2018,,
49ec85f,Remove inactive branch.,2018,,
6373259.0,renaming old tags.,2018,,
ba4e43d,Renaming old tags.,2018,,
ad8af96,Renaming old tags.,2018,,
d58df46,Renaming old tags.,2018,,
3e906a1,Renaming tags.,2018,,
3856160.0,Renaming old tags.,2018,,
238a63a,Renaming old tags.,2018,,
b6c4106,Renaming old tags.,2018,,
84575eb,Renaming old tags.,2018,,
d7df063,Renaming old tags.,2018,,
cd44429,Renaming old tags.,2018,,
4cb1d21,Renaming old tags.,2018,,
755b5c8,Renaming old tags.,2018,,
26c6014,Renaming old tags.,2018,,
18ecca1,Renaming old tags.,2018,,
6eebbd0,Renaming old tags.,2018,,
8c4c0c1,Renaming old tags.,2018,,
0d1a4e3,Renaming old tags.,2018,,
bbb2f92,Renaming old tags.,2018,,
2.5e+53,Renaming old tags.,2018,,
41f13d4,Renaming old tags.,2018,,
4.1e+49,Renaming old tags.,2018,,
8a3b3d4,Renaming old tags.,2018,,
d61ce1c,Renaming old tags.,2018,,
8947693.0,surely this is what you mean -- for (unsigned int i=mysize  i != 0  ++i) is an infinite loop!,2018,,
c08bc59,updating documetation to describe svn,2018,,
1d80010,formatting,2018,,
aaa2911,updated documentation,2018,,
223340c,updated documentation,2018,,
257a082,updated documentation,2018,,
1452d2f,honor keywords in source files,2018,,
7a84153,beginnings of a unit test framework,2018,,
c6b19cd,honor keywords,2018,,
87a3fde,honor keywords,2018,,
aa03fab,fixes for allgather and vector_union,2018,,
dbb1ed3,added Id,2018,,
0ba9ab7,discuss unit tests,2018,,
8e292a8,distributed vector regression test,2018,,
19a1e9c,unit test for DistributedVector<>::localize(),2018,,
e677049,make ::localize() more efficient  still need to handle ::localize_to_one(),2018,,
153370c,moved consistent with new config.guess,2018,,
4307a40,moved consistent with new config.guess,2018,,
f259e33,moved consistent with new config.guess,2018,,
ba04514,use templates to test things derived from NumericVector<>.  something wrong with PetscVector<>  though...,2018,,
e34cad6,use templates to test things derived from NumericVector<>.  something wrong with PetscVector<>  though...,2018,,
6841351.0,OK  that was subtle.  PETSc must #define VectType  so use NumericVectorType as the template parameter instead,2018,,
6d09a27,Support for SLEPc 2.3.3.  It looks like the changes to SLEPc will be similar to those which happen in PETSc.  Whereas SLES went to KSP+PC in PETSC  in SLEPC  we have some of the EPS functionality splitting off into an IP (inner product) object.,2018,,
9d211d6,Add wrapper for MPI_Gather,2018,,
33a4a6b,move vector_union to vector_allgather  add vector_gather,2018,,
83858d7,move vector_union to allgather(vec)   add gather(root vec),2018,,
95286c1,offer --cxx option in usage statement.  The option was there  but not displayed in the usage summary.,2018,,
5c832eb,Name change from vector_union to allgather,2018,,
5ce2b67,Added wrapper for MPI_SendRecv of arbitrary vectors,2018,,
f4d7aa0,test new impl,2018,,
e6d0cc5,fixed localize_to_one,2018,,
6eabaf3,optimze for degerate case,2018,,
c30d192,sum  send_receive shouldn't crash with empty vectors,2018,,
20cac8e,Updated parallel_mesh dependencies,2018,,
0e1ec4f,log some of the potentially more expensive parallel operations,2018,,
722058c,Fix tag  swapped proc id bugs,2018,,
fb02f74,Parallel renumber_nodes_and_elements,2018,,
780e0ab,git-svn-id: file:///Users/petejw/Documents/libmesh_svn_bak@2264 434f946d-2f3d-0410-ba4c-cb9f52fb0dbf,2018,,
69ce95f,reserve() space for efficiency since the information we need to do that is freely available.,2018,,
266606a,reserve() space for efficiency since the information we need to do that is freely available.,2018,,
6b73853,Make sure we iterate over parents before children when necessary,2018,,
698b4f0,Remove overzealous warning - we should be able to contract active and delete subactive elements in any order,2018,,
949caf2,Removed now-overzealous warning from _coarsen_elements,2018,,
ceae618,Updated dependencies,2018,,
2055314.0,Support 1D meshes and set the default mesh color to black.,2018,,
3b961e7,Add iteration counters,2018,,
397ca15,Count numbers of linear  quasi-Newton iterations,2018,,
24ec412,cleanup,2018,,
dad79e1,added a method to get the element-weight processor-wise,2018,,
e185cab,added a method to get the number of local nodes,2018,,
cc2a6e0,add an insert_node() method which parallels the insert_elem(),2018,,
1cc837b,add a broadcast,2018,,
214ed25,added an untested allgather() method for ParallelMesh,2018,,
04fcdce,reserve() the right number  remember to add the element processor_id()  and check global sizes without communication,2018,,
3c544c9,set the childrens node keys  add child element to its parent,2018,,
39f37c8,set the childrens node keys  add child element to its parent,2018,,
7b243fb,documentation,2018,,
864897b,test the broadcast,2018,,
c84a68a,print a more useful error message,2018,,
b963d4a,must be careful with insert_node() in the case of a node with the specified ID already existing.,2018,,
a521bd2,MeshCommunication::allgather() now works,2018,,
eaf9031,Added print_converged_reason() member function.  This uses the KSPGetConvergedReason(...) functionality of PETSc  and prints a message about why the most recent linear solve converged (or diverged).,2018,,
a8af7de,Added the newton_progress_check flag  and made the newton_stepgrowth_aggressiveness a class member.  Also  check for initial linear solve tolerance too loose (solver exits in zero iterations.),2018,,
a73820a,Avoid compile bug with --disable-amr and warning with --disable-mpi,2018,,
f460af1,Don't reserve more request memory than we'll need,2018,,
818df5d,bugfix  remove redundant variable,2018,,
da092b2,Remove unnecessary forward declaration,2018,,
b90dfff,Request MeshBase references  not Mesh references  with get_mesh(),2018,,
29a88af,Return MeshBase references  not Mesh references  from get_mesh,2018,,
5928315.0,Updated dependencies,2018,,
39023cf,Added pure virtual read()/write() interface to MeshBase. Note that these could and probably should eventually be concrete implementations in mesh_base.C.  That way a CartesianMesh (i.e. something not derived from UnstructuredMesh) could utilize the same functionality.,2018,,
01128b5,The DivaIO class was templated on UnstructuredMesh but MeshBase appears to be good enough.  This code generates output  but we haven't had a working copy of the DIVA viz software for some time  so there's no way to know if it's actually working...,2018,,
d348ab9,Loop over only local elements when assembling in serial,2018,,
2db3ed3,allgather_bcs() now works,2018,,
6c2d7db,Make neighbor setting in 1D reliable,2018,,
c81d016,Don't delete unpartitioned elements or their node neighbors,2018,,
3a26b96,Optimization in invalidate_dofs,2018,,
0fb4f91,Only assign nodes to processors which own *active* elements containing them,2018,,
ca11ae0,Add sanity check to look for unpartitioned nodes,2018,,
2daa0ca,Assign processor ids to new nodes added by element refinement,2018,,
945fb80,Parallelized  refactored DofMap::distribute_dofs,2018,,
f86b829,Bugfix for partitioner sanity check,2018,,
d6e716a,Another bugfix in the sanity check,2018,,
ca2a157,Make sure subactive nodes are partitioned too,2018,,
372400000000.0,Make sure nodes are assigned to a processor where they're active if possible,2018,,
cd23404,Compilation fix for --disable-mpi,2018,,
1215aa7,Avoid compilation warnings with --disable-mpi,2018,,
67de81e,Make print_convergence_reason a base class method (even if only implemented with Petsc for now),2018,,
2faab5b,Call print_convergence_reason as a base class method,2018,,
923b3f2,Ensure consistently partitioned nodes even on distributed meshes.,2018,,
05eb3bc,Refactoring of Mesh allgather()  delete_remote_elements(),2018,,
e86e5f9,Bugfix for corner case,2018,,
2c04cc5,Don't delete ancestors of undeleted elements,2018,,
e212c06,Add type for RemoteElem,2018,,
3ae2230,Added static global remote_elem pointer for use with ParallelMesh,2018,,
2008901.0,Do test_level_one in parallel  keeping return value globally valid,2018,,
b1d5673,For now  don't try to run AMR examples with ParallelMesh,2018,,
e646a70,Implement ParallelMesh::is_serial(),2018,,
bee431c,Parallelize meshes (where applicable) in EquationSystems::init(),2018,,
0becd20,Updated dependencies,2018,,
0e8af93,send_receive for MPI datatypes,2018,,
5fc497e,Fixed cut-n-paste assert bug,2018,,
9fab0ab,Added remote_neighbors_links method,2018,,
00340ee,Set appropriate neighbor pointers to remote_elem when deleting remote elements.,2018,,
4aeb5c9,Serialize before doing an EquationSystems::write,2018,,
c0cf110,Make load addition parallel-safe,2018,,
f831441,Renumber dof objects to shrink their containers after deleting the remote objects,2018,,
86c9645,Use EquationSystems::all_gather before a write,2018,,
79a82d3,I hate to force a rebuild for a documentation change  but this one is important...,2018,,
e5633f3,pedantic const-correctness.,2018,,
aed82de,update neighbors after allgather()ing the mesh,2018,,
4eda032,Added n_unpartitioned_* methods  fixed ParallelMesh::n_* methods,2018,,
dcfbaee,Updated dependencies,2018,,
a076f07,Assert a contiguous node numbering before building a nodal solution vector,2018,,
5395287.0,Don't leave ancestor elements unpartitioned - if they're left with processor_id 0 it leads to load imbalance  if they're left with invalid_processor_id it breaks assertions.,2018,,
ce554e1,Create unpartitioned elements by default,2018,,
7765117.0,Make n_* functions use cached data,2018,,
6073424.0,Assertion for local add_elem case,2018,,
c5e18ab,Implementations for --diable-mpi,2018,,
fcf8a6e,Fix for --disable-amr,2018,,
08726d4,New add_node method  to allow calling processors to specify via processor_id whether they're adding a local or an unpartitioned node.,2018,,
61387f7,add_* should be pure virtual,2018,,
9b76a6e,Add optional processor_id argument to add_point,2018,,
2538276.0,Add optional processor_id argument to add_point,2018,,
f4955aa,Set processor_id=0 when adding points and elements with a Mesh.read()  so ParallelMesh doesn't get confused.,2018,,
353c3c1,send_receive() in --disable-mpi case,2018,,
72497ec,MeshBase::add_* API changes  bugfixes.,2018,,
336b2d5,"Fix the ""more processors than active elements"" case.",2018,,
d789e42,Tiny optimization for send_receive(vector)  addition of send_receive(vector<vector>),2018,,
26d441a,Type fixes for send_receive(vector<vector>),2018,,
0fb7331,Added DofMap::allgather_recursive_constraints(),2018,,
6307a13,Updated dependencies,2018,,
7986069.0,Enable parallel constraint calculations when !mesh.is_serial(),2018,,
a0e401f,explicitly check that the mesh is serialized,2018,,
207becd,use the point assignment operator,2018,,
d25926a,added doi link,2018,,
9f92c8a,_next_free_*_id bugfixes,2018,,
cf48a9c,Set parent and child links to remote_elem on ghost elements  not just neighbor links,2018,,
07ca3c9,Add an assert(!p_level) for now  unless it's fixed that could trigger confusing bugs later.,2018,,
dc48391,Parallelized create_parent_error_vector,2018,,
39269b8,Added Parallel::min/max (i.e. logical and/or) for type bool Added MPI_Datatype entries for char/unsigned char,2018,,
58ff5fc,Parallelized test_unflagged  added make_flags_parallel_consistent,2018,,
31afb0a,Use make_flags_parallel_consistent whereever applicable,2018,,
8e5bd92,Fall back on returning DistributedVector if PETSc and LASPack aren't enabled  don't just error(),2018,,
35e9a88,Updated dependencies,2018,,
4a58b29,Allow command-line disabling of LASPACK and PETSc,2018,,
cabce73,Don't call compute_children_node_keys  we don't use them anymore.,2018,,
4e15251,Remove obsolete Elem::key() and Node::key()  use hashed Point locations as keys for MeshRefinement instead.,2018,,
ce2c9fc,Send global error messages to cerr  but only one copy even in parallel,2018,,
a87887e,Ignore NFS temp files,2018,,
6d6c96b,Update svn:ignore,2018,,
26236be,Added renumber_* functions  allow ParallelMesh::add_* to add nonlocal prepartitioned objects.,2018,,
6e4b032,More parallel synchronization code for MeshRefinement,2018,,
eeeb526,Fix node renumbering  add ghost element synchronization,2018,,
378ecda,Clearing mesh is implicitly a type of serialization,2018,,
311b1ce,Added more asserts  fixed stupid _is_serial bug,2018,,
573fffa,Don't try to allgather unnecessarily - for one thing  it may break on non-parallel meshes whose dofobject ids aren't in blocks by processor!,2018,,
178f8b4,Parallelized MeshTools::bounding_box,2018,,
f13b7bc,Fix missing header,2018,,
6897fd1,Fixed indexing bug in parallel consistency code,2018,,
5017d08,Infinite loop bug fix in parallel consistency code,2018,,
9ea16ea,Fixed requests bug in make_nodes_parallel_consistent,2018,,
70d3848,Fix _new_nodes_map bug  use a more reliable key for n0 n1 n2 large,2018,,
fb5df03,Don't try to renumber correctly numbered nodes,2018,,
62ec51c,Bugfix in parallel consistency code,2018,,
32f04ec,Fix parallel synchronization bugs,2018,,
be6e2d5,Updated dependencies,2018,,
da95a29,serial ParallelMesh compatibility,2018,,
a2f8548,Reenable parallel code for testing of cached code  cache bugfixes,2018,,
cdff589,Prototypes for parallel checking code of cached n_* values,2018,,
38a52de,Fixes for --disable-amr,2018,,
a482b04,Additional parallel debugging code in while loops  bugfix with ParallelMesh,2018,,
374eb2a,Added Parallel::verify() method  parallel_only() macro,2018,,
d4718be,Disable repartitioning in parallel  add parallel_only() macros where appropriate,2018,,
1209a30,Added parallel_only() macros where appropriate,2018,,
0224ba3,Added Parallel::verify() for --disable-mpi,2018,,
397b5e7,Fixed cut-n-paste bug in assert(),2018,,
d109f15,Explicitly serialize for I/O  Don't try to skip AMR examples with ParallelMesh anymore,2018,,
782a8aa,Fix for adaptive make_links_to_me_remote,2018,,
6a8edca,Fixes for code that might encounter remote_elem,2018,,
ca5f4cb,Trivial change for easier debugging,2018,,
8500336.0,Fix for remote_elem encountering code,2018,,
49bd533,More remote_elem handling code,2018,,
a583bd4,Additional assert(),2018,,
3130890.0,Additional assert(),2018,,
2fc2f39,integers are valid Scalars now,2018,,
7294b11,Initial cppUnit Commit,2018,,
2d7dfaf,Assert valid return value from which_neighbor_am_i,2018,,
315e76b,Assert valid return value from which_neighbor_am_i,2018,,
7295d1e,Assert valid return value from which_neighbor_am_i,2018,,
c160760,Updated dependencies,2018,,
0c665cd,Don't error() if which_neighbor_am_i fails  just return invalid_uint,2018,,
2dbdca3,New assert_valid_neighbors() test  bugfixes in find_neighbors(),2018,,
a73a92c,Test for valid neighbors after a delete_remote_elements(),2018,,
3928d2f,Adding some of Ben's old tests to the new system,2018,,
189fa7c,Small changes to Makefile,2018,,
eb0d079,More assert_valid_neighbors() checks,2018,,
996af2c,Fixes in make_links_to_me_remote  assert valid which_neighbor_am_i,2018,,
1b96f21,One last Makefile change,2018,,
4ad0317,More asserts,2018,,
998bafc,Fixes for find_neighbors() with remote_elem,2018,,
2708f62,Added assert_valid_parallel_ids(),2018,,
f8165a8,Use macros to pull in inherited tests.,2018,,
d8d4130,Redo test structure of Point to get tests from a TypeVectorTestBase,2018,,
3737bfe,Added assert_valid_parallel_flags,2018,,
1c46c1a,Couple of small changes for unit testing,2018,,
8b6ccb3,Add Node tests,2018,,
d02aa28,Move Node from Base to Geom,2018,,
a44c467,Don't test subactive p levels,2018,,
85c2d77,Dof_object_test base,2018,,
aa52305,Turn down linear solver settings,2018,,
f73c1ae,Added Elem::assert_valid_neighbors,2018,,
2cc525f,Updated dependencies for node.h move,2018,,
ceb6bdb,Explicit casts from RefinementState -> unsigned int,2018,,
bd665ab,Comment out unused variable,2018,,
a9c4008,Updated dependencies for moved node.h,2018,,
f106e6e,Implemeent UnstructuredMesh::assert_valid_neighbors with Elem::assert_valid_neighbors,2018,,
b0332ee,more dof_object tests,2018,,
b000809,Fixed MeshTools::n_levels() with non-serial meshes  subactive elements  added local and active n_*_levels() versions,2018,,
90c8777,Test parallel validity before renumbering,2018,,
c1e7006,Use n_local_levels() for find_neighbors(),2018,,
6.8e+35,Return a real n_levels  not just the largest level number,2018,,
7fc6c3f,Fix in new n_levels code,2018,,
c2deccf,Assume parents are only remotified before their children are  there's no good way to delete parents before their children (when child->level() might be called) anyway.,2018,,
3000000000.0,Need to use n_levels in find_neighbors()  or find a better way count levels including ghost elements.,2018,,
2a90200,Parallel flag consistency may need to come first (to avoid false positives from outdated ghost element flags) and last (to fix any inconsistency generated by previous flag smoothing operations),2018,,
de419bf,Communicate refinement flags and p_level in pack_element.,2018,,
649d794,Remove debugging asserts,2018,,
9555d3b,Don't prepare requests to be sent to the same processor,2018,,
746f15a,Use MeshTools::n_levels() instead of hard-coded level count,2018,,
86cac0c,Return NULL pointers to indicate non-existent elements/nodes,2018,,
39c62a5,Allow overwriting remote_elem in Elem::add_child()  this gets done by allgather().  We'll still need to add an optional which_child_am_i argument to add_child  I think  at the moment we're getting children in the right place by luck.,2018,,
64ebf84,"""Forgot to allocate memory before copy()"" bug fixed.",2018,,
8ad68d0,Disable ex8 with ParallelMesh until we replace that explicit serial loop over every node.,2018,,
f4932d0,"Fixed ""tried to double-add ghost child elements"" bug",2018,,
f2e7bb8,Updated dependencies,2018,,
41771fc,Added index-specified version of Elem::add_child(),2018,,
13f2c6d,Add children to fixed positions  in case allgather doesn't receive them in ascending order.,2018,,
b79ef9d,Initial checkin of netcdf and exodus source into contrib.,2018,,
1554795.0,Fix for --disable-amr,2018,,
1c76411,Fixes and efficiency improvements for --disable-amr,2018,,
30d8268,Initial Exodus solution reading steps... can now get timesteps  var names and nodal values for a var,2018,,
815905d,ExodusII copy nodal solution,2018,,
4b318cb,Exodus solution reading works!,2018,,
292ee30,Handle remote_elem,2018,,
93cdd1b,do not use MPI_CHAR when MPI_MAX is needed,2018,,
3c0918b,fix the build rule to omit all the other libmesh includes,2018,,
2fce6d4,add libHilbert hilbert index utility library,2018,,
7a3397e,remove .dep,2018,,
004d299,add libHilbert hilbert index utility library,2018,,
560c612,added parallel sort,2018,,
23c07c9,fixed --disable-libHilbert,2018,,
86d2ad6,OK to use chars for Parallel::send_receive,2018,,
f3c88fc,reorg,2018,,
07dbd68,removed,2018,,
6aee936,updated .depend,2018,,
9d1ea2f,checkin of incomplete global indices routine,2018,,
9626387.0,updated .depend,2018,,
0c51b6e,Added reset_remote_elements argument to find_neighbors(),2018,,
1dbf883,Delete remote_elem links when doing a Mesh allgather,2018,,
c4a1fb4,More fixes for ParallelMesh refinement,2018,,
de84a36,Don't finish enforce_constraints_exactly() too early when not all processors are aware of all constraints,2018,,
85057b1,Exodus meshes can now be written,2018,,
0f08b50,Added clone() virtual copy constructor  all_*_order to MeshBase,2018,,
d65b0bb,Make ErrorVector::plot_error() work for MeshBase,2018,,
c076af2,Updated dependencies,2018,,
5facbdd,Fixed typo in new bounding_box code,2018,,
f28382a,can now compute global  partition agnostic node and element indices,2018,,
6b7786a,Added header to fix complaints about undefined ostream,2018,,
ced4c8d,libMesh can now write solutions to Exodus files,2018,,
ab59a7a,fix for pedantic compilers,2018,,
5b9de0d,more on global indices,2018,,
74b6d09,Fix stupid semicolon bug,2018,,
ddfdc2f,Make --disable-exodus and --disable-netcdf work correctly,2018,,
8e5dfce,keyword expansion in all source files,2018,,
0d3bd44,pedantic compiler corrections,2018,,
ca48435,fixed _send_list debacle  I think...,2018,,
2d1f7f2,Create a tag for libmesh-0.6.2 - bugfix on top of 0.6.1.,2018,,
58960a2,oops,2018,,
bea2f80,Resotre 0.6.1.,2018,,
ae26129,git-svn-id: file:///Users/petejw/Documents/libmesh_svn_bak@2507 434f946d-2f3d-0410-ba4c-cb9f52fb0dbf,2018,,
17ebeab,Rebuilding 0.6.1 tag.,2018,,
f6525fb,rebuilding -0.6.1 tag,2018,,
e918bbf,ebuilt 0.6.1,2018,,
cb20060,changed example programs to use element iterators.  This will make it easier to add an example for parallel,2018,,
713995d,Changed example 7 to exit without a fatal error when complex numbers have not been enabled in the code.,2018,,
0760cf5,libMesh now compiles & runs w/o _any_ complaints in dbg & opt on HP,2018,,
85c36cb,added the Prism18 and Prism15.  Still need embedding matrices  shape functions for Prism15,2018,,
5451061.0,Adding explicit this-> qualifications for calling member functions within other member functions. For now private and protected members will remain with an underscore prefix and not use the this-> qualifier.  It was felt that that would be a bit of overkill :),2018,,
1b05f5a,- Added the embedding matrices for the Prism18. - Fixed the ambiguous definition of the Prism reference element...   For the record  it is (xi eta) in the standard reference isoscolese   triangle with zeta in [0 1]  NOT [-1 1].  Sorry about the confusion.   It was wrong in two places in such a way that they cancelled each other   out! - Creating the boundary mesh works again  this time without renumbering the   nodes,2018,,
3ba4d30,Added this-> qualifier to the different element classes.,2018,,
24685.0,fixed silly tests that avoided the use of petsc options,2018,,
f68cd32,example 4 now runs properly in parallel,2018,,
935967.0,minor fix to gmv complex output,2018,,
182e5b8,* src/apps/.cvsignore (Module): Ignore foo.cc,2018,,
e8c0a65,- typo in ex4  - major rework & debug of InfFE<...>::reinit() and related methods,2018,,
f60a691,unified the refinement code for the non-infinite elements.  Thanks for the suggestion  John.  Daniel  you might want to take a look at this...  Maybe the refinement code for the infinte elements can be consolidated too?,2018,,
6e9ade3,weirdly  Ben could override my changes to inf_fe.h... so  here they are again  -),2018,,
342c07f,change for --disable-amr,2018,,
9491199.0,"minor fixes for HP: - new aCC requires the same notation for AutoPtr as the IBM xlC - made aCC shut up about further future errors - improved std support  see mesh_documentation.h: for now  this   works.   Possible future improvement?: ./configure could just try   to figure out the architecture on its own? Then this whole   environment variable thing  like CXX=""aCC -AA""   won't be necessary?",2018,,
eac915d,added boundary conditions for internal cube mesh,2018,,
5ac4933,parallelizing the mesh.  Added DenseSubMatrix  DenseVector  DenseSubVector.  Made all read_* members protected...  The only way to read a mesh now is with the Mesh::read() member.,2018,,
9995749.0,Added this-> qualifier to one place.,2018,,
ce14852,redesigned the Mesh  MeshBase  BoundaryMesh layout.  Moved most things into the MeshBase.  Working on parallelizing the mesh.  Will need to move boundary node information from being tied to a node number to a node pointer  more like the elements.,2018,,
48b9f59,PerfLog optionally takes subheaders for the events,2018,,
a49c2a6,PerfLog optionally takes subheaders for the events,2018,,
c907dc4,build fixes for xlC,2018,,
b978e87,build fixes for xlC,2018,,
0414a99,nada,2018,,
f0b4b84,changed boundary node information to be tied to node addresses  not node numbers.  This will facilitate renumbering nodes and elements without breaking the boundary conditions,2018,,
cd91eb0,boundary conditions are tied to pointers now  not numbers.  This allows nodes and elements to be renumbered without messing up the boundary conditions,2018,,
9e8ec26,changed all internal performance logging to be based on macros defined in mesh_common.h.  This eliminates _any_ overhead with --disable-perflog (the default).,2018,,
9cd115b,debugging InfFE,2018,,
0d6ac2b,replaced reinterpret_cast with dynamic_cast,2018,,
d4eb974,Elem::level() now exists when configured with --disable-amr  and simply returns 0. Fix for building with --disable-reference-counting. reference_counter.h still needs to #include <string>,2018,,
1e63074,changed definition of reference prism (again),2018,,
0e528c8,The DenseMatrix<T> and DenseSubMatrix<T> now come from a common base class  DenseMatrixBase<T>.  The base class provides some common functionality for both classes to reduce the overall code length.  Note that the transpose() member cannot move up into the base class because asking for the transpose entries of a submatrix does not make sense  i.e. the transpose entry of its parent is not in general available in the submatrix.  Also added is a common DenseVectorBase base class for both DenseVector and DenseSubVector.,2018,,
129bf30,Tightened up the definitions of the DenseVector<T> and the DenseSubVector<T>.  Also added .C files of the same name so that the objects are explicitly instantiated and compiled.,2018,,
ce10506,Added a here() stmt. for debugging.,2018,,
2d03e69,fixed broken assert,2018,,
7da3a7c,fixed a bug in the DofObject that tried to delete a NULL pointer when clearing an object for which no variables were allocated.  Also changed two references to copys in the DenseMatrix multiplication,2018,,
f4dd9fc,visual bits  will update infinite elements to the new & clearer refine() scheme soon  this will also include prisms,2018,,
eb96c44,"- consolidated infinite elements to match up with the new & neat   Elem::refine() style - fixed bug in MeshBase::build_inf_elem() which only occured   with higher-order elements - fixed (sometimes-erratic) behavior of Elem::n_nodes() by   shifting it all the way down to where n_nodes() is truly   unique - added convenient way to automatically determine origin   in meshtool - fixed some documentation  like the ""delete pointer""  where   actually an AutoPtr already takes care of",2018,,
1df6317,templated EquationSystems for the systems to handle  done it using static_casts  since i _really_ did not find a way to use T_sys instead of SystemBase  see equation_systems.C -- help certainly appreciated  i think there _should_ be some better way  avoiding the casts...,2018,,
11eb1c5,thanks to Steffen: fixed a wrong shift pattern in Legendre polynomials for infinite elements,2018,,
a2e7eeb,portability fixes for HP,2018,,
48627a9,Added the typename identifier in the EquationSystems source file.  Fixed a bug in the add function for complex numbers in the DenseMatrixBase class.,2018,,
0f917b4,cleaned up some TODO: - thanks John  the complex output of EqnSystems now also exists.   anybody please feel free to optimize it  but as far as i got it    that's all i can do with xdr. - PetscVector::localize() and localize_to_one() now do not use   MPIU_SCALAR any more  couldn't get this running.  Current   implementation works  but if anybody finds something better    please improve. - beautified EqnSystems output for infinite elements - removed outdated TODOs,2018,,
d05659b,cleaned up some TODO: - thanks John  the complex output of EqnSystems now also exists.   anybody please feel free to optimize it  but as far as i got it    that's all i can do with xdr. - PetscVector::localize() and localize_to_one() now do not use   MPIU_SCALAR any more  couldn't get this running.  Current   implementation works  but if anybody finds something better    please improve. - beautified EqnSystems output for infinite elements - removed outdated TODOs,2018,,
030c33c,discontinue efforts to get PETSc<complex> on HP running  resort to Laspack. Even PETSc maintenance does not use HP anymore... --- Am i the only one to be damned to use an HP compute server??? ---,2018,,
49cba51,Minor fixes for compiling with --enable-perflog.  Fixed a problem with dense matrix multiplication  showed up with constraint matrices.,2018,,
22b4c8f,oops... forgot to check this one in,2018,,
7ef07af,SGI fixes,2018,,
de9b430,added support for multiple (possibly parallel) matrices & vectors  as suggested by Ben  keep them in SystemBase  since they incur almost no overhead when not used. will update FrequencySystem soon to use this new feature,2018,,
bc4baa6,changed the condense() member to take a DenseVector  added a get_mesh() member to the SystemBase,2018,,
5982148.0,SystemBase::n_vars() no longer asserts that the system has variables  so it will return 0 for a system in which no variables have been defined.,2018,,
e652cfb,fixed a bug in the nodes_to_elem_map computation,2018,,
d311cec,- fixed SystemBase handling of multiple matrices & vectors for Laspack - fixed FrequencySystem to support either fast solution or solution of large   frequency-dependent linear systems (complex)  updated ex7 accordingly - added axpy for sparse matrices,2018,,
7141534.0,moved the #ifdefs in ex7 to work with real numbers.  changed the number of CVS diffs generated by cvs2html from 3 to 2.  The creation time was getting ridiculous!,2018,,
952fcb9,made PetscMatrix::add inline,2018,,
a9c7bd2,adding backbone of compare.cc. Will implement the specializations for the two systemtypes once i modified the EquationSystems output,2018,,
28d0366,- compare.cc now runs fine  with option -q helpful for scripted testing - in the course of making compare.cc added compare() functionality   to some classes - added the ThinSystem which implements the minimum necessities for   systems  acts as a lean alternative to GeneralSystem,2018,,
b30afa3,Added an add_vector function to NumericVector and derived classes,2018,,
4469b3b,Changed the iterative solver stopping test with PETSc to use default values for atol and divergence tests,2018,,
d43e133,actually  just wanted PerfLog output with the old gcc... ended up in introducing two wrapper classes for the broken fstream and stringstream as a side-effect  the (ASCII) output  like .xda and .dat is now uniform for the two gcc's i tested.,2018,,
e98b38d,"fixes for HP  of which this one is a curiosity  i'd say: - aCC definitely dislikes names of function/method parameters starting   with an underscore ""_""  like what i first did in SparseMatrix etc...  -)",2018,,
5425863.0,fixed a printing problem in PerfLog  an uninitialized variable in laspack,2018,,
eebc6d8,rework the OFStream and OStringStream again because of  guess what  HP aCC  had to resort to preprocessor macros.,2018,,
ad52060,documentation,2018,,
3ba8712,This commit was manufactured by cvs2svn to create tag 'libmesh-0_3_3'.,2018,,
16f5bb8,Fix another copy/paste bug similar to the one in #1620.,2018,,
a34bd26,Update automake version number to 1.3.0-rc2.,2018,,
fcd77d5,Run bootstrap.,2018,,
34b9711,Better LibMeshInit comments,2018,,
f2ff48a,DofMapTest: testCyclicConstraintDetection() requires exceptions.,2018,,
b60f974,ExodusII_IO: Update 'dummy' function definitions.,2018,,
b5ac418,threads.m4: Only error if user requested TBB and it wasn't available.,2018,,
8290eea,adjoints_ex1: This example requires --enable-exceptions,2018,,
3c849a8,LIBMESH_BROKEN_IOSTREAM no longer exists.,2018,,
7d84177,Run bootstrap.,2018,,
ad63c37,initialize on an initialized vector now works by resizing it,2018,,
8eeb623,do not set the element refinement flag to DO_NOTHING mmediately after refinement.  Keep it around for the solution projection,2018,,
759847c,changed the DofMap to use iterators instead of direct access to the elements and nodes,2018,,
e5346bf,added preliminary solution projection support.  This was quite painful because of an unforseen bug in the Point-to-Node assignment operator that is now fixed,2018,,
b88cab1,added maintain_level_one as an optional parameter to MeshRefinement::refine_and_coarsen_elements().  This allows the refinement schemes to violate level-1 restrictions if requested by the user.,2018,,
d150839,made the Point::size_sq() member public as suggested by Mike Anderson.  There was no real reason to have it private.,2018,,
548378b,added libMesh::default_solver_package().  This allows all the solver-related classes to use default parameters for the SolverInterface and still switch via command-line arguments,2018,,
8f6d71c,added a r/w access member to the quadrature base class,2018,,
624224.0,This commit was manufactured by cvs2svn to create branch 'libmesh-devel'.,2018,,
44deca9,added the NumericVector<>::clone() member for easy copying of numeric vectors,2018,,
7ee0486,refactoring EquationSystems & SystemBase classes,2018,,
db9b458,refactoring EquationSystems & SystemBase classes,2018,,
3e5894a,added XdrMode enum in a separate file,2018,,
793ce72,refactoring EquationSystems and the System classes,2018,,
336d3fb,NewmarkSystem now works,2018,,
4c07b93,fixed all the examples except for ex6 & ex7.  Need to add the FrequencySystem,2018,,
648eb2e,fixed the FrequencySystem.  All systems have been reimplemented.  All the examples work,2018,,
7722d2f,added EquationSystems::additional_data stuff  fixed ex4 documentation  cleaned up the systems,2018,,
c680689,fixed a syntax error that caused a segfault with icc,2018,,
049e4b3,added the DataMap object,2018,,
fffaebf,minor changes to the DataMap,2018,,
7f50284,reordered multiple-inheritance to work around icc bug,2018,,
5a0a293,added a DataMap to the EquationSystems object,2018,,
e4857da,Added some small classes  mainly focused at ease of every-day use  no big number-crunching things:,2018,,
8fbf61d,"already fixed the first ""bug""",2018,,
ad81842,This commit was manufactured by cvs2svn to create branch 'libmesh-devel'.,2018,,
d93cd2a,fixed a bug with the SystemBase::reinit() that only occured with --enable-complex,2018,,
86e9799,reworked ex6,2018,,
3fbd103,reworked the project_vector to be more efficient for Lagrange elements.  Changed the corresponding calls in reinit().  amr.cc now tests the projection stuff.,2018,,
3af1718,added asserts in xdrIO.C to make sure the input buffer is still good in the case of reading from an ASCII file,2018,,
32652d6,sync with HEAD tree,2018,,
916ee1d,changed static to dynamic casts in the point locator and functions.  Changed ex6 to work with the new equation systems,2018,,
f70398b,Minor change to the mesh base class.  The ability to create a vector of 1s and 0s corresponding to nodes on and off the boundary respectively has been placed in the private member function find_boundary_nodes().  This functionality was originally in the distort() member  but will be needed for mesh smoothing eventually too.,2018,,
124ae37,Added a class outline for the mesh smoothing base class as well as a concrete laplacian smoother class. Will add functionality hopefully soon  maybe after quals.,2018,,
7cd373b,MeshBase::build_inf_elem(...) now also returns optionally a list of elements and sides of the _interior_ boundary,2018,,
4f6855b,adding functionality for reading node- or element-associated data from file  also in non-libMesh format.  For this  class BoundaryData handles the mapping to and from external node/element labels and also holds the actual data.,2018,,
87d4634,This commit was manufactured by cvs2svn to create branch 'libmesh-devel'.,2018,,
69ac4ca,rearranged the function calls in the FunctionBase class so that input preceeds output in the function arguments.,2018,,
225bd8a,"ex6  the example for infinite elements  got promoted to the league of ""official"" examples.  Though it only solves an ""academic-style"" first time step of a time-dependent acoustic simulation  it is still ready for release  since the InfFE class is now stable.",2018,,
816cd64,forgot cleaning up & cvsignores,2018,,
929f882,made the MeshBase class reference counted  adding a flux jump error indicator,2018,,
682ed59,flux_jump indicator almost ready,2018,,
0ce90e6,sync with HEAD,2018,,
d08a035,"Sorry for this mess: class ""BoundaryData"" was only alive a short time  replaced by the much more intuitive ""MeshData""  a new member of MeshBase.",2018,,
a81ace2,This commit was manufactured by cvs2svn to create tag 'libmesh-0_4_0-pre'.,2018,,
cc58e3d,This commit was manufactured by cvs2svn to create branch 'libmesh-devel'.,2018,,
747ff49,removed the boundary_data stuff,2018,,
1799963.0,added the mesh_data stuff,2018,,
781c8a0,merged with HEAD,2018,,
4a888e2,merged libmesh_devel changes,2018,,
138f13e,fixed an error message on SGI CC,2018,,
04e33a8,fixed some warnings on cxx,2018,,
46fc9b0,fixed ifems for xlC compatibility,2018,,
ac89ace,More efficient SystemBase::reinit  flux_jump indicator should work but needs testing,2018,,
cc6a217,Adaptive mesh refinement seems to actually work!,2018,,
8abdd7b,added a minimum and maximum to the statistics vector.  These simply call the std::max_element (min_element  resp.) algorithms.,2018,,
106fd64,added methods to flag selected cells for coarsening & refinement,2018,,
8f4ad46,- cleaned up the UnvInterface to be much more readable  - added functionality to _write_ Universal files  too.,2018,,
2661c88,fixed for solving only for 1 frequency,2018,,
e13dd9a,added the ErrorEstimator::component_mask to select only a subset of the variables when calculating an error indicator,2018,,
53d4f6b,The array assign_elem_nodes was sized one too small for the Hex20.  Thanks icc!,2018,,
e3d9d5c,updated PETSc link,2018,,
9885b5f,fixes for --disable-amr and compiling with DIM=2,2018,,
315a6a7,building with DIM=2 now works again,2018,,
ec87af6,added --enable-2D-only configure option,2018,,
c63f788,added --enable-2D-only configure option,2018,,
3a4da49,recommend GNU make for HP (just like PETSc),2018,,
a5039d3,added refimement flagging strategies,2018,,
922e4d4,Added first versions of MeshData::read_unv and MeshData::write_unv. Will add some extensions regarding the header soon.,2018,,
16a2126,changhed operator == for points to require less flops,2018,,
b9593a1,fixed for Real data,2018,,
322e61c,Minor changes to the iterator functionality provided by the MeshBase and Elem classes.  Non-standard typedefs were removed as these constructs are avoided in all other parts of the code.  Also the use of std::make_pair() was implemented to clean up the syntax.  In the quadrature rules  several places which were foolishly taking pointers instead of references were changed.  None of these changes affect the user interface.,2018,,
c0c0c8b,fixed documentation of XdrMODE  fixed compare.cc for new EquationSystems  fixed bug in SystemBase::compare  fixed EquationSystems for handling FrequencySystem  added bool EquationSystems::parameter_exists() function  temporary work-around for ErrorEstimator & complex until Tuples come,2018,,
602faa3,with XdrMODE separated from the heavy-weight xdr_cxx.h  it can move into MeshData read/write methods,2018,,
3973ebb,added the TypeVector<T> as a compromise between the Tuples and a Point<T> class.  Changed the Elem::refine() algorithm to be much smarter (and faster) when looking for new nodes,2018,,
b8f1259,forgot to update the dependencies,2018,,
ccb2543,removed the last mod,2018,,
bf5f6a2,taught MeshBase::write_gmv() how to write INFPRISM6,2018,,
52be984,re-inlined some performance-critical methods in DofObject.  write_gmv() needed an #ifndef ENABLE_INFINITE_ELEMENTS.  Fix for building with --disable-optional.,2018,,
3d2223a,A trivial change sped up MeshBase::find_neighbors() by a factor of 2...  I feel silly,2018,,
188a762,added magnitude to write_gmv_binary when using complex numbers,2018,,
0e51ed1,added the Elem::key(s) member  will likely deprecate the Elem::key() member.  Mesh::find_neighbors() is WAY faster now,2018,,
dc7171d,optimization in Elem::key(s) for special elements,2018,,
134dfe5,added mean/standard deviation refinement flagging,2018,,
7e0211d,Metis partitioning should now work in parallel,2018,,
41fc52e,partitioning of adaptively refined meshes in parallel now works,2018,,
b20569f,fixed configure for gcc-3.3 and gcc-3.4,2018,,
05069a6,changed Point to RealGradient,2018,,
a47d8ad,this might not all work just this second  but I need to check it in since the CFDLab is going DOWN!,2018,,
a1057a2,parallel solution projection on refined meshes now works,2018,,
ca1ba55,fixed the space-filling curve to only operate on the active elements.  Changed MeshRefinement::uniformly_refine() to only call prepare_for_use() after all the refinement steps are taken,2018,,
62edca5,added configure tests for 64-bit compatibility  added logging to MeshRefinement.  meshtool now partitons last  in particular after refinement,2018,,
3b609a1,oops...  forgot to stop a log in the case of an early return,2018,,
3d4c660,64-bit fix for SGI,2018,,
61b221a,Re-worked the new localize member in the PetscVector.  Having trouble on refined & repartitioned meshes when the partitioning essentially flip-flops,2018,,
2fb76e0,systems were not calling clear() in their destructors.  Solving transient problems in parallel with AMR now works  I think...  YEAH!,2018,,
2e2c97f,added example 9  which shows how to use the TransientSystem to solve a linear convection-diffusion problem,2018,,
af74955,thanks to Steffen!  fixed a _fierce_ bug in InfFE.  For this to work i had to add yet another (but very small) purely virtual member to FEBase that before only existed in FE.,2018,,
e8bd058,changed HTML title,2018,,
64c8e74,optimizing routines with better choices for the STL containers,2018,,
dce102b,optimizations & code cleanup,2018,,
d111756,Now use the hashed containers for performance-critical functions on platforms where they are available,2018,,
36906ac,MeshRefinement messed up the coarsening flags when you dont want level-1 compliance  fixed...,2018,,
1548798.0,changed EquationSystems::add_system<T>() to return a reference to the new object  changed example 10 to use a hybrid mesh,2018,,
63263cb,- updated documentation of examples fixed one overly include in ex5  - enabled ex9 and ex10 now also for older (gcc 2.95) compilers using   the OStringStream.  Left the old code in //OLD CODE comments.,2018,,
abb5c25,cleand up some comments,2018,,
e75af0e,fixed the o_string_stream for when the compiler works,2018,,
8d0b57f,fixed StatisticsVector::variance to return the same value as the GSL and MATLAB,2018,,
f93e2a9,added example 11  which solves the linear Stokes system,2018,,
d71059d,- moved some private methods in MeshData to public - gmv support now outputs also InfPrism12,2018,,
68ae9ce,fixed a bug that only occurred when the infinite element origin is not given by (0 0 0),2018,,
014fc04,oops... simple loop reordering speeds up ex3 ex4  ex5 significantly,2018,,
bdb7b87,This commit was manufactured by cvs2svn to create tag 'libmesh-0_4_0'.,2018,,
1ee9b03,adding netcdf-4.2.1.1 source tree,2018,,
6c2d859,rebaseline netcdf generated files,2018,,
a289695,add a .gitignore here to support in-tree builds,2018,,
6716d4d,update .gitignore for make  make check,2018,,
e97660f,update .gitignore for make check,2018,,
25e2698,disable tests requiring network access,2018,,
5b0912f,symlinks for easier version management,2018,,
beaa35b,support building legacy netcdf (v3) and new (v4) from source,2018,,
d3949d4,adding exodus-5.22b source tree,2018,,
bbb517f,symlinks for easy version handling,2018,,
7103fb8,new Makefile.am for a new exodus,2018,,
bb0e5f8,allow for old (v5.09) and new (v5.22) exodus trees,2018,,
e65f789,new Makefile.in for a new exodus,2018,,
25d039c,get defaults working properly by specifying a version,2018,,
ed08e95,fix for --disable-optional,2018,,
504eed7,gotta figure out a way not to recurse into v4 for configuration when we do not want to build v4  but still have make dist work...,2018,,
0f77129,Removing deprecated OStringStream and OFStream classes.,2018,,
b848041,allow for --disable-nested to  uh  disable nesting,2018,,
60a60e7,case statement is clearer,2018,,
a33bd96,updating nemesis configuration,2018,,
fb53563,build new version of nemesis,2018,,
d94b0f0,support for --enable-nemesis=new,2018,,
ee78cfe,configure test for HDF5,2018,,
68afe25,more rigorous configuring,2018,,
e7961ef,more rigorous configuring,2018,,
bf037da,rebuild makefile after rebase conflict,2018,,
9d7303f,Merge pull request #40 from benkirk/exodus_refresh,2018,,
19650fa,bump version number,2018,,
84da4b4,prevent netcdf from running most of the testsuite (keep examples only) when doing make check,2018,,
977d77b,This shouldn't need more than 1 Newton step,2018,,
f610c46,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
90c8733,Fix for handling compiler vars with spaces,2018,,
ce703f9,Use VTK_LEGACY_REMOVE.  Thanks  cato-  for the idea.,2018,,
fe85fae,Standardizing spacing  formatting  indentation  etc.,2018,,
6bac31a,Hoist function calls out of loop conditionals.,2018,,
b277d0a,We are using a vtkDoubleArray  so don't convert the mesh point coordinates to single precision unnecessarily.,2018,,
243753e,Again  don't degrade to single precision when double is available.,2018,,
4f2b016,Making reading work  adding support for 2D and 1D element types.,2018,,
bc56be9,Fixes for our Epetra vector interface,2018,,
b597e16,Added point_curl method to FEMContext.,2018,,
7ec1a2c,Instantiate point_curl method.,2018,,
b596857,Merge pull request #41 from pbauman/point_curl,2018,,
6bede26,small optimization for dtk adapter,2018,,
bedeb9b,Use standard assertion,2018,,
e5b8928,Make sure to POSIX-sort new headers too,2018,,
0cebec1,Fix the direction on that example assertion...,2018,,
32c0667,Terse complex compatibility  moved assert,2018,,
077b63b,Save a few lines of code,2018,,
44a2360,default to new versions,2018,,
700dfe7,properly set CPPFLAGS,2018,,
d215b13,push optional includes/libs to subpackages,2018,,
fef9612,configure for recent changes,2018,,
ce75a9e,fix for older HDF5-1.8.x installations,2018,,
3c7dd28,look for Tpetra_config.h,2018,,
c07e91a,conditionally specify -DNOT_NETCFD4,2018,,
6fb0008,conditionally specify -DNOT_NETCFD4,2018,,
26dbb09,fix for new exodus when netcdf4 unavailable,2018,,
23b3460,fix for older HDF5 installations,2018,,
4695b09,increase parameter sizes for exodus,2018,,
fa394b9,more informative message when falling back to NetCDF v3 API,2018,,
44d5653,undo LIBS,2018,,
1176d7c,dos2unix was required on this file to get Solaris Studio to compile it!!,2018,,
392a51e,need automake 1.12 for properly bundling netcdf  it seems for Ubuntu-LTS,2018,,
fb4c1c5,fix for build_testsets false & in-tree builds,2018,,
59d8da4,updated .gitignore for in-tree builds,2018,,
5a05641,Fix multithreaded qoi derivative assembly,2018,,
944c3f9,do not commit BUILT_SOURCES,2018,,
9b92334,proper static linking by using NetCDFs pkg-config script,2018,,
530a642,igore BUILT_SOURCES,2018,,
c307b52,more robust tecplot binary blob handling for static libraries,2018,,
ea92d11,yet another tecplot symlink,2018,,
724de09,Changes in inf_fe_map.C for -Wshadow.,2018,,
5ef166f,Changes in condensed_eigen_system.C for -Wshadow.,2018,,
28dcc41,GetPot can accept more constness of arguments,2018,,
070515a,LibMeshInit can accept more argument constness,2018,,
285ebaa,Adding citations and webpage generation script.,2018,,
9644c5f,fallback to rpc/xdr.h when looking for xdr.,2018,,
1aa5d5f,trump --enable-petsc with --disable-mpi,2018,,
cfd23fa,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
e15fef7,use <rpc/xdr.h> when it is there,2018,,
1249c5d,more fine-grained fallback for --disable-mpi,2018,,
d03f946,adding eigen-3.1.2 to contrib,2018,,
13fa33d,add eigen-3.1.2 unsupported API,2018,,
e04db6d,Merge pull request #45 from benkirk/eigen,2018,,
e3bd55d,get contributed Eigen into build system,2018,,
4df7f73,Adding list of bibtex templates.,2018,,
917425b,Adding Octave scripts for making libmesh usage statistics plots.,2018,,
0a87dfb,Merge pull request #48 from dmcdougall/fix_ex4docs,2018,,
2821092.0,Remove superfluous comment.,2018,,
30979a2,fix comment,2018,,
58660f4,initial file infrastructure for supporting Eigen sparse linear solvers,2018,,
55b015f,working vector implementation,2018,,
a45d9e9,working vector implementation,2018,,
26e617b,intiial vector  partial implemenation,2018,,
fac4f53,EigenSparseVector initial implementation,2018,,
58e7066,Merge pull request #49 from friedmud/perf_log,2018,,
1f36987,EigenSparseMatrix initial implementation,2018,,
887fb9d,allow access to PerfData objects,2018,,
2771aa8,forgot to remove a libmesh_not_implemented(),2018,,
e7bad10,hackery to avoid MatType collision,2018,,
da6a476,initial linear solver support,2018,,
f25d185,fix for --enable-complex,2018,,
f99de5a,Merge pull request #50 from benkirk/eigen_solver_package,2018,,
2670578.0,leave laspack ahead of eigen until the latter implementation is more complete,2018,,
8fbff28,simpler fix for MatType debacle (#44),2018,,
19b1278,use AC_CHECK_HEADERS to make sure Eigen is usable,2018,,
1641936.0,Fix for ML/PETSc coupling debacle.,2018,,
7e0aebd,initial infrastructure to support radial basis functions as an alternative MeshfreeInterpolation scheme,2018,,
91495d5,Wendland Radial Basis Function,2018,,
ae8bcc1,Taking libmesh-specific comment out of eigen.m4,2018,,
0bf6d60,beginnings of Radial Basis Interpolation implementation,2018,,
a4ea4f2,Bugfix for enableeigen='' case,2018,,
2512591.0,Remember to re-bootstrap...,2018,,
2387a7e,Make sure we're using C++ to test for Eigen,2018,,
1ea8004,Compatibility with the API changes since petsc-3.3.0 release.,2018,,
93ebd35,initialize the bounding box,2018,,
725495.0,use normalized radius,2018,,
03e7f73,initial radial basis interpolation implementation,2018,,
edb9926,"Use automake's ""skipped test"" code when apropos",2018,,
8b7cec8,Less misleading Euler2Solver comment,2018,,
9f01631,Fix bug in NewtonSolver |du|/|u| printing,2018,,
96ca8dd,Clearer comments on _residual vs _time_derivative,2018,,
a7db13b,Fixes for disabling RTTI,2018,,
0514f89,Our netcdf subpackage may need detected HDF5 info,2018,,
45b61d8,Added some preprints from Feb 2013.,2018,,
c83c3b1,demo RBI with misc/ex8,2018,,
5545850.0,Updating statistics for Feb 2013.,2018,,
fe79f62,If we didn't find HDF5  unset HDF5 variables,2018,,
1754fef,LASPACK is OK,2018,,
cda31e1,preserve return code,2018,,
191e891,Fixing weird file permissions on contrib header files.,2018,,
88e0f46,Merging in a feature from PECOS petsc.m4,2018,,
055e8cf,prevnt using tbb:thread when TBB configuration has failed,2018,,
b7101bd,Adding ANL tech. report.,2018,,
2a15238,enable fractional powers for inverse distance interpolation,2018,,
5ddc836,Merge pull request #52 from friedmud/fractional_power,2018,,
c586aad,Fixing a few warnings,2018,,
129974.0,Merge pull request #53 from andrsd/warnings,2018,,
ce0b7cd,mark constructors as experimental,2018,,
1c51785,fix for --enable-complex,2018,,
d4bb399,Merge pull request #54 from benkirk/radial_basis,2018,,
de23017,accidentally introduced a C++11 construct,2018,,
f4100c1,accidentally introduced a C++11 construct  round 2,2018,,
ced4b74,silly std::cerr,2018,,
26a3a57,graceful exit,2018,,
65862c1,PGI does not like us bypassing our direct base class to import from a grandparent,2018,,
f55b093,More eigen.m4 flexibility,2018,,
2f856d8,Define another testable variable  HAVE_EIGEN,2018,,
d217e23,fix cut & paste bug that caused constraining DOFs to be multiply added.,2018,,
6b52e1d,initial infrastructure for user-specified element refinement selection,2018,,
c4c4c3b,Merge pull request #55 from benkirk/user_spec_refinement,2018,,
82361d2,implement roys suggestions,2018,,
c5298f1,must always make flags parallel consistent  even for serial meshes  if the user is allowed to do direct flagging,2018,,
41471cb,forgot to AC_SUBST a var,2018,,
7c7e008,Minimum version number test option for eigen.m4,2018,,
4cd29b4,Document and assert DoF/DofObject proc id identity,2018,,
9d27fae,Patch based on Manav Bhatia's type-mixing methods,2018,,
5d50ea9,Patch from Manav Bhatia: gmsh format 2.2 support,2018,,
eb81773,"Manav's proposed ""fix"" for UnsteadySolver AMR",2018,,
df040c9,Patch from Manav Bhatia: templated read datatypes,2018,,
0fe1181,Default template parameters to avoid API breakage,2018,,
3aa6dcb,Merge pull request #60 from permcody/parallel_fixes,2018,,
bc5c5af,Merge pull request #61 from roystgnr/manav_unsteady,2018,,
f83ab71,Adding standard type implementations for MPI blocking send/receive,2018,,
03f1f4c,Singletons for each reference element type.,2018,,
5a298fa,shell script to create static reference element strings from files.,2018,,
5481b81,include *.data in the source file list,2018,,
2381a25,reference element data,2018,,
9843afa,implement reference element data,2018,,
99c86ae,implements reading from static strings rather than file,2018,,
b8b8819,Correct fix for UnsteadySolver::reinit(),2018,,
306139b,fix generated file,2018,,
842a699,remove temporary cruft,2018,,
622869b,newline,2018,,
8af8278,Warn about inconsistent flags,2018,,
00fa0ee,Merge pull request #58 from roystgnr/manav_gmsh,2018,,
ff377e2,return a reference per Roys suggestion,2018,,
6624f32,Merge pull request #56 from roystgnr/dof_proc_id_check,2018,,
8fb2a3e,Fixes for external-to-libMesh getpot usage,2018,,
74d7a65,Merge pull request #66 from permcody/more_parallel_fixes,2018,,
47a20ac,Adding the non-blocking send/receive functions,2018,,
bf16a84,implement missing 1D reference elements,2018,,
3bdab67,predictable sorting,2018,,
8fbb2b2,implement remaining reference elements,2018,,
1656a2f,initial infrastruture to support #64 -- better singleton support,2018,,
080f130,Merge pull request #57 from roystgnr/manav_dense_numerics,2018,,
3cca949,Let's print a bit more from this quiet example,2018,,
db3b47f,reimplement RemoteElem derived from Singleton,2018,,
71fa9b9,mark RemoteElem constructor as private to force the create() usage,2018,,
dde02a2,Merge pull request #67 from benkirk/singletons,2018,,
a97e846,Merge pull request #59 from roystgnr/manav_templated_read,2018,,
39fb599,reimplement using Singleton,2018,,
b42537a,remove redundant test,2018,,
615cc3a,remove print statement,2018,,
8707a01,Merge pull request #68 from benkirk/singletons,2018,,
bc6a8b2,extend Dereks idea to initialization as well,2018,,
4f968af,Merge pull request #69 from friedmud/template_shims,2018,,
8b8dd34,add shims for newly templated functions instead of using default template arguments,2018,,
eda1aab,reimplement using Singleton::Setup,2018,,
78cc22a,Elem::reference_elem(),2018,,
c85ef0d,defer initialization until requested,2018,,
af82a7a,clarify comment,2018,,
1ec7cac,add the ability to override the radius for radial basis interpolation,2018,,
86ea3d9,Merge pull request #65 from roystgnr/getpot_updates,2018,,
876766.0,Merge pull request #63 from roystgnr/refinement_flag_warnings,2018,,
009544c,Merge pull request #62 from benkirk/reference_elem,2018,,
aac77e1,#include <sstream>,2018,,
a18fed1,implement ExodusII Fortran API (#35),2018,,
5064820.0,install the forbind/include/exodusII.inc as well,2018,,
86fae52,Updating statistics for March 2013.,2018,,
896bd8d,add beautify make rule to remove trailing whitespace.  Have not applied it to the source tree yet.,2018,,
4583624.0,optional communicator to mesh constructor.  defaults to CommWorld  not used ATM.,2018,,
6a352a6,run make beautify,2018,,
08f78db,run make beautify  propagated to generated files,2018,,
5d23136,make beautify,2018,,
6ba7aba,begin using per-object communicators in mesh classes,2018,,
79abd82,Merge pull request #72 from benkirk/remote_elem_undo,2018,,
7fabc7a,make sure Singleton::create() works properly  temporary fix if not to help debugging...,2018,,
dee0e7b,typo,2018,,
4b83930,libMesh::ParalellObject base class for all things that require their own communicator reference.,2018,,
30c0367,derive key data structures from ParallelObject,2018,,
96fe476,refactor DofMap as a ParallelObject,2018,,
b4b05c4,Adding Gunther_2012.  Moving Oden et al out of preprints.,2018,,
7ccb87e,refactor BoundaryInfo as a ParallelObject,2018,,
487ffae,refactor ExodusIO/NemesisIO as ParallelObjects,2018,,
dc1d823,refactor to use per-object decomp info,2018,,
650c270,refactor XdrIO as a ParallelObject,2018,,
36d6903,Merge pull request #73 from roystgnr/initialization_order_defiasco,2018,,
f07969c,refactor ExodusIO/NemesisIO as ParallelObjects,2018,,
d38e0ad,refactor MeshBase as a ParallelObject,2018,,
12e09be,refactor ParallelMesh as a ParallelObject,2018,,
7a6ec9a,refactor MeshCommunication with ParallelObject  and fallout,2018,,
3ef65be,refactor partitioning,2018,,
0fcdcb8,refactor MeshTools,2018,,
6180daf,Fix the static initialization order fiasco,2018,,
bcb7ede,Added Kalashnikova WCCM reference.,2018,,
987c70f,clarify comment,2018,,
2430450.0,Fix cut-n-paste typo,2018,,
9e48d52,refactor MeshRefinement as a ParallelObject,2018,,
64d6250,refactor MeshRefinement as a ParallelObject,2018,,
a15d0a7,refactor misc mesh-related classes as ParallelObjects,2018,,
aece01b,refactor EquationSystems  System  and friends as ParallelObjects,2018,,
95b1686,refactor reduced basis construction as ParallelObjects,2018,,
342bbbe,refactor miscellaneous mesh functions,2018,,
4b888fc,refactor miscellaneous mesh I/O functions,2018,,
acf1ad1,refactor CondensedEigenSystem as ParallelObjects,2018,,
3fd1458,miscellaneous fixes from the richer optional dependency stack I have on my mac,2018,,
b2116e3,petsc vector compiles,2018,,
1aa7e04,laspack vector communicated,2018,,
64d5a28,epetra vector compiling,2018,,
577f241,eigen and distributed vectors communicated,2018,,
006906b,when calling NumericVector::build pass in the communicator so the vectors get created properly,2018,,
e2f78ea,make sure that everywhere a petsc vector is created a comm gets passed in,2018,,
fe9229b,fix up places where we make epetra vectors,2018,,
198de91,temporary fix for Slepc until the matrices are ParallelObjects,2018,,
a7f4ad7,need an assignment operator.  Just assert that assignment is a no-op since we cannot redefine our communicator reference.,2018,,
0f7c182,first pass refactoring SparseMatrix and friends as ParallelObjects - still need to address SparseShellMatrix<>,2018,,
e4c7599,fixed some misses,2018,,
1ebd26a,fixed some misses,2018,,
40be2bd,removed old cruf,2018,,
0b02826,require a communicator  and fallout,2018,,
7d0a661,require communicators,2018,,
9a9f4e0,use our size,2018,,
2c20ff8,ErrorEstimator is now a ParallelObject,2018,,
1316f9c,refactor RBEvaluation as ParallelObject,2018,,
e419974,refactor Preconditioners as ParallelObject,2018,,
37d4e34,misc other fixes,2018,,
2c1e982,refactor LinearSolvers as ParallelObjects  misc other too,2018,,
90368c8,Adding a FakeCommunicator class,2018,,
ccb764f,Adding a FakeCommunicator class,2018,,
12ff376,Add --enable-default-comm-world argument,2018,,
5fbca56,Just move tiny FakeCommunicator into parallel.h,2018,,
68abf15,Just move tiny FakeCommunicator into parallel.h,2018,,
26400.0,restore default constructor argument,2018,,
f30618f,SolutionTransfer as ParallelObject,2018,,
74ab676,Communicator_World -> this->communicator() fixes,2018,,
60aa807,Add missing header for START_/STOP_LOG,2018,,
6a3b0d4,perflog isn't in libmesh.h anymore,2018,,
1a2aaa4,Implement DISABLE_COMM_WORLD,2018,,
8abb413,misc refactoring,2018,,
83bc6ab,Bugfixes for the enable-default-comm-world case,2018,,
418aa90,fix inconsistent comms,2018,,
bc4c975,Fix some doxygen comment mistakes,2018,,
a50c70c,checkpoint the days work,2018,,
69100ec,Merge pull request #75 from dmcdougall/fix_docs,2018,,
c99b851,refactor EigenSolver<> as ParallelObject,2018,,
2e7f44a,misc fixes,2018,,
bd6bf5a,misc fixes,2018,,
472494f,missed one...,2018,,
0623ee4,iterators - whew!,2018,,
96bef19,libmesh_parallel_only(),2018,,
03b6ff9,code compiles without parallel_only(),2018,,
b71ea07,remove libMesh::n_processors() and libMesh::processor_id() from default function arguments,2018,,
8dc243b,oops - didnt mean to commit temporary removal of parallel_only(),2018,,
d7e2e09,clarify comment,2018,,
670d422,temporary commit.  the entire library compiles without default constructors.  will begin reimplementing defaults until examples work.,2018,,
c4e5525,restore NumericVector<>::build() default argument,2018,,
40cb759,fix for SLEPc config,2018,,
844bbb7,naming uniformity,2018,,
a86cb5f,naming uniformity,2018,,
81f700b,working to find minimal required default constructors for examples,2018,,
46024ee,working to find minimal required default constructors for examples,2018,,
ec31e89,use local communicator,2018,,
971bdd4,working to find minimal required default constructors for examples,2018,,
4d1f0bc,working to find minimal required default constructors for examples,2018,,
e7817a4,missed some default constructors,2018,,
2e577fd,working to find minimal required default constructors for examples,2018,,
3f8fe0c,working to find minimal required default constructors for examples,2018,,
738b79c,working to find minimal required default constructors for examples,2018,,
e9601cd,working to find minimal required default constructors for examples,2018,,
4d78330,fix for opt mode,2018,,
3ab18c1,One line bug fix for CondensedEigenSystem from Shiyuan Gu,2018,,
675d6bc,Merge pull request #77 from permcody/parallel,2018,,
1dc52ab,Initial implementation of broadcasting vector of strings and map containing strings,2018,,
6aa967e,Broadcast strings with the mesh,2018,,
b10df29,Merge pull request #3 from friedmud/comm_dtk_fix,2018,,
58ca137,fixup dtk with new communicators,2018,,
4141fc6,Merge pull request #76 from benkirk/communicators,2018,,
663e35f,fix for rebase,2018,,
b37a9a4,Use explicit init.comm in examples,2018,,
bd89181,Fixing missing oprof mode in Make.common,2018,,
81cf4ba,ErrorEstimator backwards compatibility fix,2018,,
933b960,Fix atavism,2018,,
9f6781e,examples fix for --disable-default-comm-world,2018,,
cabf134,Fix another CommWorld-using example,2018,,
4bf6877,Fix accidental omission of fem_system_ex2 Mesh dim,2018,,
383219c,Fix PetscNonlinearSolver for non-default comm,2018,,
76f0428,Example SumShellMatrix creation should use a comm,2018,,
e9a3a7f,Add communicator for miscellaneous_ex6 SerialMesh,2018,,
1a7d32c,miscellaneous_ex7 --disable-default-comm-world fix,2018,,
28a1d98,Merge pull request #82 from roystgnr/petsc_commworld_fix,2018,,
a0f26ea,Merge pull request #80 from permcody/make_common_fix,2018,,
227f0fb,Merge pull request #83 from benkirk/fix_nompi,2018,,
21e8478,Merge pull request #70 from benkirk/exodus_fortran,2018,,
29eb898,fix for --disable-optional,2018,,
1f79b58,Merge pull request #81 from roystgnr/error_estimator_compat,2018,,
742bcfd,For --disable-mpi  we define COMM_WORLD as an int in libmesh_common.h  where for chicken-and-egg reasons it is difficult to include all of parallel.h.  Correspondingly  later things freak when trying to construct a Parallel::communicator from an int  as that constructor is not defined.  This implements that constructor.,2018,,
2425403.0,Remove now-unnecessary #include,2018,,
d35058a,reduced_basis --disable-default-comm-world fixes,2018,,
81ce5ab,Optionally disable default CommWorld args,2018,,
f479807,Merge pull request #79 from roystgnr/examples_fixes,2018,,
c3b99de,Add and use LibMeshInit::communicator() accessor,2018,,
fd41d47,Add LIBMESH_CAN_DEFAULT_TO_COMMWORLD macro,2018,,
593141c,The new Mesh constuctors take communicator& first,2018,,
7cd7a82,Missed a couple Mesh creations in previous commit,2018,,
f15e97b,Reorder one more communicator argument,2018,,
27b9e3a,Fix bugs caught by disable-default-comm-world,2018,,
97001cf,Make apps disable-default-comm-world compatible,2018,,
d5d29fb,miscellaneous_ex8 constructor API compatibility,2018,,
c112ea2,Merge pull request #85 from roystgnr/disable_default_args,2018,,
a839508,Minor documentation fix,2018,,
f2e71e5,add CommWorld status to config_summary.m4,2018,,
f30e914,Merge pull request #86 from benkirk/remove_global_parallel,2018,,
23f8832,Moderate improvement/reordering of verbose print statements.,2018,,
8f586b2,Generalize stitch meshes to still do stitching if there are multiple boundary IDs on a side.,2018,,
b017c80,Refactor two copy-paste loops into 1.,2018,,
f1a02e1,explicitly disable e.g. Parallel::send() without CommWorld,2018,,
c0a9014,stitch_mesh now uses sorted arrays of points rather than an N^2 algorithm for matching points on the stitch surfaces.,2018,,
31bcb47,Merge pull request #87 from roystgnr/short_comm,2018,,
89d0841,If we don't dupe it  we don't free it,2018,,
f3198f5,F77 compiler detection bugfix,2018,,
61e2ae7,Propagate compiler.m4 change to configure,2018,,
f54cd36,Turn communicator() into comm(),2018,,
721d5c9,GMV name conflict fix for compilation with clang++,2018,,
a803e20,trivial communicator->comm change,2018,,
6d53a2c,Avoid deprecated API,2018,,
9b587e3,Fix assorted clang warnings,2018,,
9c4072a,switch default from tecplot binary bits to compile from source,2018,,
68715cd,automake will use CXXFLAGS when compiling  although our summary does not report what they are.  update that,2018,,
1d5b52a,generated file,2018,,
372761.0,Removing unecessary loops over the entire mesh and geometric searching. Speeds up stitch_meshes by orders of magnitude.,2018,,
96fc8b0,header prerequisites,2018,,
51b6d96,Fixing one more small issue with stitch_meshes  internal sidesets were not being copied over to the final  stitched-together mesh.,2018,,
713a249,As suggested by @dknez  passing the tol parameter down into the comparison objects used in stitch_meshes.,2018,,
d63ab8e,Merge pull request #89 from jwpeterson/stitch_mesh,2018,,
3bdc82e,coordinate offset for Exodus output,2018,,
914721b,Adding Opstal  Lee  Bhatia references.,2018,,
542490.0,whitespace-only commit for m4 cruft,2018,,
1cb9180,Merge pull request #90 from friedmud/exodus_offset,2018,,
e66b55a,mark coordinate offset as deprecated,2018,,
b9afb25,Test compiler features using our devel flags,2018,,
bf2b335,Fixes for petsc-without-MPI,2018,,
dec406e,Add string_to_enum specialization,2018,,
6ab4487,Use enum_to_string when printing SolverTypes,2018,,
f220599,Disable a few examples with Eigen/Trilinos,2018,,
2dd416d,Missed a enum_to_string specialization,2018,,
37a8f08,And a string_to_enum specialization,2018,,
0e5752c,Don't forget the #include for that enum,2018,,
1a8eae7,Examples must init libMesh *before* using our APIs,2018,,
6f37207,"Use recursive $(MAKE) in ""make doc""",2018,,
04d038b,Propagate Makefile.am change through bootstrap,2018,,
2e4cf36,"""make doc"" from best examples METHOD available",2018,,
3076803.0,Merge pull request #93 from roystgnr/make_doc_fixes,2018,,
7ae9817,refresh eigen to 3.1.3,2018,,
9682fd4,update symlink,2018,,
de73930,remove eigen 3.1.2,2018,,
8642579.0,generated file,2018,,
8239d27,include unsupported/Eigen,2018,,
41e9331,Merge pull request #95 from benkirk/eigen_refresh,2018,,
364f52b,Actually tell the user what nodeset/sideset name did not exist before erroring out.,2018,,
abd31dd,Fix for uninitialized/leaking EpetraVector::_map,2018,,
b8af5de,Make sure to include the right multimap header,2018,,
42c0ccb,test_headers with libMesh compiler options,2018,,
ed4b583,Propagate test_headers change through bootstrap,2018,,
1e567bd,properly handle the XCode (no Fortran anywhere) case,2018,,
a550be9,Fixing documentation in UnstructuredMesh::write().,2018,,
13a577f,Ignore more output files from examples,2018,,
fe1def5,Upgrade version number to 0.9.1,2018,,
81b6099,Adding 0.9.0->0.9.1 changelog to NEWS,2018,,
611f041,Incorporate Ben's changelog suggestions,2018,,
62f366b,Added adjoints_ex5 doc  updating others,2018,,
8df377d,"Not every node of ""this_mesh"" needs to be stitched.",2018,,
81a3c77,Need to do one final comparison for fuzzy_binary_find.,2018,,
bfe3e4e,Adding version of Utility::binary_find() that takes a custom comparison object.,2018,,
48864c9,Use TOLERANCE while sorting the points  this tolerance is independent of the point matching tolerance asked for by the user.,2018,,
e0c5496,Switching to relative tolerance check (relative to the smallest edge length on the surfaces being stitched) in stitch_meshes().,2018,,
f798401,Update NEWS file for 0.9.5 release.,2018,,
12250cd,Remove outdated  deprecated classes.,2018,,
ee7f2c8,Update Makefile.am's,2018,,
e4244d9,Remove quadrature_rules.h from introduction_ex5.,2018,,
681ac62,Update meaning of MeshBase::spatial_dimension().,2018,,
91f62f3,Revert recent changes to system_projection.C,2018,,
dc8574b,Declare mutex only when threads are available,2018,,
4833e2f,Use libmesh-independent file error macro,2018,,
f208e8c,Make getpot disable mutexes when libmesh is absent,2018,,
40b4c42,Merge pull request #777 from dmcdougall/fix_getpot_mutex,2018,,
d453b81,Run bootstrap.,2018,,
7c0e763,Fix include.,2018,,
5955948,Merge pull request #778 from libMesh/updates_from_release,2018,,
6e58004,Merge pull request #779 from svallaghe/master,2018,,
24fd62e,Set #defines if PETSc is built with SuperLU_dist and/or MUMPS support.,2018,,
3149c7a,Run bootstrap.,2018,,
3c7cf42,Update LOC count for January 2016.,2018,,
286862f,Fix deprecation warning in unit tests.,2018,,
4c64b1b,Deprecate PointLocatorList.,2018,,
ea7c42a,Fix double leading underscore include guards.,2018,,
a35c6af,Fix a few more double leading underscores.,2018,,
676078b,Merge pull request #780 from jwpeterson/petsc_m4,2018,,
0d7d1a3,Merge pull request #781 from jwpeterson/face_level_mismatch,2018,,
0c93ef1,Avoid using double leading underscore preprocessor macro names.,2018,,
0849b86,Merge pull request #782 from jwpeterson/deprecate_point_locator_list,2018,,
8b3d941,Fix typo.,2018,,
59b4d49,Use libmesh_deprecated() macro.,2018,,
c010d9e,Update citations.,2018,,
1d19b76,copying element subdomain ids when converting triangular mesh for subdivision elements,2018,,
f38ad6f,Remove overzealous assertions,2018,,
2b102ff,Make meshplot solution file optional,2018,,
cd139a1,Merge pull request #783 from jwpeterson/libmesh_date,2018,,
501a432,Run contrib/bin/reindent.sh on examples after fixing spacing.,2018,,
78ba316,Cosmetic changes in examples/adaptivity.,2018,,
06b02de,Cosmetic changes in examples/adjoints.,2018,,
5cf5c77,Cosmetic changes in examples/eigenproblems.,2018,,
d959638,Cosmetic changes in examples/fem_system.,2018,,
3bc3cf7,Cosmetic changes in examples/introduction.,2018,,
9c93641,Cosmetic changes in examples/miscellaneous.,2018,,
3613b41,Cosmetic changes in examples/optimization.,2018,,
b8b2112,Cosmetic changes in examples/reduced_basis.,2018,,
2ead1a7,Cosmetic changes in examples/solution_transfer.,2018,,
d693a1c,Cosmetic changes in examples/subdomains.,2018,,
bc42295,Cosmetic changes in examples/systems_of_equations.,2018,,
332c271,Cosmetic changes in examples/transient.,2018,,
fe8e9f5,Cosmetic changes in examples/vector_fe.,2018,,
4.96E+41,Generalize build_cube(...  gauss_lobatto_grid=true),2018,,
637224f,Update citations.,2018,,
d326eb1,Update traffic.,2018,,
ca729e4,Merge pull request #785 from jwpeterson/gauss_lobatto,2018,,
c6a8f60,Merge pull request #786 from jwpeterson/add_space_examples,2018,,
110d909,Fix memory leak in vector_fe_ex{2 3 4},2018,,
f36a810,ExactSolution::attach_exact_{values derivs} can take const refs.,2018,,
9c184ed,Fix postcheck function in misc_ex3.,2018,,
a2db298,Update copyright notice for 2016.,2018,,
a5fc828,Merge pull request #787 from jwpeterson/fix_memory_leak,2018,,
57119b1,Merge pull request #788 from jwpeterson/misc_ex3,2018,,
dc53c48,Add EigenSparseMatrix::l1_norm()  linfty_norm().,2018,,
8.67E+68,Merge pull request #789 from jwpeterson/eigen_norm,2018,,
91700ef,meshplot xda/xdr if requested,2018,,
6c4da39,Use libmesh_error_msg in meshplot,2018,,
2822d3a,Fix obscure issue with errno_t not being defined.,2018,,
40ba9c0,Merge pull request #784 from roystgnr/mesh_only_plot,2018,,
8656ff9,Added Hendrik and Florian to the developers page.,2018,,
4087e4c,Made Hendrik and Florian students.,2018,,
97d6bb1,the nodal values are now averaged for plotting purposes.  Makes discontinuous solutions pretty when plotted at the nodes,2018,,
5e8c11d,updated configure system,2018,,
3e69d1e,updated configure system,2018,,
8afb0b8,updated configure system,2018,,
86694f9,updated configure system,2018,,
db55d56,updated configure system,2018,,
2c1f5b9,updated configure system,2018,,
5c57370,updated configure system,2018,,
8a60f1c,updated configure system,2018,,
c0d9a5d,updated configure system,2018,,
3d1fa1a,updated configure system,2018,,
60865f2,updated configure system,2018,,
9f7c4c4,updated configure system,2018,,
aa35f94,updated configure system,2018,,
1d61019,changed CONST to CONSTANT in the Order enum.  This caused a problem with LAM MPI,2018,,
95a3e72,made the configure --help output pretty,2018,,
686738c,updated Daniel.,2018,,
f918768,ignore Itanium-dependent files,2018,,
f890d68,added TetGen reader from Jens Oeser,2018,,
28bebe6,added a direct solver for dense systems in the DenseMatrix and DenseVector classes,2018,,
ec31854,Fixed Daniel.,2018,,
5822f4e,fixed some bugs contributed by Marc Buffat,2018,,
ae2271a,It is now possible to compute curvatures on element boundaries.  This information is available at the quadrature points via fe->get_curvatures().  This information is sometimes necessary for computing stresses on curved boundaries.  I have tested in in 3D (2D boundaries) and 2D (1D boundaries) and it appears to work.,2018,,
9d444f7,fixed a no-return statement condition,2018,,
4ee00d5,fixed a bug in the Plane class.  Thanks to Peter Kolb for this fix,2018,,
2bcd7c0,added capability in the EquationSystems to extract a discontinuous solution vector for plotting purposes,2018,,
d0f7d2d,fixed an off-by-one error in the UCD input,2018,,
d0b4dfd,parallelized the nodal solution construction.  This particularly effects the writing of discontinuous data averaged to the nodes,2018,,
112de30,Made the constructor protected to prevent the possibility of users constructing this class.  It is only used internally by the mesh.,2018,,
d9980c3,fixed for Scali MPI compatibility.  Apparently MPI_SUM is not always valid for char data types,2018,,
a309c4b,initial rewrite of Systems classes.  The new solver interface will be much more flexible for complicated system arrangements  i.e. 2 systems  one implicit  one explicit  or 2 implicit systems  one linear  one nonlinear  etc...  More documentation and discussion on the developers list to come,2018,,
e541d3c,Updated the doxygen input file to also document the files in the new solvers directories.,2018,,
9c6d3c4,Added a new set of shape functions based on integrated Legendre polynomials. The new FEFamily SZABAB is simply named after the corresponding reference by Szabo and Babuska. Class FE<_dim  SZABAB> is only available through the FEBase::build method. Currently the shapes are implemented up to seventh order in 2D. Since some users may not be interested in higher order shape functions (and we will add more of them in the future)  these shapes are only available when the library is compiled with option pfem enabled.,2018,,
d57285b,Added new set of shape functions. Currently implemented up to seventh order in 2D.,2018,,
64431a6,fixed a bug in the solution projection that caused all vectors to be projected as parallel  distributed vectors regardless of initial distribution.  This causes a problem when the current_local_solution (a local vector) was projected  since it was improperly projected into a parallel vector.  I introduced this bug about a week ago in the system rewrite.,2018,,
c4fb38a,Added some links to TACC press release  USNCCM  and SAVIAC web sites.,2018,,
ee99226,added another build_nodes_to_elem member that gets pointers to all the elements connected to a node,2018,,
47f3373,Changed 1D szabab shapes to some nicer expressions1D szabab shapes to some nicer expressions.,2018,,
af1a50e,fixes for the systems,2018,,
0ec7bba,fix for AMR when variables are approximated by different orders (e.g. Taylor-Hood elements for incompressible flows,2018,,
022ffc1,removed a stray here(),2018,,
0eb9787,added the libmesh-config script for easy building.  Note that your make must understand the --no-print-directory flag,2018,,
0e4b5d1,configure no longer removes config.status  but distclean does,2018,,
66fc274,converted sqrt calls into constant parameters,2018,,
3d3b97c,optimizations for shape function calculations,2018,,
5f97a69,optimizations for shape function calculations,2018,,
4383734.0,Changed all instances of pow(x int) to pow<int>(x).  Those calls should all be inlined via template magic and be evaluated in O(1) time.,2018,,
540a955,Checked in example 13  a nonlinear example.,2018,,
d8be541,Added html documentation for example 13. We still need to figure out why some of the system include files are being omitted from the documentation.,2018,,
2d93b37,Had to include libmesh_common.h in utility.h so that it would pass the test_headers.sh script.,2018,,
0668f09,no need for Utility::swap() when std::swap() will do...  Also fixes for Metis and Parmetis for new compiler -I semantics,2018,,
7f62225,Changed 2D szabab shapes for TRI6 elements to nicer (Horner scheme) representations.,2018,,
ecb4561,code to look at the SFC in Tecplot format,2018,,
6be44ce,changed comment style so that it makes it into the documented source,2018,,
f55e387,changed 2D mapping to properly handle 2D manifolds in 3D space,2018,,
b354bc6,more efficient comparison function,2018,,
6d4878a,use leng=3,2018,,
2c8a402,changed INT  probably should remove?,2018,,
622e810,changed unsigned long to unsigned,2018,,
91575a2,only renumber the nodes if refinement has occured.  This should fix Bills grid2grid problem,2018,,
e6f8a24,do not try to build optional packages when they are disabled,2018,,
158ae41,the user must be able to extract a writeable node ptr to build elements by hand,2018,,
5ca4af4,This commit was manufactured by cvs2svn to create tag 'libmesh-0_4_2'.,2018,,
c8812b1,Update meaning of MeshBase::spatial_dimension().,2018,,
f97b0a4,Change operator<<(pair<Hilbert unique_id>) namespace,2018,,
c97c775,Revert recent changes to system_projection.C,2018,,
d936e6c,Merge pull request #771 from roystgnr/operator_namespace_change,2018,,
27678be,System::calculate_norm() now works with mixed-dimension meshes,2018,,
0141d2c,Merge pull request #776 from dknez/calculate_norm_mixed_dimension,2018,,
f244d17,Remove unused variable.,2018,,
40343a5,Added a new function in RBSystem to simplify adding outputs in the case that there is only one term in the affine expansion of the output.,2018,,
354ee36,Restore inadvertent deletion from last point_locator() bugfix,2018,,
3e47106,Tagging a 0.7.0.1 release with that last bug fix...,2018,,
1f1e96f,Fuentes and Kirk preprints become 2010 publications. Added Griffith preprint link.,2018,,
7b8ed73,Fix parse errors,2018,,
848e27d,Enhancing API for periodic boundaries,2018,,
c0c1646,Changed name of compute_a_posteriori_bounds to compute_max_error_bound and made it public,2018,,
68607f9,Add missing header,2018,,
ca5e481,"Fix ""make test_headers""",2018,,
64421c9,test_headers.sh shouldn't fail silently,2018,,
69df9fb,Destructor of Parallel::Request will no longer call MPI_Request_free.  This avoids unwanted freeing of requests when using an std::vector<Request>.  Rather  a new method Request::free() exists now to explicitly allow the user to free a request.,2018,,
ef19ddd,Adding libMesh 0.7.0.2 tag with Parallel::Request fix,2018,,
296d78f,Fix output filename,2018,,
823a4ac,Bugfix for send_list construction on adaptive meshes with extra_hanging_dofs elements,2018,,
1d2d2e2,Fixing ExodusII output for element numbering and sidesets in AMR meshes,2018,,
4e3b4fa,Bugfix for Real!=double case,2018,,
6dc407c,Added --enable-singleprecision and --enable-tripleprecision configure options,2018,,
fbf2f01,Add support for writing global variables to the mesh file,2018,,
05fbc7e,Use LIBMESH_ prefix for PRECISION macros now,2018,,
291eeef,Bugfix for --enable-singleprecision,2018,,
ab9eba7,Disable examples that don't work with single precision,2018,,
89270f5,Fixing elem_num_map for multiple subdomain cases,2018,,
cf65699,Allow keyword='' to parse correctly,2018,,
3cdd4e5,Bugfix for disabled ExodusII builds,2018,,
7b07a8a,Some (incomplete) fixes for --enable-tripleprecision,2018,,
539f053,Added clean_examples target for convenience,2018,,
fafb131,Bugfix for configure-time name conflict with mpich2,2018,,
8bd12a3,Creating libMesh 0.7.0.3 with the fix for the parallel AMR on Hierarchics bug,2018,,
bb7d541,Moved truth_outputs resizing in RBSystem to initialize_RB_system,2018,,
be0d72e,Fix unit tests for Real==float case,2018,,
b568f78,Set svn:ignore,2018,,
cf9de6e,We need a looser TOLERANCE with --enable-singleprecision to pass our quadrature unit tests,2018,,
606d8c5,add support for adaptive quadrature rules,2018,,
f40539b,Avoid accessing empty string,2018,,
b28a7f0,Adding optional matrices of variable weights to SystemNorm,2018,,
c67ccdf,Adding level 1 AMR support across periodic boundaries.,2018,,
3039f31,Adding an example from Cody to use/test PeriodicBoundaries as well as his new work on their interaction with MeshRefinement,2018,,
ca25299,Moved output dual norm calculations from initialize_RB_system into train_reduced_basis.,2018,,
9c3e157,Added flag in transient_rb_system to ensure that we only compute projection errors in truth_solve if the truth solve is called during train_reduced_basis. Otherwise this call is unnecessary.,2018,,
9f26933,Made RBThetaData::get_mu virtual,2018,,
b1bf747,Added support for subset solves.,2018,,
012da8b,newlines at end of file,2018,,
042e497,libmesh::out --> libMesh::out,2018,,
ea17330,Subset stuff didn't compile with PETSc < 3.0.0  fixed this now.,2018,,
1f824b5,Correcting example number in ex25 comments  disabling for non-PETSc builds,2018,,
de78757,Adding is_identity  set_off_diagonal_weight methods to SystemNorm,2018,,
1cbf111,Patch (mostly from Vikram) for AdjointResidualErrorEstimator evaluations using a matrix SystemNorm,2018,,
e78f56f,Set svn:ignore,2018,,
ebc41b6,Updated svn:ignore,2018,,
f8dcffc,Added non-virtual AnalyticFunction::clear(),2018,,
db93b17,Allow differing SLEPc/PETSc version numbers - that seems to be the default on Ubuntu right now!,2018,,
e901c78,Patch from Boyce Griffith to fix multiple BC ID I/O.,2018,,
1c27953,configuration fix from Erik Zeek for PETSc prefix (no PETSC_ARCH) case,2018,,
912c8b8,Patch from Boyce Griffith to fix various bugs with multiple BC ID cases.,2018,,
dfc54e1,Fix PointLocator for --enable-2D-only,2018,,
679cd41,Skip ex2 in 1D,2018,,
9cafd29,Minor comment clarification,2018,,
bad8782,Skip ex23 in 1D,2018,,
07737ec,--enable-1D-only bugfix,2018,,
c1fe7cc,Added --enable-1D-only configure option,2018,,
c0ee668,Updated svn:ignore,2018,,
10d53f2,Create php documentation directly in the doc dir,2018,,
a53d8cb,create_example_docs should be slightly more robust now,2018,,
d0abce8,Added examples_doc target,2018,,
61c826c,Updated documentation for our example programs,2018,,
685e8bd,Updated svn:ignore,2018,,
6f50a1f,"Make examples docs as part of ""make doc""",2018,,
0184a91,Tweaks to ex24,2018,,
e7e118d,More example docs updates,2018,,
3baa7a8,Support for outputting element variabes to exodus,2018,,
ba7b730,Added accessor for temporal_data member in TransientRBSystem.,2018,,
a1cff82,Bugfix for --disable-exodus,2018,,
5e0a4f6,Regenerated configure with updated comment,2018,,
fde3ccc,Fall back on double I/O when ExodusII and XDR binary won't support long double,2018,,
9b8ffe8,Periodic boundary conditions can work on a specified variable,2018,,
d8390b4,Removing forgotten debug print statement,2018,,
0bbc191,Adding accessor in plane class to return a planar point (position) of the plane,2018,,
d0c2ebd,Auto regenerated the list of publications.  Miscellaneous additions and status changes  including the first publication for 2011.,2018,,
8e3ff7b,Added OStreamProxy shallow copy constructor  removed a couple superfluous semicolons,2018,,
91c4654,Adding a few explicit default initializers to initializer lists,2018,,
a597ce5,"Bugfix from Aleksej Saushev for non-portable ""=="" in test",2018,,
6b28b18,Typo fix,2018,,
043d905,Bugfix for recent OStreamProxy change,2018,,
6c83aec,Fixed name demangling issue for Mac GCC users,2018,,
4e6e343,OStreamProxy: Added some more assignment operators,2018,,
8a9c972,Filling out Node initializer list,2018,,
064366d,PeriodicBoundary has virtual functions now  might as well add a virtual destructor for safety's sake,2018,,
3645891.0,Filling out Variable initialization list,2018,,
2fbfa43,More explicit initializations in constructors  return *this from an operator=,2018,,
5f32345,Fixing overzealous (in periodic boundaries case) assertion,2018,,
d696224,Reordering a structure slightly  adding explicit initializers to constructor,2018,,
d2fae1f,Moving some assignments to initializers for efficiency  adding some explicit initializers for making Weffc++ happy,2018,,
d1a1efc,Adding explicit default initializers,2018,,
87f3ff2,Added DofObject::operator=,2018,,
7ffb1d9,operator++ should return *this,2018,,
cbdb1db,Reordered a structure  added some explicit initializers,2018,,
f6c8b20,Adding explicit initializers,2018,,
bde6d5b,Added explicit initializers  fixed/completed copy/assignment methods,2018,,
9360000000000000.0,Support writing information records to the exodusii file,2018,,
fab1f57,add the ability for Partitioners to take element weights,2018,,
3901d57,Tell exodus about the number of active elements only,2018,,
a7857fe,Cleaning up a few warning messages,2018,,
bd9bcb6,"Added configure test for C99 ""restrict"" keyword support in C++ compilers.",2018,,
6c691f6,fixed a bug where subdomain restricted variables may not be completely numbered in parallel,2018,,
58c65ca,Fixing peroidic boundary conditions for selected variables,2018,,
a643da2,Fixing incorrect child vertex number for Hex elements - this is the source of the broken 3D AMR sidesets on Hex meshes,2018,,
8de1bde,Added adjoint-based-refinement example,2018,,
7983576.0,Update example comment,2018,,
4614c52,Added adjoint-based sensitivities example,2018,,
9c92f70,"Rename ""main.C"" in examples",2018,,
3493afd,set svn:ignore,2018,,
8aa5c87,Updated example docs,2018,,
03f7b2c,Adding new examples to documentation menus,2018,,
093dc2d,Tagging 0.7.0.4 release with Hex AMR boundary id fix,2018,,
b1700ae,fixed a bug in the LaspackVector assignment operator when the lhs was not initialized,2018,,
35ccea8,fixed a bug in the LaspackVector assignment operator when the lhs was not initialized,2018,,
270d674,documentation fix,2018,,
e55db4c,fixed a bug in the ExodusII triangle support,2018,,
b56d8c1,changed 2 to 2.  etc... for the hierarchic polynomials.  This was necessary for the Portland Group compiler.  There is still a linking problem,2018,,
6afa87b,added ParMETIS.  Need to actually code the partitioners.  Will do that soon.,2018,,
bb994fa,When linking with mpich  but NOT with petsc  made a small change to the library path in order to link with both -lmpich and -lpmpich  whereas before we just linked with -lmpich. The reason we need -lpmpich is that parmetis uses it I believe. Still need to make some changes to the parmetis Makefile in case both mpi and petsc are disabled.,2018,,
55687dd,Modified the configure scripts to automatically disable parmetis if both petsc and mpi were already disabled.  Also modified the parmetis Makefile to do nothing in case both petsc and mpi were both disabled.,2018,,
f215447,changed MPI configuration test to include the -I in the include variable.  This configuration should work well for MPICH.  Should we go to using mpiCC in the future?  I would rather not  but the MPI configuration section will need to be smarter...,2018,,
2ab7453,Completed the code for the LaplaceMeshSmoother class.  Note that this smoother makes no guarantee of being able to smooth grids on complex domains.  It implements the simplest possible algorithm for smoothing.,2018,,
293b983,Made the smooth() function pure virtual once again.,2018,,
775db36,changed not to !.  SGIs CC did not understand it...  Sorry John.  Maybe in the future?  It may be that a command line option fixes it  but I could not find anything in the manual page.  If you can find any information on the web we might be able to put it back in... Maybe you could ask Spencer?,2018,,
36f77a5,added fix to getpot.h for cygwin,2018,,
877da3f,"fixed funny bug: the PARMETIS_INCLUDE from PETSc's packages file could shadow the PARMETIS_INCLUDE from libMesh's Make.common... Perhaps the ""make"" I use is not the best  but at least this renamed variable does not hurt",2018,,
83e66cf,reworked the PointLocator structure.  PointLocator<T> disappeared  didn't make sense.  Instead  PointLocatorTree and PointLocatorList are there. But use PointLocatorList with CAUTION!  since this is primarily intended for locating the closest element  where the point may live in 3D  and the element  too  but the element is actually 2D (surface).  When applied to volumetric meshes (which is not truly intended)  it may happen that the centroid of an adjacent element is closer due to extremely distorted elements,2018,,
6e4f0e4,made MeshData and FrequencySystem a bit more usable,2018,,
43d5310,commented rho  c out,2018,,
a61f91c,Added class MeshDataUnv Header to access data specified at the beginning of a 2414 universal file dataset.,2018,,
ec5287e,the MeshData may now also take user-specified node/element data  not only reading from file.,2018,,
0706b72,hopefully final fix: a tricky call to SystemBase::clear() deleted EquationSystems parameters... Not desired when reading :-P,2018,,
39e016b,Added the magnitude of complex numbers when writing results in tecplot format format.,2018,,
faee615,yet another bugfix for MeshData: the good ol' 12.3456789D+01 issue  where the streams do not recognize the D as 10th-power... This fix is likely to be the last. :-P,2018,,
fe8f940,fixed the ::build_side() and ::side() for infinite cells.  the BoundaryMesh now works with infinite elements  too... yields cool pic's,2018,,
c84df91,moved the read_unv() and write_unv() methods from Mesh to MeshBase  so that a BoundaryMesh may now also be written as .unv,2018,,
92862bb,forgot to update the smart MeshBase::write(std::string) method,2018,,
79cdaee,fixed the MeshData to write a sensible header with the minimum info necessary for reading,2018,,
1078f9d,re-add the full MeshData support for xdr files...  This feature got lost with release of libMesh-0-4-0  now back again and working,2018,,
6370caa,Extended create_bounding_box to work for QuadTrees.,2018,,
d1d2eca,initial support for ParMETIS,2018,,
4c3504b,separated out functionality that will be repeated in the partition and repartition members,2018,,
ebeeb6e,fixed a bug in assigning an end iterator to the beginning of a container,2018,,
def48f1,Moved a templated inlined function out of the C file and into the h file.  Funny to note that this compiled on gcc but not on xlC.  The main problem I think is the instantiation of templated *functions* as opposed to classes.  xlC wouldnt instantiate them correctly unless they were in the header file.,2018,,
52d2d6a,When checking the state of an ifstream  it is not correct to simply check if its !bad().  This is because the bad bit is not set when the file does not exist.  Instead the failbit is set.  Therefore it is more correct to check if the stream is good() e.g. assert(in.good()) rather than !bad().,2018,,
177fccb,"- John's bugfix for xlC was also the cure for HP-UX.  Thanks a lot  John! - fixed minor complaints about the ""this->"" issue",2018,,
6f37c79,Added some comments regarding the use of the read_xdr_soln and read_xdr_soln_binary functions.,2018,,
9826e7e,no longer need template instantiations since the templated function has moved into a header file.,2018,,
d100bea,consolidated several repeated methods in the partitioning algorithms,2018,,
147f91b,added a bool that lets the user decide whether she wants to prepare_for_use directly after reading a mesh  or do it by herself.  This is particularly helpful for IFEM simulations in parallel  first read the mesh  then let _every_ node build the IFEMs  and _then_ distribute.,2018,,
9021b6c,overly cautious: too many asserts.  Now the slim() method works,2018,,
956b4f5,documentation,2018,,
8639bf6,"added the ""translate()"" method.  With this  nodal data stored in a MeshData can be translated to form that is suitable for the Mesh::write(...) methods  so that the nodal data can be visually inspected. Can translate either to the Mesh itself or to the BoundaryMesh",2018,,
0e1bf0e,added a fix for the Tecplot library incompatibilities on Redhat 9 machines,2018,,
6f305e8,documentation,2018,,
9eb82d8,reworked the MeshData interface to look similar to the other libMesh design like get_xyz() etc.  Also included some more debug tests for invalid data files,2018,,
8904edf,fixes for the FrequencySystem to work with only _one_ frequency-dependent matrix  instead of multiple frequency-independent matrices,2018,,
b6e9175,can now increase order of linear elements: added MeshBase::all_second_order()  tested for several  but not all elements.,2018,,
dca0a6d,fixed a dumb bug that added too many nodes that also gave me quite a headache with infinite elements.  Now this second_order converter works fine!,2018,,
7dda254,- extended the MeshData to compatible mode: when the  MeshData   was not active at mesh import time  one can still write   a Universal mesh  or read/write mesh data through the   compatibility mode.  However  be cautious with this mode    it uses the _current_ Mesh node and element ids - fixed MeshBase Universal support for Tet10,2018,,
08a74d6,documentation,2018,,
4899538.0,fix for PETSc 2.1.6 when variables are used in the packages file,2018,,
10ad7ea,removed graph matrix support.  This is no longer necessary unless Damien REALLY wants it  and it causes unnecessary includes,2018,,
c228d69,- fixed meshtool for missing matrix graph - added functionality to write the boundary as Universal mesh    but with node numbers of the corresponding volume mesh - some more asserts in the MeshData,2018,,
f57c2ca,added #include <algorithm> for std::sort,2018,,
cb0111b,some minor mod's to NewmarkSystem  and a fix.  matrices were assembled twice...,2018,,
ebae48d,the MeshData can now read also only a selected dataset 2414 (nodal/element data)  e.g. a .unv file that contains multiple load cases  one specific load case  identified through its label  can be selected,2018,,
9425cc7,reworked the user interface for building infinite elements and moved the build_inf_elem() methods to mesh_base_modification.C,2018,,
a070fc2,forgot...,2018,,
08af695,fixes for --disable-amr,2018,,
d95b923,oops  forgot this...,2018,,
c72e6ec,Universal files now write only the _active_ elements (in case you manually refined the mesh  so that you can write the refined only  without the leftover coarser elements),2018,,
be07969,changed the element flagging routines to exclude elements at the maximum allowable level of refinement from the statistics performed in the selection process,2018,,
fc52d4f,- thanks  John for the hint with the unsigned short int!  Reduced   mem requirements for the adjacent_vertices matrices of all higher-order   elements through converting to short int - reduced # of virtual fn's in Elem by one: the higher_order_equiv_elem()   or so got moved into a static member function of Elem.  This also enables   to choose whether one wants to convert quad4->quad8 or quad4->quad9   through a simple bool option in MeshBase::all_second_order(bool) - reduced repeated code in adjacent_vertices through moving these short   int matrices to Hex  Quad  Prism etc - fixed GMV support for higher-order Prisms (enuff debugging for today...  -),2018,,
b4ccc49,removed a here() statemenet,2018,,
d5dcda2,Fixed a bug in the node numbering of this reference element.,2018,,
c10a2f6,Commented out MeshRefinement friend.  We seem to be developing a continuing problem with making Elem a friend of many classes in order to get access to the build member.,2018,,
4b6c26d,Checked in the centroid partitioner.,2018,,
5283b16,Added the radial code for the centroid partitioner.,2018,,
c61805f,- minor fix to the logging behavior of the build_inf_elem() methods - MeshData can now also (for .unv files) transfer the _whole_ header   in one chunk  also tried to make the MeshData for .unv a bit more   idiot-proof -- i use it quite often right now,2018,,
3f7f7a4,documentation,2018,,
d02b42f,The partitioners no longer modify the subdomain_id of the elements.  I suppose this could be put back if desired  but subdomain_id really refers to material properties  etc  NOT partitions. Also wrote (well Ben wrote) code to generate a submesh from a parent mesh.  One way this is useful is if you want to say create a new mesh consisting only of active elements  you simply pass two active_elem_iterators to the routine and it does the rest.,2018,,
47da52c,Commented out print commands and made a warning only print in debug mode.,2018,,
0f4aa96,Removed an extra pair of braces which didnt make sense.,2018,,
cda314e,Converted static_cast<unsigned int>(-1) to libMesh::invalid_uint everywhere.  Not much less to type  but the meaning should be much more clear.,2018,,
404b8ad,upp'ed 1-dimensional gaussian quadrature order significantly  but have to admit that i _computed_ the points and weights with double precision  so i already cut off the 15th digit  but even the 14th may be inaccurate (but at least close)...,2018,,
e673628,Added tecplot macro files to the ignore list.,2018,,
30049a7,changed configure to check gcc version from newest to oldest.  This allows gcc-3.3.1 to be properly detected as a 3.3-series compiler instead of improperly detected as a 3.1-series compiler.,2018,,
751c05b,allow boundary condition inheritance,2018,,
ef26643,update build for Itanium,2018,,
839d995,changed operator(i j) in the DenseMatrix to be non-virtual.  This was causing a matrix assembly bottleneck  particularly on bad compilers.  ditto for the DenseVector operator(i).  The functionality is replaced in the base class with the virtual el(i j) and el(i)  which must be used when the old virtual behavior is expected.,2018,,
b683035,use long int instead of long long int on 64-bit machines,2018,,
5996515.0,added this->,2018,,
0c3e273,changed the LASPACK solvers to use GMRES and ILU by default,2018,,
09a9c14,changed datatype to avoid warnings on 64-bit architectures,2018,,
18bcb66,Changed Ke(i.j) back,2018,,
cd56295,LASPACK OKed for ex10,2018,,
13c7062,The Sphere can now transform from cartesian to spherical coordinates.,2018,,
0d67261,with the new nice Mesh::create_submesh() from Ben/John  there is no need any more for the active_elem_iterators in the .unv support. meshtool is now making sure that it only writes active elements through this new method,2018,,
5247afa,added ex12 that covers the MeshData features in detail,2018,,
c973861,forgot to add ex12 also to the calling Makefile,2018,,
abb4d39,Changed all copyright statements to include 2003.,2018,,
248c455,fixed .cvsignore for example 12,2018,,
ad2c257,compatibility fixes for IRIX,2018,,
3edfc70,throw an error and return an acceptable type in the case of failed switch statements,2018,,
4d1f064,throw an error and return an acceptable type in the case of failed switch statements,2018,,
4f55446,This commit was manufactured by cvs2svn to create tag 'libmesh-0_4_1-pre'.,2018,,
680e0f0,added missing return statements,2018,,
d460428,This commit was manufactured by cvs2svn to create tag 'libmesh-0_4_1-rc1'.,2018,,
642ce5b,added a comment,2018,,
a4da446,major fixes for HP-UX  the suckin' OS: - aCC cannot swap  as in elem.h - inserted some more this-> - finally reading .unv works -- but why? status report on file I/O capabilities: - reading .xda: no - reading .unv: yes - writing .gmv: yes - writing .unv MeshData: works  but reordered? - reading .unv MeshData: no?,2018,,
5120efe,doc fix,2018,,
01b2132,"finally! -- _FULL_ functionality  now also on HP-UX  my ""favorite"" OS...  fixed xda and unv file I/O",2018,,
92adec8,- reworked the MeshUnvInterface internals:  no need for a /tmp/xyz file   any more that buffers data.  This new method is something like   20%+ faster than the old one.  Tested on linux and hp-ux - added typedefs MeshData::const_node_data_iterator and   MeshData::const_node_data_iterator similar to the iterators for   the elements and nodes in MeshBase.  Convenient when one wants to   iterate directly over the nodes/elements with associated data  e.g.   Dirichlet-type boundary conditions.  Tested on linux and hp-ux,2018,,
0634c2b,meshtool can now use the MeshBase::all_second_order() method  reworked Hex20 support for unv to be more obvious,2018,,
ea14955,oops  removing what i just committed,2018,,
11a660a,added Opteron to the ignore list,2018,,
b6bf2ef,Put the ability to choose the number of partitions back into the MeshBase.  Also added the functionality of the -p argument back into meshtool.,2018,,
3a89f61,fixed all_second_order() so that boundary conditions get inherited,2018,,
2ad15cc,trivial changes in read_unv().  Doubt it really effects performance.,2018,,
e187ca2,- had trouble with the pre-defined tolerance in MeshBase::build_inf_elem()    changed to 1e-3.  At some time this could be determined from the   bounding_box of the mesh? - improved speed of the contains_point() for infinite cells through   applying Ben's trick to use size_sq() instead of size() for points   whenever possible,2018,,
fb701dc,fixed warnings of uninitialized variables,2018,,
f8f0607,Checked in code to allow for the reading of gzstreams.  Works on linux with gcc 2.95.3 and the latest gcc. Not sure about 2.96 or other architectures.  Only compressed UNV files can be read right now.  Others will be added as we work out the bugs.,2018,,
f8bfe82,UnvInterface can now also _write_ .unv.gz  not only read them. tested with 4 different files  works properly,2018,,
92461b8,now only processor 0 reads the mesh  and then braodcastst it to the other processors,2018,,
694bd07,now also the MeshData can read/write .unv.gz files,2018,,
96acdeb,changed the message printed when building libgzstream,2018,,
68246c2,This commit was manufactured by cvs2svn to create tag 'libmesh-0_4_1-rc2'.,2018,,
0c0a788,ignore .gz files,2018,,
11f0bd8,ignore .gz files,2018,,
743211e,mesh_common.h -> libmesh_common.h mesh_config.h -> libmesh_config.h,2018,,
fde46da,include file changed name,2018,,
4a08ab1,fix for no performance logging,2018,,
97b91c0,forgot rto wrap an include,2018,,
01aa1fd,nodes that are orphaned during coarsening & refinement can now be removed. This might stay as the default behavior,2018,,
3ea785e,changed mpi to MPI,2018,,
4d66a93,added --disable-petsc command-line argument.  If this is used on the command line then PETSc will not be initialized.  This is mostly useful when running simple examples under valgrind.  PETSc produces several valgrind warnings  so using --disable-valgrind will effectively suppress these.,2018,,
bd5b4db,The Mesh class no longer includes a MeshRefinement object  since this is not strictly necessary.  Also  the BoundaryMesh object has been removed from the Mesh.  Both of these can be explicitly created if they are needed (see meshtool.cc). This reduces object dependencies  and should decrease the size of the Mesh object,2018,,
ad5126e,Fixed a bit of documentation for the Mesh.  Specifically  it does not contain a MeshRefinement or BoundaryMesh object  and the docs were changed to reflect that fact.,2018,,
8ed03d7,the infinite elements now also work fine in time domain! :-))),2018,,
4efba23,the Partitioners can now be accessed through a factory.  PetscMatrix::add_matrix no longer needs to cast away const-ness (at least for PETSc 2.1.6)  Will check older versions,2018,,
4c8137e,forget that...  PETSc <= 2.1.5 requires the cast  so put it back,2018,,
01f6eaa,fixed the Partitioner factory for xlC,2018,,
4888283.0,fixed build system to properly disable libgzstreams,2018,,
44d64df,fixed AutoPtr assignment for xlC,2018,,
852469a,added a simple script to check for stand-alone headers.  Can be improved.,2018,,
99bf631,fixed the Factory?,2018,,
03ade4f,Made more header files conform to the stand-alone compilation requirement.  Also updated the test script so that you dont have to link.  The tests run faster this way.,2018,,
dbd7c21,Made the test_headers script look cooler by adding colors.  Thanks Mike!,2018,,
39cfd74,Added a cvsignore file for the contrib/bin directory.,2018,,
0024e3e,changed a linear search into a binary search for operator (i j) in the PETSc matrix,2018,,
84b846d,changed unsigned int to int for PETSc compatibility,2018,,
a940869,accidentally checked in a _huge 25x25x25 ex4.C from an Itanium2.  Fixed that.,2018,,
115dc01,removed option to skip prepare_for_use() from Mesh::read().  This should not be optional,2018,,
81c41b5,Fixed some incorrect statements in the documentation.,2018,,
c2e9b84,Checked in structure for the new web page.,2018,,
14b7649,re-organized the include directory and all that involves...,2018,,
76a8e3d,Moved ex1.C over to the new commenting style for automatic output to html.,2018,,
b2bb869,Moved ex2.C over to the new commenting style for automatic output to html.,2018,,
ff2ee3e,Added some scripts which allow the examples to be converted to html.,2018,,
6e9149f,Removed a mesh_logging.h include.,2018,,
6f1b51a,Added some personal apps to the ignore list for the src/apps directory.,2018,,
5aef702,fixed the dependencies,2018,,
9d7204c,Checked in source for the new web page.,2018,,
bef87ef,Added ex1.php not as a link.,2018,,
166f2c2,Working more on the scripts which translate examples into php.,2018,,
e4a815f,Updating the examples so that they can be automatically generated into html.,2018,,
637c053,Checked in updated code for the examples title page.,2018,,
b7427d1,Added the automatically-generated documentation for example 3.,2018,,
4d7d9a1,Updated the documentation in ex4 for automatic html generation.,2018,,
22abbab,Added example 4 to the list of examples on the web.,2018,,
cf03cc5,Added download and mailing list links to the home page.,2018,,
b63faa6,added documentation for example 5,2018,,
6cc385c,added a link in the applications section,2018,,
9b273ed,Did the documentation for example 10.  Motivation to finish 6-9.,2018,,
b161012,Added the developers page with pictures.  More to come.,2018,,
bcd50ac,Updated the Makefile to use sourceforge name when checking in the web pages.  We need to make sure we are getting the right permissions when we upload stuff.,2018,,
ce0095e,added some presentations  changed the navigation border width,2018,,
7025df8,changed doxygen documentation to not use a background image  changed HTML titles to be the same (i.e. single -),2018,,
dc84cf0,forgot an <li>,2018,,
b29062f,added installation instructions,2018,,
e7f6df4,removed the download.php file,2018,,
8fe3e99,Checked in a fix to remove :ext: when attempting to discern a users sourceforge name while uploading documentation.  Still need to find a way to set permissions correctly.,2018,,
b420b0b,added doc/html/*~ to the make clean target,2018,,
d90b7f6,added example 6 to the documentation,2018,,
7bb5c0c,the documentation is really getting somewhere!,2018,,
fd4aa9c,Added browser detection scripts to dumb things down for internet exploder.,2018,,
9bf4d50,Added browser detection php script.,2018,,
e51c2c0,Letting emacs use its php highlighting.,2018,,
e858f0b,Added bills other picture to the ignore list.,2018,,
638364e,added examples,2018,,
ae6b8c3,Added documentation for example 7.,2018,,
9028a43,html commands now possible in the example comments.,2018,,
5cd37d9,cleaned up layout.css and the example files,2018,,
f208679,fixed ex7.  ex8 now works in complex mode,2018,,
b914fd9,ran ex7 in complex mode,2018,,
f027927,changed ex9 and ex10 so that they work in complex mode,2018,,
73432b7,Added a segmented version of the title image to allow for word wrap.,2018,,
4228679.0,added the make upload target to upload an existing web page withour rebuilding the doxygen documentation,2018,,
6ee5ecb,The Make dependency for the example files was using a question mark for matching the numbers.  Unfortunately  the question mark only matches a single character which does not match 10  11  12... I changed it to use a star instead.  This is really a minor fix.,2018,,
20fb000,changed upload target to properly handle permissions,2018,,
b09db96,Added a link to my masters report on the publications page.,2018,,
9a56ae3,Fixed a small bug which didnt print newlines in the tecplot output.,2018,,
f7e506a,Checked in a fix for internet explorer not being able to handle the title image word wrap.,2018,,
29b8a09,removed the optional parameter from MeshBase::read(),2018,,
b70e7f1,Added Steffen and Daniel to the devs page.,2018,,
464e1d6,changed xdrIO so the error message in the case of failed file access is printed in optimized mode by moving the test outside of an assert,2018,,
2226cd6,added a fix for the factory instantiation for IBM xlC,2018,,
19d3109,Hard-coded the image widths so the text doesnt load up on top of the title page.,2018,,
826de3c,ex6 now works in complex mode.  There was no reason for it not to.,2018,,
83b7217,Also added the heights of each picture to the php script.,2018,,
b89e5db,removed an unnecessary print statement left over from the development phase,2018,,
86d0e7c,This commit was manufactured by cvs2svn to create tag 'libmesh-0_4_1'.,2018,,
4c8fa1b,Redesign Parallel packed_range functions,2018,,
43f1d0d,Use new Packing API with Elem* and Node* types,2018,,
01e74bf,Type deduction argument for receive_packed_range(),2018,,
56341df,Initial unit test for new packed_range code,2018,,
5fe4bc3,Build new packed_range unit test,2018,,
9b000bb,Re-run bootstrap,2018,,
e712ee3,Fix unused variable warnings,2018,,
ce0cc74,More packed range unit tests,2018,,
fe8672f,Update MeshBase::spatial_dimension().,2018,,
51c521d,Set mesh spatial dimension in build_cube().,2018,,
b60bcca,Use LIBMESH_DIM rather than mesh.spatial_dimension().,2018,,
16e2c65,Add unit test of mesh.spatial_dimension().,2018,,
7f5e9fa,Run bootstrap.,2018,,
2d81016,Write nodal unique_id values to xda/xdr files,2018,,
f61fcda,Add simple slit_mesh_test,2018,,
f309109,Re-run bootstrap,2018,,
20b3b61,Test refinement + projections on a slit mesh,2018,,
5c75b6a,Add testRestart to slit mesh test,2018,,
71af1a8,Revert recent changes to system_projection.C,2018,,
ce27e86,Add ExodusII_IO::write_as_dimension().,2018,,
5261124.0,Fix dimension==0 issue in build_sphere after clearing mesh.,2018,,
6990341.0,Merge pull request #791 from jwpeterson/fix_build_sphere,2018,,
b58ad88,Avoid overwriting file in meshplot,2018,,
7169d43,Add configure test for broken errno_t issue.,2018,,
9fb349f,Write serial files until we work out that flaw,2018,,
3029f64,Run bootstrap.,2018,,
6b30d2f,Make FEMSystem numerical jacobians more robust,2018,,
b1aa773,Define errno_t on compilers where it is necessary.,2018,,
5e9a899,Ignore overlength string warnings from reference_elem.data,2018,,
d455401,Disable variadic macro warnings in GCC 5.,2018,,
71be328,Avoid overlength string warnings from libmesh_assert calls.,2018,,
b744311,NewmarkSolver: fix cache w/o restore bug,2018,,
072f15f,Fix overlength string in meshtool.C,2018,,
91f7b9d,Use libmesh_error_msg() macro in meshtool.C,2018,,
df62e17,Fix overlength string issue in compare.C,2018,,
fd19b92,Use libmesh_error_msg() in compare.C,2018,,
f7421f6,Set SLEPc solver options for eigenproblems_ex3,2018,,
14784ad,Merge pull request #796 from roystgnr/eigenproblem3_options,2018,,
c17e1dd,Merge pull request #793 from roystgnr/numerical_jacobians_fix,2018,,
ca9b3bf,Merge branch 'spatial_dimension',2018,,
53edc4c,Merge pull request #768 from roystgnr/write_node_unique_ids2,2018,,
0954d1a,Merge pull request #794 from jwpeterson/gcc_osx_fix3,2018,,
12cd2fe,Add GMRES support to EigenSparseLinearSolver.,2018,,
5bfdaad,Demonstrate use of Eigen GMRES solver in introduction_ex5.,2018,,
085a042,"Revert ""Demonstrate use of Eigen GMRES solver in introduction_ex5.""",2018,,
b014fc0,Merge pull request #797 from jwpeterson/eigen_gmres,2018,,
aecbd98,Guard unique_id code with ifdefs.,2018,,
dc45dab,Add missing ifdef unique_id guards,2018,,
d4459ec,Merge pull request #798 from roystgnr/disable_unique_bugfix,2018,,
d0d4d43,Add m4 test of C++11 deleted functions.,2018,,
3ac675e,Run bootstrap.,2018,,
6359d95,Add m4 test of C++11 final keyword.,2018,,
e2d61ff,Clarify comment,2018,,
430658a,Add LAGRANGE case for side projections,2018,,
4297ffb,Add LAGRANGE case for interior projections,2018,,
5b8f399,Add libmesh_delete and libmesh_final macro.,2018,,
ea568fb,Ignore deprecated warnings from Eigen headers.,2018,,
c719016,Mark NumericVector-derived classes as final.,2018,,
3b567c6,Merge pull request #799 from libMesh/packed_range_refactor.rebased,2018,,
6afd0f5,Mark SparseMatrix subclasses as libmesh_final.,2018,,
80333f7,Mark Elem leaf classes as libmesh_final.,2018,,
54cc396,Mark QBase subclasses as libmesh_final.,2018,,
1ebad55,Bugfix for interior interpolation,2018,,
98d356b,Slit mesh restarts may fail without unique_id,2018,,
f026594,packed_range output_type fixes,2018,,
bd29ed1,One more is_edge() usage fix,2018,,
d3e1c18,Merge pull request #802 from roystgnr/packed_range_bugfixes,2018,,
0023d3a,Add missing libmesh_override to slit_mesh_test.C,2018,,
df8ec47,Merge pull request #804 from jwpeterson/cxx11_m4,2018,,
3d13a96,Merge pull request #803 from roystgnr/slit_mesh_unique_id_only,2018,,
2b01b6d,Merge pull request #800 from roystgnr/rereoptimize_projections,2018,,
eeb6fa4,Optimized the EIM construction code. Before we did multiple L2 projections for all variables in one big system. Now we do a separate L2 projection for each variable. This gives the same results as before but uses less memory.,2018,,
7699b2d,Update traffic.,2018,,
081f85c,Add configure tests for cxx11 nullptr.,2018,,
74d460b,Run bootstrap.,2018,,
c0f4430,"Add backwards-compatible ""workaround"" nullptr type.",2018,,
e6abf95,Update Makefile.am files using rebuild_XYZ scripts.,2018,,
cdb192f,Replace NULL with libmesh_nullptr in examples.,2018,,
8f8a2fa,Write case file with iostreams.,2018,,
4be809c,Use iostreams in write_scalar_ascii().,2018,,
cd95b7e,Use iostreams in write_vector_ascii().,2018,,
995d1ad,Use iostreams in write_geometry_ascii().,2018,,
9c25762,Final cleanup.,2018,,
28559ed,Replace elem_type_to_string() with static map.,2018,,
898cb00,Merge branch 'ensight_io',2018,,
bca60c6,Removing pthread_unique_id() from Threads,2018,,
c35b541,Add Tri6::volume().,2018,,
eef18ca,We were storing coarse vectors (including the adjoint) before solving  now solving before saving.,2018,,
41fe4b0,Fixed memory leak introduced in PR #773,2018,,
b1dc6dc,Merge pull request #807 from dknez/PR_773_memory_leak_fix,2018,,
701d742,Merge branch 'tri6_volume',2018,,
173191e,Merge pull request #808 from vikramvgarg/adjoint_refinement_solve_before_store,2018,,
50e3be9,Add Quad8::volume().,2018,,
674edce,Merge branch 'quad8_volume',2018,,
8998ce2,Merge pull request #809 from dknez/EIM_refactoring,2018,,
aa4da80,Include libmesh_nullptr.h in libmesh_common.h,2018,,
520e6b6,Replace NULL with libmesh_nullptr in library.,2018,,
90e1a5b,Add notion of time-dependence to FunctionBase,2018,,
855bbb7,ConstFunctions are never time-dependent,2018,,
014dabf,Add time-dependence detection to ParsedFunction,2018,,
34ae448,Unit testing of ParsedFunction time-dependence,2018,,
fd5ec66,Add time-dependence detection to CompositeFunction,2018,,
753a8c5,Unit testing of CompositeFunction time-dependence,2018,,
8.1e+46,Add Quad9::volume().,2018,,
f9e156d,AutoPtrs should no longer be used for anything.,2018,,
136a5f3,Switch to 3x3 quadrature for Quad8::volume().,2018,,
ea8aada,Merge branch 'quad9_volume',2018,,
45f38f8,Merge pull request #805 from jwpeterson/nullptr,2018,,
4f85d5b,Switch to FIFTH order quadrature for Tri6::volume().,2018,,
024f73b,Merge branch 'tri6_volume2',2018,,
9bdeafc,Switch to more consistent Quad4::volume() implementation.,2018,,
441e4ba,Merge branch 'quad4_volume',2018,,
4a04265,Merge remote-tracking branch 'permcody/issue_801',2018,,
fe509f1,Add Edge4::volume().,2018,,
b3d4d12,Merge branch 'edge4_volume',2018,,
2020d49,Merge pull request #811 from pbauman/function-base-is-time-dependent,2018,,
8d2b029,Add quadrature-based Hex8::volume() implementation.,2018,,
102c779,Optimize Hex8::volume() slightly.,2018,,
f647429,"Revert ""Add quadrature-based Hex8::volume() implementation.""",2018,,
4.146e+61,Merge branch 'hex8_volume',2018,,
cc9847b,Initial volume() optimization for HEX27.,2018,,
4afb9c1,Further optimization of Hex27::volume().,2018,,
4520164.0,Update traffic.,2018,,
8b4624e,Merge branch 'hex27_volume',2018,,
25eadfc,Adding casts to the packed range example.,2018,,
eb8aee3,Merge pull request #814 from permcody/packed_range_fixup,2018,,
a5f8a05,Wrap pragmas in ifdefs to avoid GCC warnings.,2018,,
7d7a627,Merge pull request #816 from jwpeterson/ifdef_pragma,2018,,
7f09628,Add Hex20::volume().,2018,,
0eb0e86,Precompute quadrature point powers in Hex27::volume().,2018,,
7375631.0,Merge branch 'hex20_volume',2018,,
2abe922,Add Tet10::volume().,2018,,
2465612.0,Merge branch 'tet10_volume',2018,,
294602a,Add quadrature-based Prism6::volume() implementation.,2018,,
b211c1b,Merge branch 'prism6_volume',2018,,
79ee312,Hoist computation out of inner loop.,2018,,
3d63338,Merge branch 'prism6_optimization',2018,,
d5a7e7a,Reduced Basis Change: Add method to plot EIM parameterized functions.,2018,,
aa0469d,Merge pull request #817 from dknez/plot_eim_functions,2018,,
ac21288,Absolute values for error_per_cell in the elementwise adjoint refinement error estimator,2018,,
bdd7830,Add Prism15::volume().,2018,,
896397b,Merge branch 'prism15_volume',2018,,
311deb1,Merge pull request #818 from vikramvgarg/adjoint_ref_abs_value,2018,,
23db35c,Consolidate LAGRANGE projection code,2018,,
976759f,Add Prism18::volume().,2018,,
0a24fce,Merge branch 'prism18_volume',2018,,
21b7e99,Documentation fix.,2018,,
24c4924,Handle the LAGRANGE superparametric element case,2018,,
f1ae44a,Add quadrature-based volume() implementation for Pyramid5.,2018,,
7b81856,"Revert ""Add quadrature-based volume() implementation for Pyramid5.""",2018,,
7ed920a,Merge pull request #820 from roystgnr/rerereoptimize_projections,2018,,
3f7c094,Merge branch 'pyramid5_volume',2018,,
f11b072,Add Pyramid14::volume().,2018,,
6478a6d,Fix one_pyramid14.xda.,2018,,
943b53d,RB Change: Optimize EIM by storing inner_product * basis functions,2018,,
b27fce2,Add Pyramid13::volume().,2018,,
da9dbe6,Merge branch 'pyramid_volume',2018,,
fa76da7,Fix unused variable warning.,2018,,
f1e8e65,RB Change: Fixed EIM truth_solve on hybrid meshes.,2018,,
04b618f,Update citations.,2018,,
fc627bb,Merge pull request #822 from dknez/optimize_eim,2018,,
c4f2c94,Merge branch 'hex8_volume2',2018,,
4f0a5d5,Add triple_product(a b c) for TypeVectors.,2018,,
30f06fd,Use triple_product in Hex8::volume().,2018,,
e714b17,Use triple_product in Pyramid5::volume().,2018,,
30ef979,Use triple_product in Tet4::volume().,2018,,
5bcb1c1,Use triple_product() in remaining 3D Elem volume() formulas.,2018,,
52fa120,Update citations.,2018,,
da8ace0,Update traffic.,2018,,
7ebef78,Update statistics for February 2016.,2018,,
173b05a,Merge pull request #825 from jwpeterson/triple_product,2018,,
5be2078,Update citations.,2018,,
07bb95f,all_tri() refactored to be more general.,2018,,
32e7709,Comment  refactor Prism splittings,2018,,
86a334b,Fix namespace issue,2018,,
e176d1a,Use new BoundaryInfo accessor.,2018,,
debb7b3,Use new Functor style,2018,,
6fac4fd,More perf logging,2018,,
1e71be5,Optimize evaluations at vertex nodes,2018,,
4e58973,Use interpolation on LAGRANGE edges  too,2018,,
001e5b1,Synchronize dofs on formerly-hanging nodes,2018,,
5d5bff1,Clean up from SVN merge.,2018,,
596ea00,Update .mailmap file.,2018,,
2f8e8b2,Copy functors appropriately,2018,,
6d190d2,Merge pull request #696 from roystgnr/reoptimize_projections,2018,,
8f6dcfb,Update traffic.,2018,,
dceb57a,Add missing libmesh_overrides noted by Xujun Zhao.,2018,,
c7d0e23,Clean up AutoPtr atavisms.,2018,,
f3103cd,Fix warnings when !LIBMESH_HAVE_EXODUS_API.,2018,,
4a8b24f,Fix warning when !LIBMESH_HAVE_PARMETIS.,2018,,
5e2f969,Fix warnings when !LIBMESH_HAVE_MPI.,2018,,
134d833,Update statistics for October 2015.,2018,,
6ae276f,Set interior parent only when mesh contains multiple dimensions,2018,,
e83ab41,Implement fixes suggested by cppclean.,2018,,
7fba562,Minor clean-up/reformatting in UCDIO.,2018,,
d48de0b,Add static ElementType lookup tables.,2018,,
e40e4a9,Read/write Elem::subdomain_id() as UCD material id.,2018,,
55cf08f,Merge pull request #700 from jwpeterson/ucd,2018,,
4a093d2,Fix for reduced_basis_ex2.,2018,,
daba1a8,Fix for reduced_basis_ex7.,2018,,
d28aaf2,Fix a few unit tests for complex-enabled builds.,2018,,
681bab5,Fix a few unit tests for complex-enabled builds.,2018,,
c538f44,Merge pull request #702 from jwpeterson/complex_fixes,2018,,
2682ece,Disable reduced_basis_ex6 if libmesh is configured with --enable-blocked-storage.,2018,,
acc4cc5,Better document known failure in reduced_basis_ex7.,2018,,
2a37a05,Ensure the list of ids is unique in BoundaryInfo::add_{side node}().,2018,,
2a693a9,Deprecate vector versions of BoundaryInfo::add_{side node edge}().,2018,,
fa1808c,Add and use typedefs for common BoundaryInfo iterator types.,2018,,
38a75a5,Misc. fixes to mixed_dim_mesh_test.C,2018,,
f6c56c1,Delete commented-out for_each functors.,2018,,
df89594,Refactor remaining std::make_pair uses.,2018,,
3fd13bd,Updated BoundaryInfo::sync so that we can get the node and side id maps that are used internally.,2018,,
a376eb0,Merge pull request #707 from libMesh/boundary_info,2018,,
88f0f52,Merge pull request #708 from dknez/boundary_info_maps,2018,,
a551607,Add required headers to dof_map.h  parsed_function_parameter.h,2018,,
fbd31c2,Update citations.,2018,,
dc1c476,Update statistics.,2018,,
92aeeb3,Merge pull request #701 from jwpeterson/cppclean,2018,,
0a9b84b,Added BoundaryInfo::get_side_and_node_maps() and removed version of BoundaryInfo::sync() that generated these maps. The previous BoundaryInfo::sync() version didn't work properly because the prepare_for_use call invalidates the data.,2018,,
14ccba3,Merge pull request #710 from dknez/boundary_info_maps_correction,2018,,
61bcc98,Use non-const iterators for erasing entries from maps.,2018,,
2ae09b2,Delete cryptic TODO.,2018,,
be6e1b2,Deprecate version of BoundaryInfo::boundary_ids(const Node*) that returns a vector.,2018,,
8508a6c,Deprecate original version of BoundaryInfo::edge_boundary_ids(),2018,,
ff1ca56,Use non-deprecated version BoundaryInfo::edge_boundary_ids().,2018,,
a6cb3b5,Deprecate original version of BoundaryInfo::boundary_ids(elem  side).,2018,,
f797d45,Use non-deprecated version BoundaryInfo::boundary_ids(elem  side).,2018,,
784e2c1,Remove BoundaryInfo::n_boundary_ids(elem  side) copy/paste job.,2018,,
df15968,Remove BoundaryInfo::n_edge_boundary_ids(elem  side) copy/paste job.,2018,,
bd24ec7,Remove copy/paste code in BoundaryInfo::has_boundary_id().,2018,,
eefe1e9,Remove copy/paste code in BoundaryInfo::boundary_id().,2018,,
c9e8cf8,Deprecate BoundaryInfo::raw_boundary_ids().,2018,,
42d56e0,Use non-deprecated version of BoundaryInfo::raw_boundary_ids().,2018,,
53db001,Deprecate BoundaryInfo::raw_edge_boundary_ids().,2018,,
c91b2e9,Use non-deprecated boundary_ids() in Dirichlet constraints code.,2018,,
9cfa0a6,Use non-deprecated boundary_ids() in compute_periodic_node_constraints().,2018,,
07db58b,Use non-deprecated boundary_ids() in primary_boundary_edge_neighbor().,2018,,
76cddbb,Use non-deprecated boundary_ids() in compute_periodic_constraints().,2018,,
4d1a49e,Use non-deprecated boundary_ids() in Elem::topological_neighbor().,2018,,
237650a,Use non-deprecated boundary_ids() in build_extrusion().,2018,,
c58a48a,Use non-deprecated boundary_ids() in all_tri().,2018,,
cdebdd6,Use non-deprecated boundary_ids() in flatten().,2018,,
d8100ab,Use non-deprecated boundary_ids() in stitching_helper().,2018,,
6.56E+85,Use non-deprecated boundary_ids() in create_submesh().,2018,,
eeec1ef,Use non-deprecated boundary_ids() in write_serialized_bcs().,2018,,
2279842,Use non-deprecated boundary_ids() in write_serialized_nodesets().,2018,,
de1ef52,Use non-deprecated boundary_ids() in element pack() routine.,2018,,
4b44807,Use non-deprecated boundary_ids() in node pack() routine.,2018,,
059fd5e,Use non-deprecated boundary_ids() in BoundaryProjectSolution.,2018,,
218f6c3,Use non-deprecated boundary_ids() in systems_of_equations_ex5.,2018,,
b3109a2,Use non-deprecated boundary_ids() in reduced_basis_ex6.,2018,,
d01d557,Use non-deprecated boundary_ids() in primary_boundary_point_neighbor().,2018,,
0ad0901,Deprecate FEMContext::side_boundary_ids().,2018,,
09ed483,Add NewmarkSolver::set_initial_accel_avail,2018,,
d56b3b8,Use set_initial_accel_avail,2018,,
752f4ad,Merge pull request #712 from pbauman/newmark-restart,2018,,
27b8522,Update traffic.,2018,,
0a1f143,remove libtool-2.4.2.tar.gz,2018,,
002372e,add libtool-2.4.6.tar.gz,2018,,
53f6757,Merge pull request #711 from jwpeterson/boundary_ids_set,2018,,
5f02833,build bundled libtool-2.4.6,2018,,
c5c5b61,rebase with libtool-2.4.6,2018,,
922ef9d,Merge pull request #714 from libMesh/libtool_refresh,2018,,
e15d33e,remove automake-1.12.5.tar.gz,2018,,
b2db07c,add automake-1.15.tar.gz,2018,,
42c1f3d,build bundled automake-1.15,2018,,
e46397d,specify serial-tests to get old stdout behavior when running make check  update AC_PREREQ to 2.69  only *need* automake 1.12 or newer to support serial-builds options,2018,,
24b3f6b,ran bootstrap,2018,,
5f712ea,ParallelMesh: unique ids on unpartitioned elements,2018,,
4102233,Add headers to Trilinos files.,2018,,
3e35519,send_recieve: try harder to pick an example T,2018,,
4d6196b,Construct StandardType<pair> with no example,2018,,
2.89E+101,Remove now-redundant assign_unique_ids(),2018,,
82cb4ba,SyncUniqueIds functor,2018,,
8df90fa,Undo deprecation of BoundaryInfo::add_side().,2018,,
f07b337,MeshTools::libmesh_assert_valid_unique_ids,2018,,
0da82a9,Set unique_id in insert_elem  insert_node,2018,,
a9392a3,XdrIO shouldn't create invalid unique_ids,2018,,
4.30E+285,assert_valid_unique_ids() after prepare_for_use(),2018,,
c530181,DofObjectKey typedef,2018,,
4ff9368,Define operator<< for pair<Hilbert unique_id>,2018,,
79f343d,MPI compatible max/min operators for DofObjectKey,2018,,
a72095b,Undo deprecation of BoundaryInfo::add_node().,2018,,
10a4d44,MeshBase::parallel_max_unique_id(),2018,,
8550ecc,set_unique_id() in MeshModification routines,2018,,
c68bf3f,Undo deprecation of BoundaryInfo::add_edge().,2018,,
8848e5d,Switch to boundary_ids (elem  side  vector&).,2018,,
c5a7d48,Switch to boundary_ids (node  vector&).,2018,,
3e54a5b,Switch to edge_boundary_ids (elem  edge  vector&).,2018,,
7c68b38,Switch to raw_boundary_ids(elem  side  vector&).,2018,,
f693323,Switch to raw_edge_boundary_ids(elem  edge  vector&).,2018,,
204f4f6,Switch to non-deprecated boundary_ids() function throughout library.,2018,,
e6f7f8b,Use non-set versions of boundary_ids in examples.,2018,,
fa57e1f,Copy unique_id in copy_nodes_and_elements,2018,,
250ddf0,Reset _next_unique_id after copy_nodes_and_elements,2018,,
e837376,ParallelMesh all_tri(QUAD8) unique_id corner case,2018,,
6b946d8,Sort by (Hilbert unique_id) when possible,2018,,
0c0f832,Added SolverConfiguration::set_options_during_init(). Small add-on to PR #657.,2018,,
38a90ac,Update citations.,2018,,
e36facd,Merge pull request #720 from jwpeterson/redo_boundary_ids,2018,,
009be39,Move ExodusII_IO_Helper::Conversion::get_side_map to C file.,2018,,
437818c,Add ExodusII_IO_Helper::Conversion::invalid_id.,2018,,
5540f95,Add ExodusII_IO_Helper interface to read QA records.,2018,,
f3dbc3e,Add code to detect Cubit 14 from QA records.,2018,,
2a593be,The ElementMaps constructor now takes a Helper reference.,2018,,
e50f625,Use special TRI3 side map to work around Cubit 14 issue.,2018,,
1dccf5c,The TRI3 numbering bug affects both Cubit 14 and 15.,2018,,
aaa0f78,Manually set unique_id in XdrIO reads,2018,,
d6cae86,TAO_CONVERGED_FATOL is going away in the next release of PETSc.,2018,,
04ce479,Merge pull request #722 from jwpeterson/exodus_fix,2018,,
271674a,fatol and frtol will be removed in the next release of PETSc.,2018,,
c8567af,semiverify ParallelMesh unique_ids when enabled,2018,,
040b212,Add missing assertion around semiverify,2018,,
5fdab57,ExodusII output in fem_system_ex4,2018,,
4f2a19d,Removed unused matrix (non_dirichlet_inner_product) from RBConstruction,2018,,
ade2489,Set 'grtol' when calling Tao  frtol is going away.,2018,,
2b4c720,Merge branch 'tao_fix',2018,,
538c958,Update citations.,2018,,
3edd764,Update traffic.,2018,,
ed27c80,Refactor GmshIO code for reading lower-dimensional elements.,2018,,
d00d419,Add Elem::key() interface.,2018,,
7efa05e,Refactor Elem::operator==,2018,,
b6dffb8,Add Elem-specific overrides of Elem::key().,2018,,
cb58377,Use Elem::key() in AbaqusIO.,2018,,
3e2616b,Use Elem::key() in UNVIO.,2018,,
ef1f0ce,Don't let key() hide base class key(side) function.,2018,,
b9990cf,Update citations.,2018,,
13bbee8,Merge pull request #726 from jwpeterson/gmsh_hash,2018,,
c526bae,"Add autoconf tests for variants of ""unordered"" multiset.",2018,,
3decd85,Run bootstrap.,2018,,
f61fd33,Use unordered_multiset in UNVIO.,2018,,
c0433e5,Move Elem hashing stuff to its own header.,2018,,
0bd160d,Update Makefile.am's,2018,,
f46c9db,Run boostrap.,2018,,
6ddb8ee,make_node_unique_ids_parallel_consistent(),2018,,
bf7efca,make_unique_ids...consistent in prepare_for_use,2018,,
a7aee94,Set unique_id when reading from Nemesis files,2018,,
969c683,Option to avoid overzealous neighbor asserts,2018,,
67a2ebc,Avoid overzealous find_neighbors assert,2018,,
2ec7623,Sync unique_ids during Nemesis read,2018,,
bebdb0d,Avoid clear() in DiffSystem class destructors,2018,,
f2f8e08,Switch to unordered_multimap in UNVIO.,2018,,
b89c257,Use unordered_multimap in GmshIO.,2018,,
3bfad68,Use unordered_multimap in AbaqusIO.,2018,,
fa0ac18,Fix SerialMesh::update_parallel_id_counts,2018,,
92e4c70,Merge pull request #730 from jwpeterson/unordered_multiset,2018,,
78a2aa1,Merge pull request #729 from roystgnr/intel_crash_fix,2018,,
94a700f,Update citations.,2018,,
daada81,Fix 64-bit indices regression.,2018,,
7d6fced,Remove atavistic comment,2018,,
e1234b5,Fixup inadvertent whitespace change,2018,,
f6e8730,Avoid hiding Elem::key() with Elem::key(sn) in derived classes.,2018,,
fc2fb91,Compilation fix for --disable-unique-id,2018,,
0c7ea36,Refactor Hex::key(side),2018,,
17abf52,Refactor Hex::side(s),2018,,
4bd2c96,Refactor Tet::key(side),2018,,
f4d69e8,Refactor Tet::side(s),2018,,
d125c0b,Refactor Prism::key(side),2018,,
c9610e5,Refactor Prism::side(s),2018,,
9a14295,Refactor Pyramid::key(side),2018,,
ae3200e,Refactor Pyramid::side(s),2018,,
a9f57f7,Refactor Tri::key(side),2018,,
4e4c75d,Refactor Tri::side(s),2018,,
804b069,Refactor Quad::key(side),2018,,
4c17cd2,Refactor Quad::side(s),2018,,
0308c5a,Merge pull request #731 from jwpeterson/refactor_key,2018,,
37c577f,Fix Elem::key() hiding warnings in infinite elems.,2018,,
6603bef,Refactor InfHex::key(side),2018,,
56a67b1,Add missing libmesh_override.,2018,,
a9f2bc6,Refactor InfQuad::key(side),2018,,
f5b3ff4,Add -Woverloaded-virtual to clang flags.,2018,,
eb689a3,Refactor InfPrism::key(side),2018,,
edebe2f,Refactor InfHex::side(s),2018,,
38ee631,Refactor InfQuad::side(s),2018,,
000c83f,Refactor InfPrism::side(s),2018,,
29d790d,Update citations.,2018,,
8694554,Merge branch 'refactor_key_inf',2018,,
fa131f1,Refactor Quad4::build_side(),2018,,
6f0ca9a,Refactor Quad8::build_side(),2018,,
f086cff,Refactor Quad9::build_side(),2018,,
f6cda3d,Refactor Tri3::build_side(),2018,,
53a1084,Refactor Tri6::build_side(),2018,,
208129c,Refactor Tet4::build_side(),2018,,
6d32055,Refactor Tet10::build_side(),2018,,
de88520,Refactor Hex8::build_side(),2018,,
ec74353,Refactor Hex20::build_side(),2018,,
f209b12,Refactor Hex27::build_side(),2018,,
59a6c0f,Refactor Prism6::build_side(),2018,,
f2eb62c,Refactor Prism15::build_side(),2018,,
9f449f2,Refactor Prism18::build_side(),2018,,
0df409c,Refactor Pyramid5::build_side(),2018,,
5f9d84c,Refactor Pyramid13::build_side(),2018,,
12099c8,Refactor Pyramid14::build_side(),2018,,
82a0af7,Refactor InfQuad4::build_side(),2018,,
fd08aac,Refactor InfQuad6::build_side(),2018,,
28ddab4,Refactor InfHex8::build_side(),2018,,
4761752,Refactor InfHex16::build_side(),2018,,
312c96a,Refactor InfPrism6::build_side(),2018,,
f1abe4a,Refactor InfPrism12::build_side(),2018,,
a062e04,Refactor InfHex18::build_side(),2018,,
3a3bff3,Update traffic.,2018,,
76a6026,Merge pull request #732 from jwpeterson/build_side,2018,,
67a9842,Update citations.,2018,,
c1030bf,Fix DenseMatrix::svd(sigma  U  VT) ,2018,,
892b71d,Update citations.,2018,,
872fe68,Add Quad9::key() function.,2018,,
5552364,Fix Edge3::key() function.,2018,,
ad244cb,Override Pyramid14::key(side),2018,,
4.95E+13,Fix copy-pasted documentation typo.,2018,,
0c00bbd,Override InfQuad6::key(side) for Edge3 side.,2018,,
10f9b05,Simplify InfHex18::key(side).,2018,,
7128a45,Move Quad4::key() to Quad::key().,2018,,
188def7,Move Tri3::key() to Tri::key().,2018,,
469ccc6,Update traffic.,2018,,
112e592,Update views/clones plots.,2018,,
984297e,Merge branch 'stats',2018,,
be8225f,Merge pull request #733 from jwpeterson/key_fixes,2018,,
3d67a35,Add unit test for DenseMatrix::svd().,2018,,
18f352e,Ran bootstrap.,2018,,
fb1c3d2,Let user specify precision in DenseMatrixBase::print_scientific().,2018,,
8a3c1ef,Let user specify precision in DenseVectorBase::print_scientific().,2018,,
d028b48,Fix minor spacing/formatting issues.,2018,,
ec96e57,Merge pull request #734 from jwpeterson/debug_svd,2018,,
778c90e,Merge branch 'auto_set_interior_parent',2018,,
f481a2e,petsc.m4: don't test against uninitialized variable.,2018,,
1ad5054,Ran bootstrap.,2018,,
41027cc,Update statistics for Nov 2015.,2018,,
28d53ee,Merge pull request #735 from jwpeterson/petsc_m4,2018,,
cdedd46,Update citations.,2018,,
0ddb666,Update citations.,2018,,
8f689e0,Extract TBB_VERSION_{MAJOR MINOR} from tbb_stddef.h,2018,,
ae5c55e,Ran bootstrap.,2018,,
6b11ec8,Add TBB_VERSION_LESS_THAN macro to threads.h,2018,,
12ef191,GCC 4.6.3 still warned that there was a hiding issue.,2018,,
148aa3c,Merge pull request #737 from jwpeterson/tbb_m4,2018,,
2856671,DenseMatrixBase::multiply() helper can be static,2018,,
253174,Update citations.,2018,,
4.09E+70,close_to_point needs tol/hmax,2018,,
050d549,Merge pull request #739 from roystgnr/static_multiply,2018,,
7de27db,Merge pull request #740 from roystgnr/C1_coarsening_projection_fix,2018,,
89f050f,Add configure test for PETSc index size mismatch.,2018,,
493d272,Run bootstrap.,2018,,
be92d55,Move libmesh-PETSc type consistency checks out of petsc.m4,2018,,
f434f93,Run bootstrap.,2018,,
93683af,Correct comment re: projection close_to_point tol,2018,,
04755d9,Use larger tolerance when finding old elements,2018,,
d674668,Perform variable substitution at the end of petsc.m4,2018,,
5b97485,Run bootstrap.,2018,,
71d0997,Merge pull request #742 from roystgnr/another_projection_fix,2018,,
ce374e9,If starting the nonlinear solve with a really good initial guess  we dont want to set an absurd linear tolerance,2018,,
43fa1f4,Optimize tree add (un)serialization (#745),2018,,
9fdc663,Merge pull request #741 from jwpeterson/petsc_m4,2018,,
04df0ac,Updated systems_of_equations_ex8.,2018,,
9af5b1f,Merge pull request #743 from dknez/systems_of_equations_ex8_refresh,2018,,
7f5ad54,Update traffic.,2018,,
c5cbe6f,Update citations.,2018,,
cde372f,Update LOC count.,2018,,
596f26b,Update citations.,2018,,
8b9f266,Add DenseMatrix::svd_solve().,2018,,
70eca2c,Merge pull request #744 from vikramvgarg/newtonsolver_tolerance_fix,2018,,
c9265c0,Cache derivatives to files (#745),2018,,
714ec15,Update citations.,2018,,
4a0d108,Merge pull request #746 from jwpeterson/svd_solve,2018,,
e0e46c9,Add feature flag system (#745),2018,,
a5407a2,Fix gcc compile and link errors (#745),2018,,
c926028,Merge pull request #747 from dschwen/cache_ad_745,2018,,
118ee29,clean the proper output file,2018,,
a517b4b,PETSc 3.6.3 still has old TaoSetTolerances options,2018,,
9c71d0c,Merge pull request #749 from pbauman/tao-set-tolerances,2018,,
6d748ea,Update citations.,2018,,
b7f4a66,Set DOT_PATH in Doxyfile.in.,2018,,
2fbb632,"Update Doxygen ""Main Page"" documentation.",2018,,
220cf25,Update traffic.,2018,,
7fecf64,Fix doxygen warnings.,2018,,
e7c3d30,Fix warning about DOT_FONTNAME.,2018,,
d67dd32,Fix indentation on Doxygen mainpage.,2018,,
7650ed9,Widen NewtonSolver immediate-convergence test,2018,,
0ade62b,Don't use LIBMESH_OPTIONS in reduced basis ex5,2018,,
b81dafc,Merge pull request #750 from roystgnr/newton_solver_fix,2018,,
bbe5924,Merge pull request #751 from roystgnr/rb_ex5_no_custom_pc,2018,,
fe4bdcd,Suppress variadic template warnings in GCC.,2018,,
0d4372d,Merge pull request #717 from libMesh/automake_refresh,2018,,
e61086b,Add BounaryInfo::remove_id(),2018,,
05eee99,Remove unused  private functor.,2018,,
5406bac,Move inline functions out of header.,2018,,
b29c42a,Call remove_id() in MeshTools::Modification::change_boundary_id().,2018,,
d5c4421,Add unit test of BoundaryInfo::remove_id().,2018,,
081f517,Run bootstrap.,2018,,
ebbdf65,Clear input vectors passed to BoundaryInfo functions.,2018,,
3416ef8,Fix some documentation/formatting typos.,2018,,
c5c3ceb,Fix warning generated while trying to ignore warnings.,2018,,
3076be4,Merge pull request #754 from jwpeterson/remove_id,2018,,
eca97f6,Update citations.,2018,,
6c7254e,Added SolverConfiguration to NonlinearSolver to match LinearSolver.,2018,,
b59ec8a,Fixed compilation error with --enable-complex  due to DenseMatrix::_svd_solve_lapack,2018,,
214974a,Merge pull request #758 from dknez/nonlinear_solver_config,2018,,
de28d8c,Added shortcut returns in change_boundary_id and change_subdomain_id if old and new IDs are the same,2018,,
ae10749,Update traffic.,2018,,
5d23511,Fix issues with writing Exodus files after deleting nodes.,2018,,
c6a5e45,Update citations.,2018,,
44daf79,Add tests for inverse hyperbolic functions.,2018,,
fc2e713,Run bootstrap.,2018,,
e3373f7,Use inverse hyperbolic trig defines detected by configure.,2018,,
2cd4042,Add tests for complex inverse hyperbolic trig functions.,2018,,
e209167,Run bootstrap.,2018,,
ea009a1,Merge pull request #759 from jwpeterson/fix_exodus,2018,,
432f3b8,Merge pull request #760 from jwpeterson/inv_hyp,2018,,
315d0e3,Reduced Basis change: Should use relative error in EIM greedy,2018,,
a156d05,Update traffic.,2018,,
5c4aaeb,Update citations.,2018,,
6dabeba,Add istream-based GetPot constructor,2018,,
f2bec40,Parse test inputfile from stringstream,2018,,
5d5618f,No longer need GetPot test at .C.in file,2018,,
b7d6fe8,Ran bootstrap,2018,,
96d98f6,Reuse parse_input_stream within parse_input_file,2018,,
a3e0c86,Update citations.,2018,,
63aea86,Update statistics for Dec 2015.,2018,,
65121aa,Merge pull request #762 from pbauman/getpot-stream-constructor,2018,,
1ced72a,Add missing ifdef wrapper,2018,,
8e9e0e2,Add missing #include,2018,,
0de2950,Update traffic.,2018,,
24fc010,Merge pull request #764 from roystgnr/disable_second_fixes,2018,,
8359cc6,Add space around variable declarations in base.,2018,,
0cf0f7e,Add space around variable declarations in error_estimation.,2018,,
92d2ab8,Add space around variable declarations in fe.,2018,,
ec9c3af,Add space around variable declarations in geom.,2018,,
25b1c44,Add space around variable declarations in mesh.,2018,,
8898515,Add space around variable declarations in numerics.,2018,,
aecfa48,Add space around variable declarations in parallel.,2018,,
bf87145,Add space around variable declarations in partitioning.,2018,,
5b15e81,Add space around variable declarations in physics.,2018,,
0007ad9,Add space around variable declarations in quadrature.,2018,,
f37cf77,Add space around variable declarations in reduced_basis.,2018,,
757dfa7,Add space around variable declarations in solution_transfer.,2018,,
5484cd4,Add space around variable declarations in solvers.,2018,,
e9d9927,Add space around variable declarations in systems.,2018,,
7f486d0,Add space around variable declarations in utils.,2018,,
d718df3,Add space around variable declarations in src/apps.,2018,,
0e58990,Update citations.,2018,,
fe4edd5,Merge pull request #766 from jwpeterson/add_space,2018,,
fceede4,Fix a couple issues found while adding unit tests for all_tri().,2018,,
e8aeec5,Add unit tests of MeshTools::Modification::all_tri().,2018,,
7d532ab,Run bootstrap.,2018,,
78b5988,Fix bug when splitting QUAD8s.,2018,,
2b396a2,Merge pull request #719 from roystgnr/hilbert_unique_sort,2018,,
3e43302,./bootstrap is not quite as optional as it once was.,2018,,
1f05182,Update citations.,2018,,
d59aa14,Use __LIBMESH_DATE__ and __LIBMESH_TIME__ in auto_ptr.h,2018,,
a765e10,do not distribute base/getpot_test_input.in now that it is gone,2018,,
e9e5149,we need to keep getpot_test.C now,2018,,
d645949,Remove C++11 features to keep gcc-4.4 happy,2018,,
3ade6d5,clean generated files,2018,,
9e2ae82,fix for PETSc 3.0,2018,,
3dbc046,fix for --disable-mpi,2018,,
d36cd8e,Make Elem::is_child_on_side defined even without AMR.,2018,,
b9e7691,only execute the unit test if PETSc is available and we have a chance of passing,2018,,
1cbbd37,Change operator<<(pair<Hilbert unique_id>) namespace,2018,,
cc12fc9,Added support for reading and writing NodeElems in ExodusII format using the ExodusII SPHERE element.,2018,,
2eb09fa,Merge pull request #211 from libMesh/all_tri_3D_rebased,2018,,
c72f97b,Merge pull request #773 from dknez/exodusII_sphere_element,2018,,
58298be,Update citations.,2018,,
2ad8427,Update traffic.,2018,,
caf7748,Fix BoundaryInfo::sync(ParallelMesh) unique_ids,2018,,
1a13827,Update citations.,2018,,
5bbe026,Revert recent changes to system_projection.C,2018,,
79f1796,Merge pull request #774 from roystgnr/boundaryinfo_unique_id_fix,2018,,
962bd2c,Bugfix for adjoints_ex4 adaptive refinement,2018,,
4fe367d,Fix and reenable AdjointRefinementEE splitting,2018,,
b056941,Cut-n-paste typo fix in adjoints_ex4,2018,,
43187c6,Dirichlet bugfix on refined meshes,2018,,
a235157,AdjointRefinementEE bugfix,2018,,
b0bb0c4,Check version for petsc-dev,2018,,
52b073a,DofMap can report if it is capable of using blocked storage,2018,,
46ff3ed,support for --enable-blocked-storage,2018,,
7e846a4,PETSc BAIJ support,2018,,
0fb83f8,trivial formatting,2018,,
df2b0c5,extend blocksize option to matrices init()ed without the help of the DofMap,2018,,
09bec81,towards add_block_matrix(),2018,,
633e74c,Switch some cout/cerr uses to libMesh::out/err,2018,,
1f54c64,"Not every node of ""this_mesh"" needs to be stitched.",2018,,
1b33ceb,Need to do one final comparison for fuzzy_binary_find.,2018,,
cb58eeb,Adding version of Utility::binary_find() that takes a custom comparison object.,2018,,
5771c42,Use TOLERANCE while sorting the points  this tolerance is independent of the point matching tolerance asked for by the user.,2018,,
1c4b6a0,metis refresh,2018,,
e80824e,refresh parmetis,2018,,
e5fbb39,generated files,2018,,
6461d25,use LIBMESH_TLS instead of __thread,2018,,
f1c6271,Merge pull request #96 from roystgnr/libmesh_out_err,2018,,
1e994fe,Switching to relative tolerance check (relative to the smallest edge length on the surfaces being stitched) in stitch_meshes().,2018,,
c0303c7,Adding misc. MOOSE references.,2018,,
3ff8588,Merge pull request #99 from benkirk/metis_refresh,2018,,
e86d12e,do not build empty files,2018,,
9ecc96f,nevermind  leaving this file will help if some platform requires preprocessor macros for openMP workarounds.  unlikely  but better safe.,2018,,
4a1c13c,Regenerate publication webpage.,2018,,
9654cd8,Update yearly publication counts.,2018,,
4716a07,fix weird NULL comparison,2018,,
b730f79,fix unnecessary comma causing issue for some compilers,2018,,
21d33de,I cover with pgi-13.4 now too.,2018,,
bf82ed0,Workaround for compiler warning.,2018,,
04521f2,Fix for older app Makefiles,2018,,
b466fcc,Updating statistics for April 2013.,2018,,
d2d13e7,Updating Millett 2013 reference.,2018,,
88e1c91,Adding Kirk 2013 reference.,2018,,
1f8be16,Added Swiler 2013 reference.,2018,,
e2ebea3,petsc-3.4: VecType  PCType  and KSPType are now const typedefs,2018,,
52f950a,Fix in config comment,2018,,
f0dbd81,Add macros for thread-local storage,2018,,
133ba15,Merge pull request #102 from jedbrown/jed/petsc-3.4,2018,,
4aea079,Added Widmer 2013 reference.,2018,,
5d66646,Commiting libmesh_config.h.in changed triggered by 52f950a0.,2018,,
6091a56,Updated Bhalla 2013 preprint.,2018,,
6a11870,Updated Bittl preprint.,2018,,
cb6e751,Got copy of Satou paper  they do use Libmesh.,2018,,
549e8de,Boyce Griffith says these papers don't use libmesh :-(,2018,,
56a9ee4,Adding Hu et al tech report.,2018,,
3a43edf,Fix for -Wshadow warning,2018,,
74ceb54,Bugfix for dof_id_type!=unsigned int configs,2018,,
10744c2,Merge pull request #91 from benkirk/blocked_matvec,2018,,
a453f23,"Remove equivalence between ""SHELL"" and standard element types.",2018,,
86386ed,need to use ilu with BAIJ format,2018,,
c08baf8,avoid preallocation error that seems to be triggered by blocked matrix storage,2018,,
20645db,avoid preallocation error that seems to be triggered by blocked matrix storage,2018,,
f4fd670,avoid partial overloading warning (intel 11.1),2018,,
2d90b97,BAIJ API seqence for v3.2 & below appears different - disable feature rather than figure this out.,2018,,
e841a2b,bump version number,2018,,
fb7956f,If we want to force the user to be responsible for parallel consistency (which Roy does - not sure I'm sold) at least we should give them a public member to make it easy.,2018,,
1f5fe72,Test for thread_local support,2018,,
acdb8bd,Propagate threads.m4 change to configure,2018,,
68df695,Fixes for -Wshadow warnings,2018,,
7dce02a,Add Fahrenholtz 2013 reference.,2018,,
fbf41e8,Fix for compilation error,2018,,
30ef1b3,Workaround Eigen::SparseMatrix<T1 T2 short> bug,2018,,
4856c5f,Bugfixes for processor_id_type > unsigned int,2018,,
8591da0,Fixes for numeric_index_type != unsigned int,2018,,
2c5649e,More fixes for dof_id_type != unsigned int,2018,,
795f97a,Updating statistics for May 2013.,2018,,
eb13038,Fix signed/unsigned warning in debug mode.,2018,,
cfcbf67,Added miscellaneous_ex9: Example that demonstrates a discontinuity on an internal mesh interface  which requires the sparsity pattern to be augmented.,2018,,
3.224e+63,Fix for dof_id_type != unsigned int,2018,,
fac9b2b,Rb stuff needs a non-const reference to dof_indices.,2018,,
c3ea18f,Use accessor API for FEMContext.,2018,,
52b4023,Update solvers to use updated FEMContext API.,2018,,
b72ce0d,Need non-const versions of these accessors. I'm not convinced this is the right way to go here  but rolling with it for now.,2018,,
b2d82f4,Updating reduced_basis to use new FEMContext API's.,2018,,
72de92c,Assert on the private data structures.,2018,,
34266d6,Update to use new FEMContext API. Also needed a non-const Elem&.,2018,,
9c757bd,Return a reference to the QBase instead of a pointer.,2018,,
ac9dadd,Now make everything protected/private. The library builds for me  but the examples still need to be updated so likely make check will fail at this point.,2018,,
a54c4b2,Updated adjoints_ex1 to use the new FEMContext API.,2018,,
0a25486,Fix for PetscInt != PetscErrorCode configurations,2018,,
e152bb7,Update adjoint_ex2 for new FEMContext API.,2018,,
b9c13e2,Update adjoints_ex3 to use new FEMContext API.,2018,,
4f1b73e,Updated adjoint_ex4 to use updated FEMContext API.,2018,,
1068ade,Updated adjoints_ex5 to use updated FEMContext API.,2018,,
8f02d31,Updated fem_system examples to use updated FEMContext API.,2018,,
e832afe,Commit the usage statistics PDFs  not everyone has Matlab/Octave easily accessible.,2018,,
fcea5fe,Adding all Moose talks from M&C2013.,2018,,
0a6375c,Updated reduced_basis examples to conform to new FEMContext API.,2018,,
86336a2,UPdated vector_fe examples to conform to new FEMContext API.,2018,,
78db499,Reduced Basis change: Added new assembly classes that contain references to RBConstruction objects. These references are often needed in practice  e.g. to access the mesh.,2018,,
ea5e42f,Removed RBEIMAssemblyWithConstruction  since we can actually get the info we need (e.g. boundary ids) from the FEMContext in most cases,2018,,
7c7cbcc,Removed RBEIMAssemblyWithConstruction  since we can actually get the info we need (e.g. boundary ids) from the FEMContext in most cases. Also removed elem_assembly_with_construction.h for the same reason.,2018,,
e0eaaf9,Added DGFEMContext. Extends FEMContext to enable assembly of DG terms.,2018,,
f07712f,Some RB changes related to DGFEMContext  and the changes to Makefile.in etc as well,2018,,
b8ef5dd,Updates to DGFEMContext,2018,,
407bf6a,Reduced basis updates related to DGFEMContext. Use a DGFEMContext instead of FEMContext for increased generality.,2018,,
ed7cad4,Removed miscellaneous_ex9 from this branch,2018,,
7a596a5,Bugfix for int!=PetscInt configuraitons,2018,,
7cf3b30,be silent when generating .depend  and remove .lo files for clean,2018,,
80a8f2d,prepping release files  and updated automation script,2018,,
11e18c5,clarify comment,2018,,
2f79a1e,updating NEWS for next release,2018,,
739765f,Added libmesh_experimental() in the DGFEMContext constructor.,2018,,
ac674fb,Bug fixes to DGFEMContext,2018,,
e30bcfa,Adding Rossa and Coutinho preprint.,2018,,
3581ba3,Fix broken libtool script with install-data-hook commands.,2018,,
c0d77a4,Make nCalls column have width 11.,2018,,
a575f37,Reduced Basis change: Removed singe_matrix_mode. The purpose of this mode was to provide a low-memory version  which re-assembled matrices rather than storing them. But it wasn't used and therefore wasn't well tested  and it complicated the code for little benefit. If this functionality is desired in the future  better to put it in a subclass.,2018,,
6769426.0,Patch from @dknez to fixed reduced_basis_ex2 for FEMContext API updated.,2018,,
4.318e+32,Patch from @dknez to fix reduced_basis_ex7 for FEMContext API changes.,2018,,
bddd1de,Fixes for PetscInt!=int compatibility,2018,,
3539428.0,"Revert ""Now make everything protected/private. The library builds for me """,2018,,
d25f5fc,Merge pull request #108 from pbauman/privatize_fem_system,2018,,
72dcf7d,Update NEWS for FEMContext API.,2018,,
948a35e,Adding Kirk AIAA  Corsini JFE  Widmer JMBBM  and Tahir Acta Materialia papers.,2018,,
6.651e+68,Fixes for *_id_type > int,2018,,
1a4a619,Default to 32-bit XdrIO for now,2018,,
fa7d53d,unsigned int -> dof_id_type fix,2018,,
f6c6bca,Confirmed Corsini paper does use libmesh.,2018,,
7fa20be,Merge pull request #111 from libMesh/bigids_fixes,2018,,
1d60493,Fix for syntax highlighting,2018,,
4.581e+102,Fix for printing with 1-byte id types,2018,,
db36276,Formatting fixes for --with-processor-id-bytes=1,2018,,
df4eb94,remove caching from hermites,2018,,
ea9bca1,Bugfix for Xdr with non-32-bit dof_id_type,2018,,
b3281e9,Avoid unused variable warnings when --disable-blocked-storage,2018,,
7b807c5,Dummy change to README to see if I can re-sync the github web interface.,2018,,
8b72572,Merge pull request #112 from friedmud/hermite_cache_removal,2018,,
aaae75d,Add Vikram to developers page,2018,,
6b99352,Adding directories to .gitignore,2018,,
507071f,add tests to beautify rule  but not running it yet,2018,,
bdfb099,proper quoting of shell variable in tag message,2018,,
3e7299d,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
6d96674,default blocked DOF support to off for 0.9.2 release,2018,,
e2ca564,Updated statistics for Jun 2013.,2018,,
aaeb11c,Fixing typo in error message.,2018,,
61d1605,Make adjoints_ex3 solver verbose,2018,,
78d9855,Add absolute_residual_tolerance to adjoints_ex3,2018,,
3f8ade9,Reorganized the examples into subdirectories. The comments in each example still need to be updated to reflect the new numbering scheme.,2018,,
469639e,updated makefile,2018,,
5364.0,Massive whitespace-only patch.,2018,,
42c7883,"Fix ""make all"" examples target to handle new refactoring",2018,,
5ac7ee7,Bugfix for Real!=double,2018,,
8a557e2,Fixes for --disable-exodus,2018,,
8ca5c63,Updated svn:ignore,2018,,
28ccb03,Move Physics  QoI functions into their own classes  this is the first step in making diff_system more flexible with them.,2018,,
71d6369,cleaned up some comments in examples/reduced_basis,2018,,
911e70e,another small change to reduced_basis/examples comments,2018,,
e46bbbe,"Making the Parameters class inheritable (i.e. added a virtual destructor and a number of virtual methods). In addition a virtual ""set_attributes"" method was added so that extended parameters could be updated as needed when calls are made to the base-class templated ""set"" method.",2018,,
44992f0,rbOOmit change: updated EIM classes  also changed truth solution viz from GMV to exodus  and added some simple methods to RBAssemblyExpansion  RBThetaExpansion.,2018,,
be8e19b,rbOOmit change: added reduced_basis/reduced_basis_ex4  which demonstrates EIM,2018,,
5fe1495,Fix Makefile for LIBMESH_DIR undefined case  modern libMesh compiler option env names,2018,,
f723195,small change to output printing in TransientRBConstruction,2018,,
14dc4a3,need to pass a version string to read_header in RBEvaluation,2018,,
5382f55,fix to rb_eim_evaluation.C for LIBMESH_DIM == 2,2018,,
c57452b,rbOOmit change: added non-dirichlet matrices to TransientRBConstruction,2018,,
1820ad6,In the C++ standard std::complex<T>::real()/imag() return T  not reference-to-T?  Anyway  it looks like some real compilers (g++ -std=c++0x  and I'm told some PGI versions) enforce that.  Adding workarounds.,2018,,
5da524d,Fix some compiler warnings,2018,,
ba4442a,"Fixes for ""unused variable"" warnings",2018,,
30a8a13,With -std=c++0x I see errors from down-conversion of long double to double.  Explicit static_cast fixes them,2018,,
3ae65a2,"MAKECMDGOALS doesn't work here when two commands are given on the same line  e.g. ""make clobber all""",2018,,
191a18c,Updated publications for Jan 2012.,2018,,
eb9b93b,force positivity of the stability constant,2018,,
1a17092,Breaking apart System from Physics classes  giving the latter their own subdirectory.  This breaking-apart process is incomplete  TimeSolvers aren't yet using the physics member rather than the physics superclass.,2018,,
8256040.0,Const correctness patch from Paul Bauman,2018,,
b261e3c,,2018,,
607d7e8,Bugfix from Robert Weidlich for tensor assign(),2018,,
2928868.0,Refactored System::point_*  introduced point-already-located versions,2018,,
2be1a71,Remove unused dim variable.,2018,,
f5c4a38,Add openmp check for configure,2018,,
444b078,Turn on keyword expansion in all files.,2018,,
855770a,Added LGPL stuff to files in src/apps.,2018,,
93ae8d7,Removed SVN keywords from all C/h files.,2018,,
41030ed,Removed SVN keywords from examples  m4  contrib  and miscellaneous other files.,2018,,
1e478c8,Commented out the AC_REVISION macro.  This only modifies the configure script  and is useless if you run bootstrap in git anyway.,2018,,
10c9d2e,Make the examples parallel-buildable... again.,2018,,
98daa2d,Adding another useful utility from my private apps,2018,,
bdd38ba,Making meshdiff slilghtly more informative in unusual cases,2018,,
531b2f9,Building fparser in contrib,2018,,
16001c5,fix for --disable-fparser,2018,,
45520a1,Set svn:ignore  removing regenerated inc files properly,2018,,
a976b26,Wait  this one isn't autoregenerated...,2018,,
7c1ed54,gcc doesn't want to generate dependencies when there's a missing include file,2018,,
dc2b63c,"Let's not rebuild fp_opcode_add.inc before every single ""make clean""...",2018,,
8d04b3a,Adding gitignores and some small Makefile fixes for fparser.,2018,,
2.031e+64,fparser fixes,2018,,
f14384a,Fixing sed issues  and by that I mean getting rid of it!,2018,,
d62feee,We should be able to declare even parameters with default values as unnamed parameters,2018,,
3d3a03e,Fix for misparse,2018,,
a26478e,Adding ZeroFunction and ParsedFunction subclasses of FunctionBase,2018,,
15cc5dc,Filenames should match libMesh conventions  cpp directives shouldn't be buggy.,2018,,
8befce2,set svn:executable.  for some reason my ICE/SuSE box was not treating it as such,2018,,
0dd21ff,"Revert ""fparser fixes""",2018,,
6722f8a,"Removing some redundant executable targets  adding a ""make extra"" option for the others.",2018,,
d50c0f2,Fix fparser builds when LIBMESH_DIR is undefined,2018,,
26fe4d2,Disable fparser optimization for everybody  Roy gets buggy results in his tests...,2018,,
1.176e+42,New links on webpage,2018,,
4f771e1,Fix perl calls in Makefile.,2018,,
44933d5,Roy says optimizations are working on Linux  only turn them off for Mac OSX.,2018,,
16bf997,Don't introduce perl dependency when not necessary.,2018,,
4acf1e0,Handle cNop case  now that the enum is defined even when optimization is off.,2018,,
55d4cf6,Print out Newton warnings in inverse_map() only in devel/dbg modes.,2018,,
fd8c768,"""make distclean"" ought to get rid of .depend files too",2018,,
f504ec2,Bugfix: arbitrary function projections onto 2D/3D HERMITE spaces were zeroing out mixed partial derivative based degrees of freedom!,2018,,
0.0,Fixing another similar Hermite projection error...,2018,,
5dd39fa,Updated .gitignore,2018,,
255b5e1,Use $(libmesh_CXX) instead of g++ in fparser Makefile.,2018,,
f5a8740,Implementing Elem::close_to_point().,2018,,
b872afd,Moved mesh_function.C from src/numerics to src/mesh to be consistent with the header file.,2018,,
e1fc6ee,object-based send list and sparsity pattern user interaction,2018,,
7e15406,set the initial time regardless of log_events status,2018,,
b7971f2,Removing atavistic code - this bit of coarsening got refactored into FEBase long ago.,2018,,
88c8c83,Added missing CHKERRABORT,2018,,
a468794,Commenting out unused variables,2018,,
053e5cf,We should be able to ostream<<Elem,2018,,
4080c88,Make debugging code more useful when not in debuggers  disable it when running with NDEBUG  and avoid compiler warnings at the same time.,2018,,
f7b195a,Template FunctionBase (and subclasses as appropriate) around Output type,2018,,
19589f5,Add WrappedFunction to allow old-style libMesh pointer-to-function arguments to be handed to routines expecting FunctionBase functor arguments,2018,,
40f2cd1,System::project_* now accepts FunctionBase functors as a (preferred) alternative to pointers-to-functions,2018,,
3a28f8c,Rename single-component-returning FunctionBase method - there was no good reason for this much overloading and it was leading to warnings and potential errors.,2018,,
7b3e6b0,Avoid unused variable warnings.,2018,,
e674357,Add FunctionBase::clone() and subclass implementations,2018,,
511f9b7,Move TBB functor classes into system_projection.C  we never needed these to be nested classes or taking up header space.  Switch to per-thread-cloned functors.,2018,,
8f1eda9,Add functor-based options for ExactSolution,2018,,
8d2016f,Fix missing whitespace,2018,,
e309fea,Don't leak memory if the user calls attach_exact_*(functors) multiple times.,2018,,
57d1e0a,Most FunctionBase subclasses are fully initialized from construction time.,2018,,
b9d2ceb,Make sure functors are properly init()ed before use.,2018,,
883cfb9,Make sure we've init()ed functors properly,2018,,
1f18e36,rbOOmit change: avoid calling read_header in RBEvaluation  since this crashes when n_vars > 0. Instead  we should initialize an EquationSystems object using EquationSystems::read()  and before calling RBEvaluation::read_in_basis_functions(). Also made corresponding changes to the reduced_basis examples.,2018,,
2548963.0,Add ifdef's around Eigensystem.,2018,,
2380929.0,Adding interfaces to get/set the current nonlinear iteration number in NonlinearSolver.,2018,,
a767fbf,Explicitly include wrapped_function.h dependencies,2018,,
90cf0ff,Add functor options to ExactErrorEstimator,2018,,
7a3ff15,ZeroFunction  ParsedFunction bugfixes,2018,,
76ab863,Reset current nonlinear iteration count in clear().,2018,,
8c7216e,Fix for DenseVector<Gradient/Tensor> with --enable-complex,2018,,
9ef4a6d,Fix subexpression parsing  use a delimiter that doesn't conflict with the non-unary function call argument delimiter...,2018,,
cb89680,Throwing some binary xdr and some ParsedFunction testing into adaptivity example 5,2018,,
4512bb8,Adding an Optimize call couldn't hurt.  Unless broken optimization starts hurting people.  Which it almost certainly will.,2018,,
36c1cf4,Fixing up xdr --enable-single support,2018,,
e8024c1,Pass $(fp_CXXFLAGS) down to the building of utility files.,2018,,
bbe535f,Define typedef boundary_id_type,2018,,
a3833d2,Patch from Jed Brown: More generic preallocation of matrices  such that type can be changed with -mat_type,2018,,
a42d9a5,Fix for periodic boundary conditions in 1D,2018,,
727e44b,parsed_function enhancements,2018,,
648621e,Adding dependency for bytecodesynth.cc for parallel makes Silencing most of the make commands,2018,,
6fcdf80,Use braces rather than hash for delimiting vector-valued ParsedFunction subexpressions,2018,,
45abc40,allow caching with TBB in hermite shape function calculations by employing thread local storage,2018,,
461b365,Added Elem::is_edge_on_side(),2018,,
0a1d964,Adding System::boundary_project_* functions,2018,,
974c06b,Fix unused variable warnings,2018,,
12d6bcf,fixup an unintended full localization of the solution vector during projection,2018,,
0c2c054,Use DenseMatrix::vector_mult_transpose where appropriate,2018,,
81859a9,Don't die in the 0D case,2018,,
b197fba,No  we want to *apply* periodic BCs in 1D  not skip them.,2018,,
418a8b4,Added discontinuous Lagrange basis (L2_LAGRANGE),2018,,
120bb8a,Added eigenproblems_ex3: Computing eigenvalues of two isospectral drums,2018,,
be6359c,Fixup constrain_element_matrix for the case where each matrix block is represented by a separate DenseMatrix,2018,,
3809dd7,Fixed get_continuity in fe_l2_hierarchic.C  it should return DISCONTINUOUS. Also  change compute_constraints to a NOOP.,2018,,
c7e0276,removed monomial_n_dofs_per_elem in fe_monomial.C  since it's identical to monomial_n_dofs (all dofs are elemenet dofs in this case),2018,,
d7e7ed4,added Driscoll's reference eigenvalues to the comment in  eigenvalue_ex3,2018,,
a841f0a,added extra SLEPc ifdefs to eigenproblem_ex3,2018,,
d5ac1c6,Fixing indexing error in constraints,2018,,
7c45089,print out the number of matrices each system has,2018,,
46ccc9f,NumericVectors ought to be closed() before it gets zero()ed  and when they aren't we'd rather hear that from libMesh than wait until it propagates to PETSc,2018,,
f083b47,Need to close() these adjoint_rhs vectors  or the next time we try to assemble them will fail.,2018,,
1Dec0194,Typo fix,2018,,
dc4e19d,We get a SLEPc error with --enable-complex on this one,2018,,
778e795,Adding support for additional variables in the parsed function interface.  Users may request a writable reference to that parsed variables location where they can supply different values between evalations,2018,,
4cb1652,Eigenproblem example 3 needs Exodus support,2018,,
1ea8cc9,Search in Fedora/Ubuntu default directory for Eigen,2018,,
a378f2c,else,2018,,
ced1f2a,fixed for eigen.m4,2018,,
23addb2,We don't want arbitrary LIBMESH_DIR here,2018,,
575f164,Code (originally based on a patch from Boyce Griffith) to allow heterogenous linear DoF constraint equations,2018,,
7312f7d,Move variable_scalar_number info into Variable class,2018,,
9beb678,Adding options for dirichlet boundary enforcement,2018,,
7373940.0,ifdef/namespace ordering,2018,,
5c62587,documentation,2018,,
bbd3fa9,include requirements,2018,,
9654030.0,Fixed ifdef.,2018,,
b1dc21c,If we are going to create these temporary int variables  we should probably use them...,2018,,
3eebcda,Newer version of autoconf used  enable_dirichlet added,2018,,
fdaf759,apparently different anonymous namespaces are different - makes sense but surprised me.,2018,,
d7d3e9c,Time-dependent dirichlet constraints need to know the time,2018,,
a17bd11,Use System::time rather than a Parameter where appropriate,2018,,
84f7a73,Remove Parameters argument from new APIs where we don't need it  make it a const Parameters argument on old APIs where we don't need to modify it.,2018,,
b95d9ee,Add a homogeneous option to enforce_constraints_exactly,2018,,
fa5e67a,Make it easy for System and subclasses to disable caching (pre-assembled matrices  preconditioner reuse) before a solve.  The UniformRefinement estimator is going to need this...,2018,,
e684355,Fix QoISet::iterator definition  add QoISet::begin() to provide iterators,2018,,
430aea4,The UniformRefinement estimator never got updated to handle all the QoISet based API changes  and it was breaking when used as a dual subestimator for adjoint residual refinement.  This patch fixes it in my tests.,2018,,
497006b,Adding MeshTools::Generation::build_extrusion,2018,,
9ac65e3,Fix atavism in example error message,2018,,
3b54da1,Adding more debug-mode code to make Laspack closed() behavior match PETSc behavior.  Still a work in progress.,2018,,
3e45c36,Fix for debug-mode SERIAL/Laspack closure tests,2018,,
7415d41,Ignore dependency generation error messages from when mpfr isn't configured  svn ignore gmon.out files from when profiling mode is used.,2018,,
f2c2ea7,Updated svn:ignore,2018,,
086e85a,Forward declaration and preprocessor #if fixes for various --disable options,2018,,
969b2f4,Reduce header dependencies slightly,2018,,
7438f0a,Forward declarations need to be in the right namespace...,2018,,
5394b8f,Make pool_allocator.h pass test_headers.sh when !LIBMESH_HAVE_BOOST.,2018,,
331031f,Fix heterogenous constraints with --enable-complex,2018,,
719afcf,Fix bug with heterogeneous constraints on ParallelMesh,2018,,
8.264e+82,Bug fix for potential multiple insertions of duplicate boundary ids,2018,,
93f3d42,BoundaryInfo::add_node() method that takes full sets of nodes,2018,,
ac470f6,Handle boundary ids when building an extrusion,2018,,
590589e,Give spheres a 0 boundary id,2018,,
de4a284,Patch from Benjamin Spencer:,2018,,
0a804ed,Fixes for extrusion boundary id bug  extrusions of distributed meshes,2018,,
a1a9937,Adding an interface to GetPot to detect when variables are overridden. This can happen when a variable is supplied twice in an input file or two similar sections are supplied in different locations in an input file.,2018,,
ef7b669,We don't try to initialize a vector with a pointer - the default empty vector constructor will do fine for the NULL case.,2018,,
41b0b6a,Dirichlet boundary gradients don't apply to most problems  ought to be an optional argument,2018,,
9b01b21,Don't try to add Dirichlet constraints on already constrained DoFs.,2018,,
a90b9db,Boundary operations need to skip element interior DoFs...,2018,,
9c14d62,Fix boundary projections on higher order elements,2018,,
045ddce,Don't skip Dirichlet constraints in 1D,2018,,
42f2cbd,Fix capitalization and rhs bugs with DofMap::get_info(),2018,,
a04b71b,Element constraint methods ought to default to homogeneous constraints even in heterogeneous cases.,2018,,
c485b97,Do homogeneous enforce_constrants_exactly where appropriate,2018,,
fd15d85,Define and use LIBMESH_ENABLE_CONSTRAINTS.,2018,,
0144c57,Use LIBMESH_ENABLE_CONSTRAINTS in code that doesn't care what generated those constraints.  Fix a couple badly nested ifdefs that could fail on odd configure option combinations.,2018,,
2713bda,Fix mistake in comment,2018,,
0d8ea46,Moved contrib/boost header files to a place where boost's configure script will find them.,2018,,
446ace6,n_local_constrained_dofs() is cheap enough to print and might be useful to know,2018,,
422a0d5,Bugfix to make sure that after prepare_for_use  a manually partitioned mesh has a correct n_partitions() count even if it's not partitioned by a Partitioner.,2018,,
cae0616,Don't ever converge on a full Newton step that actually *increased* the residual,2018,,
ac0be69,Write element truth table to exodus to improve performance,2018,,
f81074d,Minor changes to use libmesh indentation  initialization styles.,2018,,
1e738ab,"Revert ""Minor changes to use libmesh indentation  initialization styles.""",2018,,
613dfac,Adding 0.7.3 changes,2018,,
86a8821,Don't unnecessarily close() PetscDiffSolver::solve() inputs - this could actually throw away preallocation information for an unassembled jacobian.,2018,,
5d19c1a,No  *really* make sure that a ParallelMesh cached n_partitions() is correct.,2018,,
f2b6e97,Patch from David Knezevic fixing bugs with the AnalyticFunction updates,2018,,
69fd181,Supply template argument to FunctionBase<>  we see problems with clang otherwise.,2018,,
4472af4,Fix for heterogeneous constraint vector construction,2018,,
fadd01d,print_*_constraints now explicitly prints only local constraints  rather than printing only semilocal constraints and then not telling you.,2018,,
06d297b,Modified introduction_ex4 to use DirichletBoundary instead of a penalty approach,2018,,
25d9c97,Modified introduction_ex5 to use DirichletBoundary instead of a penalty approach,2018,,
47b8a7b,clang is like icpc: it claims to be a recent gcc version  but it doesn't understand all the gcc pragmas.  Liars.,2018,,
fcfbdd2,Don't rely on implicitly casting false to NULL,2018,,
a12f5c2,Pass partitioner to TBB when provided,2018,,
214a667,Use a named object here  we don't want a temp to be destroyed too early.,2018,,
1cbacca,Add newline at eof,2018,,
7c2c856,Make sure even templated functions are declared before use.,2018,,
19076d9,Handle dependencies of files with .cc extensions,2018,,
bef8097,clang doesn't understand -MG.  Other compilers might not even grok -MM.  Best to just use our perl script for dependency generation.,2018,,
38f45c0,Reverting r5381 - commited wrong copy of file...,2018,,
bc24818,Forward declarations  partial template specializations for fpaux.hh  from the right file this time.,2018,,
d113b91,clang++ appears to be extra picky about how this namespace gets used  possibly a problem when trying to do precompiled headers?,2018,,
f0e6c28,This #define gets set in the Makefile,2018,,
3777981.0,clang++ warns when a friend declaration or forward declaration of struct refers to a class or vice-versa.,2018,,
a6f9dce,Patch from Jungho Lee for clang compiler detection,2018,,
2ef3899,"clang likes forward and friend declarations of structs to use the ""struct"" keyword",2018,,
fe14cf8,Added newlines to ends of files,2018,,
b61bdd0,Avoid returning references to (even const) temporaries,2018,,
456e4de,do not initialize an object with a null pointer,2018,,
50c2cb4,watch out for ambiguous time,2018,,
f6b0c2e,standalone headers,2018,,
5500806.0,Let clang ignore warnings on 3rd party files,2018,,
1dcb827,Add end-of-file newlines to stop clang's warnings,2018,,
d4d7ad5,Fix for 1d-only and 2d-only,2018,,
309afad,Write element truth table to exodus to improve performance,2018,,
8c03e23,Verifying that some of the flagging methods are always called in parallel,2018,,
67019bb,,2018,,
4627636.0,More prompt mesh status output during refinement,2018,,
617a27f,Bugfixes and additional options for _INF norms in System::calculate_norm,2018,,
1779b60,When debugging let's make sure that MeshRefinement isn't given a parallel-inconsistent error vector,2018,,
a66498b,ParallelMesh-compatible version of MeshRefinement::flag_by_nelem_target,2018,,
fd59143,Fix unused variable warning,2018,,
a2fbc80,,2018,,
e5fef98,rbOOmit change: Use DirichletBoundary to impose dirichlet boundary conditions. Also made the corresponding changes in the RB examples.,2018,,
ae2915e,rbOOmit change: added zero_constrained_dofs_on_vector,2018,,
86905cd,Bugfix for estimate_errors() with differing per-variable error norm types,2018,,
8915883.0,Commenting out overzealous assertion,2018,,
6.799e+26,Give more diagnostic info when a dynamic_cast fails,2018,,
1d0128d,"Avoid ""unused variables"" warnings in non-debug modes",2018,,
942e526,rbOOmit change: added rb_eim_theta.C to avoid linking error with METHOD=pro for reduced_basis_ex4,2018,,
c105c85,Add a Make target for building annotated assembly files from src files.  This is somewhat useful for optimization purposes.,2018,,
c1fde1d,Give default empty implementations for FunctionBase::init and ::clear,2018,,
0cef619,Avoid warnings in the LIBMESH_DIM==1 case,2018,,
7.296e+28,Avoid underflow with Real==float,2018,,
17b7013,FunctionBase::clone ought to be const,2018,,
80bdd69,A DirichletBoundary can take a const functor now that that's cloneable.,2018,,
a2620cb,added systems_of_equations_ex4  a linear elasticity cantilever problem,2018,,
c0e6708,Skip the 2D cantilever in 1D-only builds,2018,,
b97592c,rbOOmit examples: changed equations_systems.xda to equations_systems.dat  since it's not xda format...,2018,,
19edfd3,We should be more flexible about when time_evolving() can be called,2018,,
2a7291c,Switching from penalty to true Dirichlet BCs gives better solver behavior,2018,,
c7d6890,Fix from David Andrs for WrappedFunction returning SCALAR components,2018,,
31c2fa8,One more bad-starting-index fix,2018,,
b8aa2a1,Updating usage message,2018,,
5703ab1,Bugfix for point_value/gradient/hessian,2018,,
9de6a3c,Add an output  to exercise postprocess() and point_value().  Should have done this earlier.  Thanks to Vikram for catching that point_value() bug I just fixed.,2018,,
428be14,rbOOmit change: rb_evaluation basis read/write,2018,,
59e696f,removed obsolete commented code in reduced_basis_ex2,2018,,
48ce766,set default Krylov solver to CG for linear elasticity example (via the Makefile commandline)  since CG is much faster than GMRES for this symmetric PDE,2018,,
b9883ea,Added reduced_basis_ex5  an RB version of systems_of_equation_ex4,2018,,
ca74f9b,Use AC_CHECK_HEADER instead of AC_CHECK_FILE where appropriate  or we can't configure with a cross-compiler.,2018,,
152910.0,Built configure with updated m4 files,2018,,
ac4fc9e,Temporarily reverting m4 changes  AC_CHECK_HEADER is going to need some more set up.,2018,,
5bcd220,We don't need a libmesh_config.h dependency here  all our source files only include gzstream if configured to anyway,2018,,
cc36fb8,Cross-compilation-compatible configure (say that five times fast)  take two.,2018,,
5826117.0,These reduced_basis examples are segfaulting with Trilinos and Laspack.  Need to look into that...,2018,,
81c1b66,Don't bother logging unless we're actually doing something,2018,,
395bdb5,Even with out-of-mesh mode disabled  there are cases where a PointLocator will be given an out-of-local-mesh point on a ParallelMesh.  We can't error out on such cases  any assertions will have to be done at a higher level (asserting that the locator doesn't return NULL).,2018,,
78ffcd9,reduced_basis_ex5: increased Greedy stopping tolerance,2018,,
1b605eb,added systems_of_equations_ex5: linear elasticity with a constraint,2018,,
9119fad,systems_of_equations_ex5: update comment,2018,,
f6d58a4,systems_of_equations_ex5: update comment,2018,,
06f13bb,Fixes for --disable-fparser,2018,,
6a2ac69,Intel compilers can come with tbb support built-in  in which case no additional include paths are necessary.  Let's try and make sure it's enabled in that case unless the user deliberately disables it.,2018,,
0d783cd,Re-bootstrapped configure with new tbb.m4 changes,2018,,
fdf446e,Fix for tbb.m4 builtin-detection patch,2018,,
c228253,The user might want max_nonlinear_iteration=0 for testing purposes,2018,,
bbee5ba,TBB requires libpthread  and in case nothing else brings it in  we need to.,2018,,
0f07ddc,Make FE order and family configurable  but default to previous (cheap) values,2018,,
5541a8f,simple syntax change to avoid confusing doxygen,2018,,
4e4378a,Ignoring example data files.,2018,,
9b11624,Make grepping through petscconf safer  hopefully.,2018,,
bcd11bd,"My Trilinos 10 install was complaining about not finding MPI or PETSc headers during our configure tests  this m4 change fixes that.  Now Trilinos 10 complains about polymorphic PETSc functions included via ml_petsc.h.  They do know that we haven't been supposed to wrap PETSc headers in ""extern ""C"""" since somewhere around 2.3.0  right?",2018,,
44b9cc7,Regenerate configure with the latest petsc/trilinos changes,2018,,
412a5d1,AC_CHECK_HEADER can't be nested without disabling its cache  so let's do the two calls in an if/else pattern instead.,2018,,
c2c66ce,Fix incorrect quotes,2018,,
316295.0,Hackish workaround for petsc.m4 vs trilinos conflict,2018,,
5f9cba4,Fix for Trilnos without ML case,2018,,
7b39ae1,Adding a FIXME note to a bad algorithm I just noticed,2018,,
93ad3f6,Adding support for reading/writing Block  Sideset  and Nodeset names to ExodusII meshes. The mesh generation routines will also generate sideset names.,2018,,
d2362ca,Example docs hadn't been updated since the categorization...,2018,,
37ac93a,Updating (at least partially...) headers in example comments,2018,,
3546930.0,Updated svn:ignore,2018,,
fb9b352,Fix for missing TBB case,2018,,
01ec522,Added FEMContext::{fixed_ }point_{gradient hessian} methods,2018,,
cc9298c,gzstream configure fix,2018,,
3287ee3,Bugfix for example==NULL case,2018,,
1bcf1e9,Set MAT_NEW_NONZERO_ALLOCATION_ERR by default for PETSc matrices,2018,,
ae64587,Fixed up comments in RB examples for the website,2018,,
c789093,fixed up header comment in transient examples,2018,,
d37a2ff,run examples to completion,2018,,
a90d2ad,words,2018,,
122d833,MatSetOption only took two arguments in PETSc 2.x.,2018,,
3555c51,Patch from Dmitry Karpeev:,2018,,
36e489c,Adding example from Dmitry Karpeev which makes use of the new PetscDMNonlinearSolver.,2018,,
8748225.0,rbOOmit change: Changed the API to reduce the number of raw pointers. Use getters/setters instead.,2018,,
8f1de05,Use .e for exodus output for consistency with other examples,2018,,
8d11ab9,Removing overzealous check in reading exodus 1D meshes,2018,,
578e7a7,fix for petsc 3.0.0,2018,,
4056c30,Adding on_reference_elem(NODEELEM) implementation avoids making a debug-mode assertion overzealous,2018,,
d2f8fa7,Checked and answered a question in comment  saving answer there for future reminders.,2018,,
5de3ab9,Clean exists in --disable-second and --disable-periodic cases,2018,,
5a91807,One more fix for compiling in --disable-second case,2018,,
64c57f2,Being able to test LIBMESH_HAVE_PETSC and PETSC_VERSION_LESS_THAN in the same #if line is a decent thing to enable.  Hopefully this fix unbreaks our --disable-petsc builds,2018,,
7ed41f6,This isn't the only problem this example has in 1D/2D  but it's a start,2018,,
b798236,A few more specializations for users.  This also prevents linker errors in misc ex7 in the single and triple precision modes.,2018,,
4faa811,libmesh_example_assert only works in main(),2018,,
d938bc9,Disable misc ex7 on non-PETSc builds  and for dim > LIBMESH_DIM,2018,,
7b7ff1b,Set svn:ignore,2018,,
22896bb,Add a BinaryTree - PointLocator wasn't working with --enable-1D-only before,2018,,
8e45ffd,Misc ex7 won't work with ParallelMesh until periodic boundaries do.,2018,,
28f1fbe,Check that strings are not too long when writing Exodus files.,2018,,
3208db1,Let's use C++ functions to copy strings  not strcpy.,2018,,
b5c27fa,Enforce unofficial libmesh coding guideline for spacing between function bodies.,2018,,
8ad6b69,"Copy ""make doc"" example output to screen too",2018,,
a3bb106,Merging some m4 changes from automake branch.  This passes initial tests  time to let buildbot pick it up and play.,2018,,
4222abf,Set top_srcdir for compatibility with automake-oriented macro definitions,2018,,
9fa7509,added new init function to PetscMatrix  based on a vector n_nz and n_oz. Also  added get_eigenvalue to EigenSolver which (unlike get_eigenpair) does not retrieve the eigenvector.,2018,,
c1196fd,more automake masquerading,2018,,
ff30695,Keeping any failed cases around makes it easier to test and fix them,2018,,
21978b6,Get typo fix propagated from sfc.m4 to configure,2018,,
9fc4c9f,"G++ is getting more strict - we can't use ""NULL"" without including cstddef",2018,,
9fa5f73,More fixes for the automake->trunk m4 sync up.,2018,,
33390db,m4 fixes,2018,,
6c33e3f,m4 fixes,2018,,
a6bd4e8,Remove now-redundant AC_ARG_ENABLE calls and conditional blocks,2018,,
4ca8a19,Make some PatchRecovery members protected:  this might be useful to anyone extending it  but specifically it'll be necessary to merge in Vikram's weighted patch recovery class once the bugs are worked out of that.,2018,,
f8c5d5a,Fix linking against tecio,2018,,
1a81cf3,rbOOmit change: added get_rb_theta_expansion() to RBEvaluation,2018,,
ceff70a,no optimizer on cygwin,2018,,
b6ff9b5,Adding more cstddef includes to headers that use NULL,2018,,
88260ca,grammar_data.cc is a generated file  so we should probably delete it during 'make clean'.,2018,,
4ff012f,Ignore generated files.,2018,,
29b3529,Regenerate configure to pull in Ben's fparser.m4 change,2018,,
91d0b27,Added DofMap::remove_dirichlet_boundary(),2018,,
0cf319f,I just ran into an application bug where point_value() was being called on an element which didn't contain the point.  It would be nice if such bugs were runtime errors (at least in debug/devel modes) rather than harder-to-catch numerical errors.,2018,,
3f4a244,BoundaryInfo::sync could fail for some partitionings of some mesh types.  Fixed now.,2018,,
cf62a79,Two tweaks so that Elem::print_info() will work on Side proxy objects as well.,2018,,
8d26fa4,Slight optimization  major bugfix (for heterogenous constraints) added to process_constraints.  This ought to fix broken interactions between dirichlet constraints and anything that constraints with respect to them.,2018,,
c809136,Don't leak sout,2018,,
a398b0a,Fixes for style and performance issues found by cppcheck,2018,,
0f742f2,Adding static_analysis make target,2018,,
3c045bc,Adding another static_analysis tool - Google's cpplint.py  with support for .C extensions tacked on in the source code and some warnings disabled via the command line.,2018,,
079e73e,I'd accidentally committed some deliberately-broken code that I was throwing at static testing tools.  Let's get rid of that now...,2018,,
727fe0a,Don't echo commands in fparser's .dep target.,2018,,
afac74a,Some initial cleanup according to suggestions from cpplint.py,2018,,
132a31c,cpplint output fix,2018,,
7164c8d,Bugfixes/enhancements for the Abaqus reader: * Fixed bug in reading comma-separated values in Abaqus reader. * Allow for general Abaqus->libmesh node mapping. * Better code for reading comma-separated element connectivities.,2018,,
9364dfe,Users who want a carriage return after printing a TypeVector (or Point  etc) can print one themselves  users who don't want a carriage return should be able to omit it.,2018,,
8905bbf,Check for duplicate HilbertIndices as they're being generated  or we'll have a much more confusing error later in the I/O process.,2018,,
1c84e30,Using cerr is necessary if we hit duplicate hilbert key errors on processors other than 0.,2018,,
728d156,Fix for --enable-complex,2018,,
734c0ba,rbOOmit change: renamed RBParametrizedObject to RBParametrized  and moved parameter ranges into RBParametrized so that we can check validity in set_current_parameters.,2018,,
45450d2,rbOOmit change: API change  renamed current_parameters to parameters in RBParametrized  and subclasses.,2018,,
6ca1330,rbOOmit change: added parameter initialize from file to RBParametrized. Useful in the online stage.,2018,,
9c32386,rbOOmit change: removed superfluous log,2018,,
669d603,Fixing stupid bug in TetGenIO.,2018,,
c474d70,Updated svn:ignore,2018,,
ade4a8a,Not sure how to disable -ksp_right_pc if it's in LIBMESH_OPTIONS  and I'm sick of this example failing with my preferred LIBMESH_OPTIONS  so let's just disable LIBMESH_OPTIONS entirely here.,2018,,
41dc4f5,Ignore LIBMESH_OPTIONS in any Makefile where they might conflict with -ksp_type cg,2018,,
9a74980,Updated svn:ignore,2018,,
76ec4fe,Broken DofObject redistribution triggers these asserts - let's define an intermediate variable to make them easier to probe in gdb,2018,,
203b688,Enable communication of DofObject indices when we pack Elem or Node classes.,2018,,
74f8f46,Adding  using Elem::packed_size(),2018,,
2e25416,rbOOmit change: Removed RBParamSubdomain code since it is not being actively maintained. Also  major API change  introduced RBParameters class which is indexed based on string names of parameters.,2018,,
e5236cf,Make sure we reserve enough buffer space for dof indices too,2018,,
f3fcb4c,rbOOmit change: added RBParaters class. This wraps a std::map<std::string  Real> so that we index each parameter value by its name.,2018,,
13de209,Remember to test for remote_elem before trying to create node constraints at an interface,2018,,
516a99c,added \usepackage{fullpage} to fix ugly page formatting in xda_format.pdf,2018,,
3c40c65,removed manual margin sizes to fix ugly page formatting in xda_format.pdf,2018,,
4d77d05,Ignoring some generated files in examples.,2018,,
0ea429e,Allow overriding of initial mesh size  for testing purposes,2018,,
e8e08e2,rbOOmit change: corrected the read_header call in RBEvaluation so that it now works properly. The problem was that the Xdr version was not set before the call to read_header (needed header_data.set_version). Also  examples have been changed since we can now read basis functions in without doing EquationsSystems::read first.,2018,,
176619b,rbOOmit change: In RBEvaluation::read_in_basis_functions  get header version number from io_version_string,2018,,
5c9602f,Creating FEAbstract from which FEBase derives. Towards vector-valued finite elements.,2018,,
d6fe117,"Remove .depend too when doing a ""make clean""",2018,,
13ef034,(Ugly hack to) make sure that BOOST_DIR and/or BOOST_ROOT directories get tested before system directories do.  The user should be able to override system defaults  not the other way around.,2018,,
5195c56,Parmetis manual recommends 1.05 here  and newer parmetis gives an error with 1.0 or less,2018,,
9df242d,Upgrade to latest METIS and ParMETIS,2018,,
0bbac4b,Updated configure to match new m4 files,2018,,
2f292d8,Clarify comment,2018,,
20a04b8,After the element repartitioning on a distributed mesh  each processor doesn't yet know about all it's own new elements. Partiitoner::set_node_processor_ids() was not written to handle such a case.  We could rewrite it  but for now it seems simpler to just do a redistribute() (if applicable - making it a MeshBase virtual decides that) immediately after element repartitioning.  redistribute() and gather_neighboring_elements() don't depend on node processor_ids being correct yet.,2018,,
3fbfe2c,Node redistribution should redistribute dof indices too,2018,,
dfcc06a,cast to a pointer instead of a reference and workaround failed cast for the serial mesh case,2018,,
e138f27,Debug mode does not like commas at the end of initialization lists.,2018,,
568beda,Make sure LIBMESH_DIR is set to something sensible in Makefiles.,2018,,
5a886e1,Make sure LIBMESH_DIR is set to something sensible in Makefiles.,2018,,
b2fa1d2,remove debugging code,2018,,
0d8973a,Parmetis' make system uses '-D__thread=' when compiling on Mac.  Since we ripped the source out of their build system and did not bring along this compiler flag  use the configure'd value of LIBMESH_TLS (which should be more portable anyway) instead of __thread for the handful of variables which had this attribute in Parmetis.,2018,,
4a26ad9,PETSc API and version changes.,2018,,
d6a70b2,libMesh can now serve up (recursive) splits for PETSc's PC(G)ASM and PCFIELSPLIT.,2018,,
9d4cd40,Updated PETSc version guards for petsc-3.3.,2018,,
f922bd4,VI is turned on by -snes_type virs.,2018,,
5838d6b,Fix for FEVectorBase second derivatives case,2018,,
ce4cb11,One more fe_vector_base/ENABLE_SECOND_DERIVATIVES bugfix,2018,,
2c0bca2,Do not renumber when doing mesh copy,2018,,
845c28d,preserve node ordering as much as possible,2018,,
a78001e,Add get_time_steps() to ExodusII_IO,2018,,
52f5ec0,Adding LIBMESH_DEFINE_HASH_POINTERS so we can build unordered sets/maps/multisets/multimaps of pointers even when our best unordered container implementation is __gnu_cxx::hash*,2018,,
ca4f83a,Use LIBMESH_DEFINE_HASH_POINTERS for max compatibility for an unordered Node* set,2018,,
87c1f6b,rbOOmit change: commented out some output to libMesh::out when reading/writing basis functions,2018,,
c8e7d5c,"Adding a ton of ""this->""  so that the C++ compiler won't have to act confused when we replace the FEBase with a templated base class",2018,,
ea271f4,Output-templated FEBase and FE classes are passing our tests now. Next step should be a simple LAGRANGE_VEC FEFamily to actually exercise the FEVectorBase case.,2018,,
82db225,Shutting up unused variable warnings.,2018,,
b7f58c2,rbOOmit change: added option to not read in error bound data,2018,,
d2c502b,Cleaning up print_trace.C.  Spliting the demangling function so that it can handle individual types as well as stack trace information.  Changing parameters.h so that it will call the new damangle function.,2018,,
9da59f9,We only need these internal methods when reference counting is enabled.,2018,,
6c81015,perf_log.h shouldn't need to pull in o_string_stream.h,2018,,
3228ad1,Remove redundant find_neighbors() call,2018,,
6e6be95,Let's give remote_elem a unique id,2018,,
2f87ebc,Make debugging failures here easier,2018,,
911805a,Fix for uninitialized data when copy constructing ParallelMesh,2018,,
64cb5ed,Make sure ParallelMesh gets max_node_id etc. correct after prepare_for_use even when it hasn't been told to renumber those ids. Get rid of a redundant recalculate_n_partitions.,2018,,
6de03e2,Avoid ParMETIS when we don't have enough elements per partition.,2018,,
91d458c,rbOOmit change: slight change in API for RBParameters.,2018,,
ab444d8,Adding FEInterface::map().,2018,,
e87381c,Fixing Elem::point_test() (called by Elem::contains_point()) to detect cases in which FEInterface::inverse_map() projects points for 1D/2D elements living in higher dimensional space to a location *not* on the element  even though on_reference_element() thinks they are.,2018,,
f13626a,Hex8::node_child_map[] only seemed to be used by Hex::is_child_on_side()  so declare it locally to that function.,2018,,
df3b02c,Fixing unused variable warnings when !LIBMESH_ENABLE_AMR.,2018,,
c8cdda4,Fixing Tet::is_child_on_side(),2018,,
7.695e+16,Moving copy-n-pasted code from Tet4 and Tet10 classes into their base class.,2018,,
fca959c,A few macros factors away 2000 lines of switch statements...,2018,,
86b4ed1,Fix for !LIBMESH_ENABLE_HIGHER_ORDER_SHAPES.,2018,,
de36c0c,Use void_fe_switch for FEInterface functions returning void.,2018,,
4e75ed9,Fix for some linker errors using intel 11.1 in oprofile mode - the new point_test code seems to want more FE::map options to link against  even when it's obviously still only going to be called with FE<LAGRANGE>?,2018,,
1f20452,Fixes for InfElemBuilder in the empty partition case,2018,,
10e29da,Removing stale and unnecessary header that got accidently committed awhile ago.,2018,,
24ba03e,Keep any remote_elem links correct on any new elements created by MeshModification functions,2018,,
d3df926,Fix constructor for non-scalar-valued FE,2018,,
6d4fc11,Elem::subactive ought to query parents  not children  or it can break in ParallelMesh situations where some of those children are remote.,2018,,
f9a2a3e,When --enable-parmesh is on  it's still better to run ParallelMesh examples using SerialMesh than to avoid running them altogether.,2018,,
99fe490,family_tree_by_side needs to be remote_elem aware,2018,,
7912028.0,Include neighbor information when packing and unpacking elements.,2018,,
82d4161,Adding FEAbstract::build which will give back an AutoPtr<FEAbstract>. Isn't being used yet.,2018,,
848c565,Adding LAGRANGE_VEC finite element with updates to underlying infrastructure to handle it. Includes a new vector_fe example that tests it.,2018,,
b30d968,Enforce const-correct use of MeshBase::elem()  fix library code that wasn't const-correct.,2018,,
10f6b21,Created FEFieldType and changed FEInterface::is_vector_type to FEInterface::field_type. Current types are TYPE_SCALAR and TYPE_VECTOR.,2018,,
af5225e,Have fem_system_ex1 clean up after itself a little better. Also  use write_timestep instead of write_equation_systems to demo unsteady output appropriate for reading by ParaView.,2018,,
966da2f,Modifying an original mesh Elem (rather than making and modifying a copy) for ALE is an ugly non-const-correct non-thread-safe hack.  We can at least correct the API for now  and get to the implementation later.,2018,,
31e201e,Fixes to allow our const iterators to behave like const iterators,2018,,
3db8187,const iterators now behave like const iterators,2018,,
a89b7e9,Missed a const-correctness fix for --enable-vtk,2018,,
7869db1,"Reverting proper const iterators until I figure out how to fix that ""returning reference to temporary"" problem.",2018,,
e862397,Let's write a .e file instead of .exo to be consistent with other examples?,2018,,
6534891.0,rbOOmit change: By default we now write out all data in binary rather than ASCII,2018,,
abd9453,Fixes for --disable_amr,2018,,
4f4ae09,Fixes for --enable-complex,2018,,
afc09b8,Missed a spot for including vector elements in FEInterface.,2018,,
2d6ae8f,Add Elem::RefinementState specialization for string_to_enum/enum_to_string,2018,,
63ca09f,Do not generate sparsity pattern for non overlapping subdomain restricted variables,2018,,
6cd2469,Better updates to local object count estimates,2018,,
e6945d3,Add MeshBase::query_{elem node_ptr} methods.  Now element and node accessor behavior is implementation independent: elem/node_ptr assert that the requested element exists  query_elem/node_ptr simply return NULL if it doesn't.,2018,,
66d4218,To do AMR/C load balancing  we need to pack/unpack old_dof_object as well when communicating DofObject subclassses between processors.,2018,,
6b7067d,With the new elem/query_elem semantics  these asserts become redundant,2018,,
7cd1710,Restoring some find_neighbors() remote_elem behavior  slight refactoring,2018,,
e2aac24,Forgot an important part of the r5737 patch  now Elem packed_size should be correct again,2018,,
8875f57,Patch from Ben Spencer:,2018,,
ba9ee5e,Patch from Ben Spencer:,2018,,
60252a3,Patch from Ben Spencer:,2018,,
5e07553,Adding MeshTools::libmesh_assert_equal_n_systems() as a way of debugging miscommunicated DofObject problems,2018,,
9fa5b56,More informative warning message when writing xdr/xda in parallel.,2018,,
3cda73a,Fixed comment typo,2018,,
57f2756,Forgot an important part of the r5736 patch - now PackedElem::unpack uses query_elem appropriately.,2018,,
b606385,Removing duplicate data structures (they're in fe_base.h). I could've sworn I had removed these originally. Would be nice if C++ at least warned you about it...,2018,,
267d5ca,Fix for FEMSystem for when user forces numerical Jacobian calculation. Updated adjoints_ex1 to do that to test it. Thought I'd committed this awhile ago...,2018,,
1a6cc1f,Initial support for vector-valued elements in FEMContext. This also includes updating DirichletConstraint to handle vector elements. The newly added vector_fe_ex2 exercises both new capabilities.,2018,,
1628090.0,Fix for vector-valued FEInterface::shape. This shouldn't have been templated. Left it templated in the header to keep it cleaner there.,2018,,
a0ef9d4,Added MeshTools::libmesh_assert_old_dof_objects,2018,,
bf6d49c,Added Elem::make_links_to_me_local()  a method for restoring mesh topology after redistributing elements between processors.,2018,,
8274137.0,Express RefinementState as text rather than numeric codes when printing Elem info,2018,,
8f85d97,Make vector_fe_ex1 clean up after itself.,2018,,
4be8aec,Checkpointing work on making FEMContext compatible with vector-elements. These changes added templated interior  side  and point methods. The old API was kept  but internally calls the new API.,2018,,
1a09052,Added quadrature rule accessors to FEMContext. Updated all examples accordingly. qrules still public at this point.,2018,,
15d3397,Adding helper function called from Parameters::Parameter<T>::print(...) so that specialization on basic vector types is no longer needed,2018,,
1a1c2bf,Updated svn:ignore,2018,,
e6b265a,Allow duplicate adds of existing elements/nodes to a ParallelMesh. This will help simplify some of the communication code.,2018,,
d12bddf,Added BoundaryInfo::n_boundary_ids() to count the number of bcs at a node or an element side,2018,,
3f95aa3,Add Parallel::Request::PostWaitWork to enable completing a Parallel:: operation after the request wait is finished,2018,,
614c0d6,Fix that constructor  add potentially-missing std header,2018,,
01718a9,Headers go outside the libMesh namespace  need to include all dependencies,2018,,
afc9c7d,Adding a --handle-mpi-errors command line option,2018,,
921efce,"Let's run examples in alphabetical order rather than ""whatever random order the filesystems gives us"" order",2018,,
2de4982,Fixes for vector-enabled FEMContext methods with --enable-complex,2018,,
b181226,DirichletConstraints fixes for --enable-complex,2018,,
62c5135,A stream proxy should usually return itself  not return the raw stream.,2018,,
5e7b582,It's useful to have vector/tensor implicit construction and assignment from any scalar  not just the underlying data type,2018,,
a89e425,Fixes for --enable-complex,2018,,
dda62d8,We should probably support consistent MeshBase::mesh_dimension() even on distributed meshes with empty subpartitions,2018,,
2bc793f,"Use the same ""gnuplot_script"" output file name  svn ignore those outputs",2018,,
96b4828,Test consistency of element processor ids in debug mode,2018,,
bac53fc,We need valid element proc ids before we can hope to get consistent node proc ids,2018,,
8f0ae5a,Remove some old debugging code,2018,,
93efd2a,Directly include iostream header,2018,,
561e1f7,Print id and processor_id in addition to location when printing nodes,2018,,
624d90f,Make Elem printing a little more compact.,2018,,
41e8133,Catch NULL elements with an assert  not a segfault,2018,,
8868673.0,Fixes for --disable-amr,2018,,
a1ce518,Consistently use unsigned int for libMesh processor ids,2018,,
e73d28f,Fix for --enable-complex,2018,,
b004d14,Typo fix,2018,,
52ce3ac,Fix (or workaround? the real fix should probably be to our Vector/Tensor constructors...) for Real != double,2018,,
de0f78c,Optional MessageTag arguments for Parallel::send_receive(),2018,,
045c32c,Avoid warnings,2018,,
40d7779,Fix for PostWait uses,2018,,
9142dd9,Use SerialMesh with tetgen until I can track down the (not recent!) ParallelMesh regression there,2018,,
d69a43d,Request::post_wait_work is now a reference-counted pointer so it will play nicely with STL containers  and is now hidden behind an accessor function.,2018,,
f867055,Request still needed a copy constructor and some more cleanup() work to fix STL compatibility and memory leaks when using post_wait_work,2018,,
4b72372,rbOOmit API change: several things were poorly named in rb_theta_expansion and rb_assembly_expansion. Also  renamed _norms members to _innerprods  which is a more accurate description.,2018,,
5882b1c,Parallel verify can be written more tersely now,2018,,
70e8860,Wrap the libmesh_assert_valid*procids declarations into one templated function that can be called from ParallelMesh::renumber_dof_objects,2018,,
d782115,g++ was pickier than icpc about how template function specializations are declared within a namespace,2018,,
8edfef6,"Add ""packed_range"" Parallel:: functions.  This can greatly simplify MPI communications of variable data size objects like Elem and Node",2018,,
3235c22,Parallel::pack/unpack/packed_size specializations for Node and Elem  now they are usable with Parallel::*packed_range* calls,2018,,
5e48752,Some output iterator options to make Parallel:: packed_range calls useful.,2018,,
0e2a45e,Fix bug where processors could get our of sync when generating DoF constraints on a distributed mesh,2018,,
6b97e45,Check parallel node processor id consistency too,2018,,
0aa4e38,Use packed_range methods for MeshCommunication,2018,,
4589a66,Fix for --disable-amr,2018,,
90be9d7,Fixes for --disable-mpi,2018,,
421261b,Fix capitalization typo from the m4 refactoring,2018,,
90e6b7d,Fix for --disable-amr,2018,,
217f700,Fix for --disable-second,2018,,
ab12fd4,An extra hundred bytes is worth it to avoid truncated trace files,2018,,
b3a3469,fix shadow parameter error,2018,,
450fc0b,More error checking when packing a range,2018,,
483a0fc,More ParallelMesh fixes:,2018,,
7022061.0,Fix for --disable-amr,2018,,
74225bc,"Add ""magic header"" constants to range-packing routines for Elem and Node.  One resultant bug fix in Node packing  more to come.",2018,,
59838d9,rbOOmit change: added boolean flag exit_greedy_on_repeated_parameters to quit the greedy when we encounter the same parameters twice in a row (in some cases this indicates saturation of the error bound due to rounding error). Also  cleaned up some whitespace.,2018,,
e7a33e9,rbOOmit change: in exit_on_repeated_greedy_parameters  check all parameters in greedy_param_list not just the most recent.,2018,,
aae538b,More assertions - this code seems to be working fine with SerialMesh and non-load-balanced ParallelMesh but we've still got a corner case failing during redistribution.,2018,,
ce17575,--disable-amr fixes,2018,,
1a0e1c4,Using SerialMesh with TetGen for now,2018,,
2188-02-01,ParallelMesh: Assertion adjustments  change query_ functions and renumber_ behavior to handle the possibility of NULL container entries from delete_node(),2018,,
d0ccbab,Added Elem::type_to_n_sides map,2018,,
81ce54f,"Dividing packed_size() into packable_size() (based on object) and packed_size() (based on data buffer).  This will allow us to ""upgrade"" existing objects easily.",2018,,
b42112b,rbOOmit change: Modified how we store temporal discretization parameters in TransientRBEvaluation and TransientRBConstruction. Now inherit from RBTemporalDiscretization  rather than store an object.,2018,,
ee23018,Vectors and tensors should still be constructable from T arguments even in cases where T isn't a scalar,2018,,
c57d90e,rbOOmit change: Write out and read in parameter ranges in write_offline_data_to_files/read_offline_data_from_files. Also  do a similar thing for the temporal discretization data.,2018,,
c2c8dd3,rbOOmit change: added an endl to improve formatting,2018,,
3005c00,rbOOmit change: Check whether the RBEIMEvaluation solve is the same as the previous one  and short-circuit if so. This gives a big speedup since we otherwise do _many_ unnecessary solves.,2018,,
640cfe1,rbOOmit change: Fixed up EIM for cases with more than one variable,2018,,
f827b7e,rbOOmit change: cleaned up the EIM API a bit more,2018,,
9d0b3ae,rbOOmit change: fixed error in RBEIMConstruction::evaluate_basis_function  previously the vector wasn't being updated correctly,2018,,
53fe242,rbOOmit change: Improved EIM code. The offline is much faster because we store the parametrized functions on the training set rather than recomputing. Also  moved evaluate_basis_function from RBEIMConstruction into a new class  RBEIMAssembly. Also fixed parallel bug in RBConstructionBase when we have a serial training set.,2018,,
6d4a7d7,New reduced_basis example  reduced_basis_ex6: demonstrates EIM for non-affine geometric mappings in 3D.,2018,,
b44ff57,uncommented LIBMESH_DIR in example,2018,,
fa85b1c,Making some FE map functions protected. This will break backward compatibility for anyone directly using these functions  but no one complained on the user and devel lists.,2018,,
6c97050,Updated reduced_basis_ex6  now has 3 parameters rather than just one.,2018,,
1df0ac0,Fixed boundary condition IDs in reduced_basis_ex6,2018,,
1e8674d,"Committing patch from Lorenzo Botti which fixes and improves XYZ finite elements. From his email: ""The major change is related to a scaling introduced to improve the condition number on small and big elements (small and big compared to the reference element). With such a scaling on linear hexs the XYZ is equivalent to a MONOMIAL basis  independently of the element size. On curved elements the approximation properties of this scaled XYZ should be better than MONOMIAL and should allow to go up to a third or fourth degree approximation without any trouble."" Also added miscellaneous_ex8 which is a copy of misellaneous_ex5  but uses XYZ elements instead of MONOMIAL elements. Tested successfully in 2D and 3D.",2018,,
132faf5,rbOOmit change: Modified RBEIMTheta so that evaluate picks out a subset of the parameters.,2018,,
94768b0,rbOOmit change: fixed typo in output message,2018,,
3d1bd28,fixed comments in reduced_basis_ex6,2018,,
6499da4,Removed exmaple miscellaneous_ex8 and have miscellaneous_ex5 run twice  first with MONOMIAL  then with XYZ elements.,2018,,
3803efb,Corrected the geometric mapping  the y-component was wrong.,2018,,
737488d,Added comment about bc_id in reduced_basis_ex6,2018,,
a923f63,Made some changes to reduced_basis_ex6 (shifted the mesh so it's centered at the origin),2018,,
6cc4adf,rbOOmit change: fixed RBEIMConstruction compilation error with --enable-complex,2018,,
ff25b55,rbOOmit change: added matrix->close() in TransientRBConstruction::truth_solve to prevent a run-time error,2018,,
66200b1,fix for stricter compilers,2018,,
b5c8c54,standalone header fix,2018,,
76ad997,rbOOmit change: moved matrix->close call into truth_assembly in TransientRBConstruction,2018,,
0fa0b8e,Adding a print_trace to Parameters::get(...) for better debugging purposes,2018,,
3ac3da8,infrastructure to support new tecplot binary file formats  should be able to parallelize tecplot I/O,2018,,
7901d03,rbOOmit change: added mkdir call in RBEvaluation::write_out_basis_functions so that it works when the directory  directory_name  doesn't exist,2018,,
b4e53ad,Printing a screen trace by default when an error is thrown in serial,2018,,
e913c9a,Changed reduced_basis_ex5 so that it is a 3D cantilever beam  rather than 2D,2018,,
b57edf9,Added systems_of_equations_ex6  a 3D cantilever. Note the default iterative solvers in PETSc seem to struggle a bit for this problem.,2018,,
268e66a,corrected K's name in the example,2018,,
f444a43,Updated publications for July 2012.,2018,,
723fc37,Fixing weird character encoding.,2018,,
1408125.0,honor --fc and --flags,2018,,
9178005.0,rbOOmit change: Greedy should behave sensibly when we have 0 parameters,2018,,
3e80c09,Adding DecrementRank to vector and tensor types. Not used yet (will be used in forthcoming FETransformation).,2018,,
756ef0d,Fixed some of the switch macros that were added for vector elements and made them more general (conforming better with what was already there).,2018,,
c83f295,Adding NumericVector::reciprocal() and subclass implementations.,2018,,
22d0fc6,Fix comment,2018,,
146b290,DofMap::sys_number() can be useful public:,2018,,
7778456.0,#include missing header,2018,,
05e863e,Adding Elem::find_edge_neighbors version for finding neighbors of a specific edge,2018,,
01730b2,Crazy idea: in an adaptivity example  let's default to running with adaptive refinement on!,2018,,
9.2e+61,This should slightly improve performance in non-threaded proj constraint generation  may save us from a race condition leading to inaccurate proj constraints in a few corner cases (3D  level one rule off  or AMR combined with periodic BCs) when we're threaded.,2018,,
6a70c09,Adding FEMap class. This (almost...) encapulates data and functions related to the reference to physical element map. It is expected that this will eventually evolve  but this is a starting point.,2018,,
e2d0021,Performance and thread-safety requires a lock around each constraint row acquisition  not just each constraint row entry.,2018,,
09e6465,We need to add the periodic boundaries before the init()  so they get applied to initial conditions.,2018,,
647769b,"We need to have periodic boundary constraint equation directions be decided by a more objective standard  not just by a ""who gets there first"" system  or we can end up creating recursive constraints when running threaded or on a distributed mesh.",2018,,
05823db,Updated svn:ignore,2018,,
36130ab,Fixed a bug in FEMap where the Jacobian was not properly cached for affine maps (copy/paste error).,2018,,
b7e4d7f,Fix for --disable-second,2018,,
2424f74,Fix reciprocal() implementations for --enable-complex,2018,,
f620d04,We only need to gather constraints on distributed meshes,2018,,
a6de42c,Updated svn:ignore,2018,,
c6ccb45,Adjusted solver options on vector_fe_ex2 for better convergence (i.e. only one Newton step for the linear problem).,2018,,
94941d4,We should still be able to configure with PETSc but without MPI,2018,,
62ed58b,These assertions aren't safe in single precision unless we base them on TOLERANCE,2018,,
0ef4150,Adding the FETransformation classes. These handle computing the shape function values in the physical domain according to the element type  i.e. H1  HCurl  HDiv  or L2 conforming finite elements. This required updating the internal API for compute_shape_functions. curl_phi and div_phi data structures were also added. H1 transformations are fully implemented (curl and div are untested)  while HCurl transformations are partially implemented.,2018,,
9cf2ec3,Fix compiler warnings and potential memory leaks,2018,,
985b55d,Getting rid of warning from type_n_tensor.,2018,,
c14e489,Adding RawAccessor<TypeNTensor<> > stub,2018,,
a834092,Actually make the RealTensor RawAccessor actually access as described.,2018,,
904b48a,Restructuring vector_fe_ex2 a bit for forthcoming ExactSolution update. Also made the grid coarser so it doesn't run painfully slow.,2018,,
7c5fd24,Updating ExactSolution to begin supporting vector-valued elements. vector_fe_ex2 now leverages this capability. However  reference solutions are currently not supported for vector elements nor are H2 error values.,2018,,
5d9c7e4,Have a warning for unimplemented functions in HCurlFETransformation instead of error. This is to allow error calculations for forthcoming HCurl elements.,2018,,
910c068,Make max_r_steps a command line option,2018,,
5de1177,More efficient set reassignment,2018,,
b3c6681,Don't exit the search for primary neighbors prematurely,2018,,
11638b2,Bugfix (hopefully the only bugfix needed) for angular periodicity cases,2018,,
de10372,Adding missing <= and >= operators to TypeVector,2018,,
94734a4,Specializations for --enable-complex,2018,,
b0157da,Better solution for testing periodic BCs  make it easy to tweak number of refinement steps,2018,,
75c4e1a,Partially revert recent constraints changes,2018,,
2782dad,Patch from Jed Brown for SLEPc 3.3 support,2018,,
8f8583b,change copy constructor so that it doesn't segfault when other_mesh._partitioner==NULL,2018,,
8a4f9dc,rbOOmit change: added get_string() to RBParameters,2018,,
f5ebac4,Added stress plotting to systems_of_equations_ex6,2018,,
61b0b52,Added von Mises stress to systems_of_equations_ex6,2018,,
103af3a,Add stress plotting to reduced_basis_ex5,2018,,
882fa5b,Added some logging to reduced_basis_ex5,2018,,
7c7d4fa,We don't need more than stubs for the unimplemented 3D Clough-Tocher case  and the cut-n-pasted code was triggering clang warnings,2018,,
69d1a4f,Tuning parameters stored as references are dangerous.  References to temporaries are moreso.  Thanks  clang warnings...,2018,,
17cc81a,Assorted fixes for minor clang warnings,2018,,
42685fa,preliminary support for --enable-fpe from Cody et al,2018,,
a83ac29,use libmesh_error(),2018,,
9abd97f,Fix help on how to run the VI version.,2018,,
85467da,Jed Brown: Check error codes and remove unused variables.,2018,,
eb838fd,comment until I fix configure test,2018,,
f08c6e9,fixed,2018,,
7aa7cf6,System::remove_vector implementation from Jens Lohne Eftang  correct atavistic comments about adding vectors,2018,,
3dc3d3e,Fixes for --enable-complex,2018,,
a064b7e,Ignoring more files.,2018,,
ab97a24,SSE instruction error checking on linux too,2018,,
bac4fe6,If MPI was disabled at runtime  but PETSc was configured with MPI  then we need to fall back on Laspack.,2018,,
c5e6c4c,SSE instruction error checking on linux too,2018,,
d9a5d4f,Optimized parallel sort in n_processors() == 1 case,2018,,
55505d0,Specializations allow us to optimize send_receive into a plain data copy in the case where n_processors()==1 and the data types match,2018,,
39f1dc8,More ParallelMesh-friendly refinement flagging options.,2018,,
fad0c01,Fix newly parallelized refinement flagging,2018,,
612d1ff,--enable-complex fixes,2018,,
f180523,Fix asserts to handle asymmetric matrix case  thanks to Jens Lohne Eftang,2018,,
9889466.0,remove deprecated,2018,,
a8eac3d,unused variables,2018,,
622cc0e,Check for point locator failure in periodic boundaries and give an error message rather than segfaulting.,2018,,
ecbafef,Fix for compilation error on my laptop,2018,,
1ea2861,Configure test for fe{enable disable}except.,2018,,
f8d9e93,clearer,2018,,
64ba4c2,Use smaller block size on smaller system I/O - this seems to fix a performance problem found by Jens Lohne Eftang,2018,,
06ba11b,Updates to sparsity pattern behavior:,2018,,
e9e3840,With the new sparsity pattern changes  more reduced basis examples work with Laspack.  Still need to test this stuff with trilinos.,2018,,
23e1f9d,rbOOmit change: If a CouplingMatrix is attached to an RBConstruction then we should only increment the designated blocks in matrix assembly  otherwise matrix assembly is extremely slow since we go outside the sparsity pattern.,2018,,
b871407,Looks like r5963 included a configure generated with non-final m4 files  syncing it up now.,2018,,
cf07882,Handle autodetection of mpich-dependent-on-mpl libraries,2018,,
eb57dc4,bootstrap with latest m4/mpi.m4,2018,,
2fa12c7,Fix missing assert around Parallel::verify  add additional assertions where a failed verify would otherwise lead to harder-to-debug problems later.,2018,,
dfad770,A couple interfaces are no longer libmesh_not_implemented(). Unfortunately we do not have a libmesh_insufficiently_tested() macro...,2018,,
14c1280,Merging in some build system goodies  utilities from the automake branch.,2018,,
51c590d,Forgot to add utility files in that last commit,2018,,
19f4e84,Put a copy of libmesh-config in the new standard place.  Apps written for the automake branch build system should configure against trunk too now  hopefully this will make transitioning easier.,2018,,
ae7274a,rbOOmit change: Add a coupling matrix to RBEIMConstruction since in this case the variables are always uncoupled,2018,,
7d83f85,Fix for combinations of heterogenous and non-local constraints,2018,,
2d354fd,Adding documentation files for several newish examples. Should we really be checking these in at all?,2018,,
d43783a,Adding libmesh_version.h and soft-linked libmesh-config script to .gitignore.,2018,,
23ef0e5,Updating examples.php with recently added examples.,2018,,
2bf202d,Fixing some broken links in presentations.php  many are still broken.,2018,,
763b550,Updating more presentation links.,2018,,
7603d95,Fix adjoints links,2018,,
43d0140,"Use ""-include"" to prevent Make errors when a third-party Makefile can't be loaded.  We'll get errors anyway at link time  but this ought to prevent a ""make clean"" from failing just because a dependency got pulled out from under us.",2018,,
712eece,Update example comments based on patches from Geordie McBain  regenerate html docs for examples,2018,,
aaf9b2b,rbOOmit change: Added a getter to RBEIMAssembly,2018,,
82beaa7,Another patch from Geordie McBain fixing example comments,2018,,
487869.0,Added SerialMesh::stitch_meshes. This function stitches other_mesh to this mesh and optionally tries to merge nodes so that the two meshes are connected.,2018,,
beecad8,Created TensorTools namespace to stash handy vector/tensor related methods that don't really belong in a class. Note that libmesh_dot and libmesh_norm were removed in this patch in place of inner_product and norm_sq respectively.,2018,,
b9da495,Added utility tensor_tools functions.,2018,,
b01d5ef,Put code comment in the correct place.,2018,,
8a2d530,After one of the recent vector patches  it looks like we need an explicit tensor_value.h include under some configurations (probably with --disable-second),2018,,
b64756c,Add NEDELEC_ONE FE type corresponding to Nedelec elements of the first type. Currently only for 2D  first order. Updated ExactSolution to compute HCurl and HDiv errors and added vector_fe_ex3 which solves curl curl u + u = f using quads and triangles and computes the error.,2018,,
c18ee17,Allowing elemntal variables to be restricted in ExodusII output,2018,,
80ea272,Adding accessor to retrieve the translation vector from a periodic boundary,2018,,
330b30c,DofMap::get_info() should be accurate even when bandwidth varies from processor to processor  and DofMap::add_matrix() should take into account the possibility of processors with no DoFs.,2018,,
a6a5f10,Fixes for PetscMatrix::init() and PetscMatrix::zero() in the not-all-processors-have-DoFs case.,2018,,
61a701f,Switching back to new Periodic Boundary Conditions code  but updated to better handle cases of multiple PBCs meeting at a node.,2018,,
5fab6fb,If we have a convergence failure  we don't want to spam output unless/until no higher-level code catches and handles the problem.,2018,,
aa22e52,Change naming scheme for exodus files in this example.,2018,,
71000000000.0,Reorganizing Periodic BC files.,2018,,
c35e0e4,Splitting PeriodicBoundary into base and derived classes.,2018,,
b7f2885,Fix unused variable warnings,2018,,
1c7264b,Looks like r6012 missed a couple spots,2018,,
9b27929,"Fix for (overzealous) gcc ""possibly uninitialized variable"" warning",2018,,
c31b3d9,Fix typo from previous macro change,2018,,
c850a7d,Fixing the broken PBC Fix :),2018,,
f1fdebe,Add assertion options which print out more information upon assertion failure.,2018,,
8c06beb,We're not getting charged by the newline...,2018,,
ea6242c,"Fix for another overzealous ""uninitialized"" warning.",2018,,
c328edf,symlinks from */*.h into libmesh,2018,,
3f233cd,Change KSP/PC options for PETSc  -ksp_type cg -pc_type icc,2018,,
bcb87c2,"change all #include ""foo.h"" directives with #include ""libmesh/foo.h""",2018,,
a04f6e2,Remove some of the intel -something_report0 flags  they were unnecessary and in outdated versions on newer icpc  and removing them works around a distcc problem.,2018,,
a118197,Adding in missing libmesh_version.h to new include/libmesh directory.,2018,,
4e19095,by default do not add subdirectories to include paths,2018,,
ec5d2b6,Fixes for LIBMESH_REQUIRE_SEPARATE_NAMESPACE,2018,,
fe12479,Fix petscdmlibmesh.h includes to handle the path shakeup case,2018,,
4eec90c,Leave --enable-legacy-include-paths on by default until users have had time (and an intervening official release) to adjust,2018,,
5a6c131,"Add legacy ""using namespace"" configure option  defaulting to on.",2018,,
51462c4,Fix one more header (and all the examples) for the separate namespace case,2018,,
cdc6b35,namespace fix,2018,,
e10bb28,We need systems ex6 to work in parallel too,2018,,
96a8f74,Fix .depend generation to work with new header directory,2018,,
4.317e+48,Additional libmesh_ assertion and error macros:,2018,,
7e76c1f,Missed a couple bad-regexp failures when I was testing the assert_ changes without SLEPc...,2018,,
9aba7b0,Implemented attachable DifferentiableQoI capability in FEMSystem. Updated adjoints_ex2 to test capability.,2018,,
27d1314,Fix warnings,2018,,
3a0a16b,Don't leak attached QoI objects,2018,,
a6cebf5,Wrapping a potentially-voluminous warning in libmesh_do_once,2018,,
f5d3784,Weighted Patch Recovery Error Estimator and supporting functions  from Vikram Garg,2018,,
9b844d6,Use AutoPtr in DifferentiableQoI cloning to be a little more explicit about pointer ownership transfer.,2018,,
7917d20,Allow outside code to test whether a matrix is already attached to a DofMap.,2018,,
96fc272,"More work on attachable DifferentiableQoI. DifferentiableQoI can now init the System.qoi data structure. New virtual methods to handle a future ""CompositeQoI"" object.",2018,,
390768b,Removed redundant return.,2018,,
1afdf8a,Make these two old assertions properly cover all our current seminorms,2018,,
668051d,Adding an example-in-progress from Vikram Garg demonstrating weighted adjoint residual error estimator,2018,,
f316c98,Curl-curl makes ILU curl up in a ball and die.  Fortunately PETSc seems to robustly accept the last option it sees if it's given redundant -pc_type arguments,2018,,
6c879d8,Use DifferentiableQoI::init_context where appropriate,2018,,
7c1e12f,Adding FEMContext::side_boundary_ids(),2018,,
00b8195,Removed postprocess methods from DifferentiableQoI. Added methods to DiffSystem needed for backward compatibility.,2018,,
551de8d,Adding has_boundary_id methods,2018,,
f157d0c,Patch from Roman Vetter for 1D support in OFF I/O,2018,,
5a8e6d5,Adding nodeset names to the Mesh Generation routines,2018,,
1a940e6,Deprecate BoundaryInfo::boundary_id()  switch examples to use boundary_ids() or has_boundary_id(),2018,,
1e53d99,Fix typos,2018,,
0e684f6,Let's give users an example of how to make clone() more robust.,2018,,
dbb03bc,Add separate options for qoi assembly (or not) of external sides  internal sides  and elements.,2018,,
85f0be8,Fix for disabled legacy namespaces,2018,,
66cd726,init_qoi() shouldn't need a QoISet - that comes only when it's time to finally evaluate something.,2018,,
98d4b1a,"Fixing ""don't send NULL to an ostream"" warnings",2018,,
afde7bd,"More ""don't try to send NULL to an ostream"" fixes",2018,,
b0d4dfd,I may not be smart enough to use while loops.  Let's fix the infinite-looping one  and also convert some more while loops to for loops where practical.,2018,,
855fc7f,DiffSystem::attach_qoi doesn't need QoISet since init_qoi doesn't need a QoISet. Removes some warnings. Updated adjoints_ex2 accordingly.,2018,,
8aa6164,fix for strict namespace,2018,,
f8afe50,handle #include <foo.h> as well,2018,,
e9cc366,Fix atavism in comment,2018,,
14335dc,Most adjoint solves should be homogeneous on Dirichlet boundaries,2018,,
e3b3ee9,Fix for --enable-complex,2018,,
13b3342,Allow FEMFunctionBase users to define init_context() for efficiency.,2018,,
5aaa302,Fixes for counting distributed constraints in parallel,2018,,
dbce13d,"""make test_headers"" should work even without legacy header include paths",2018,,
1c94760,LaspackVector::scale() bugfix,2018,,
0cfb501,Adding Laspack adjoint_solve() implementation,2018,,
d1ef3ed,Enable EpetraMatrix transposes.  adjoint solves should work now  but I see mixed test results.,2018,,
15de9bd,Non-PETSc interfaces support adjoint_solve (or at least don't die on it) now.,2018,,
de47030,Simplified clone() implementation,2018,,
fe6e0fa,adjoint example 3 cleanup  commenting from Vikram Garg,2018,,
202206f,Edits for brevity  disable adjoints_ex3 for --enable-1D-only,2018,,
9b3008a,Adjoints ex3 doesn't use periodic BCs  so let's strip that out. It does require AMR  so let's require that.,2018,,
fbcc75b,Fixes for --enable-complex,2018,,
fbf8a83,More (hopefully better) adjoints_ex3 --enable-complex fixes,2018,,
0811Feb3,Move libMesh-specific code out of m4 files which don't have to be libMesh-specific.,2018,,
c8416ae,Remove out-dated version of PETSc configuration macro  grab additional variables in the current version,2018,,
aa4f3d5,Fixes for configuration with newer VTK  PETSc,2018,,
1d79725,Actually use an FETransformation for SCALAR elements and not NULL...,2018,,
154ecd0,Have QoIContributions functor respect qoi_indices. Also  bug fix for threaded QoI assembly.,2018,,
fa6dd25,Another --enable-complex fix  plus remove some atavistic code.,2018,,
f3cc724,We need signal.h definitions here  and they might not be pulled in indirectly,2018,,
25e49b5,"These solutions could be overzealous in the common ""system1.time == system2.time"" usage case",2018,,
3efbb3b,Pass system.time to FunctionBase objects when doing projections,2018,,
0cf5d15,Don't forget to pass system.time to the scalar evaluation,2018,,
04a4dcc,Bugfix last commit,2018,,
c8b4b4a,rbOOmit change: modify the valid_params method so we just print out a warning (rather than throw an error) if a parameter is outside the parameter range,2018,,
3ba1402,update SerialMesh::stitch_meshes to throw an error if we find multiple matching nodes,2018,,
e7952da,Another --enable-complex fix for adjoints ex3,2018,,
706e4ab,bugfix for xmmintrin.h inclusion,2018,,
516fcc3,Updated git ignores.,2018,,
8e046dc,Configure was complaining about the line involving a compound test statement with enabletecplot and enabletecio.  Changing the string comparsions to be a bit safer seemed to silence it.,2018,,
770b3e5,Print configure result messages consistently as <<< message >>>.,2018,,
8009f4e,"Fix ""unary operator expected"" error message from compiler.m4",2018,,
365c419,Disable __thread for clang when building shared libraries on Mac OSX.,2018,,
e5ac68f,Regenerating configure script after recent updates.,2018,,
4029720.0,eigen merge from branch,2018,,
0dfd93e,These debug-mode tests can take a ludicrously long time  let's turn them off until/unless they're needed again.,2018,,
ed362d5,"That ""empty"" string ought to be static and doesn't need to be in a header.",2018,,
c2554fc,compiler warnings suggest that mesh_base.h needs more than a forward declaration of BoundaryInfo or our boundary_info AutoPtr might not get its delete right.,2018,,
5cf8498,Removing some atavistic code,2018,,
9452bdc,Add a utility for copying just selected variables from a solution file.,2018,,
3fe8324,If we don't READ_ADDITIONAL_DATA  then read() fails spectacularly on files that were created with WRITE_ADDITIONAL_DATA.  We *really* need to autodetect this (and presumably the converse situation) in equation_systems_io.C or system_io.C in the long term.,2018,,
c77b868,Don't accidentally shallow copy a Mesh,2018,,
14ad3bd,Trying to shallow copy a Mesh was embarrassing  let's make sure it doesn't happen again.,2018,,
836ddf3,This could probably be merged with meshtool  but I don't have the time to dust the cobwebs off meshtool.C right now,2018,,
3472843.0,fix for strict namespace,2018,,
c99a537,The MPI standard does not specify that things like MPI_SUCCESS or MPI_REQUEST_NULL be plain-old-data types.  So  the new libmesh_assert_equal_to() macros and friends can fail with messages like,2018,,
c329088,SGI MPT fix,2018,,
4d20673,Reverting test types  again - OpenMPI wasn't happy with second MPT fix: include/libmesh/parallel.h:397:11: error: invalid static_cast from type 'ompi_communicator_t*' to type 'int',2018,,
5879be8,Removing outdated el() function documentation.,2018,,
f96e2ce,More documentation fixes while we're at it.,2018,,
7f39db3,Uninlining SparseMatrix member functions.,2018,,
d206787,Uninlining PetscMatrix member functions.,2018,,
446d104,Uninlining LaspackMatrix member functions.,2018,,
406552d,Uninlining EpetraMatrix member functions.,2018,,
8f13b5e,More documentation fixes and minor code cleanup.,2018,,
6270319.0,Slightly modifying the declaration of SparseMatrix::operator<< to be more in line with the C++ FAQ.,2018,,
dd08f11,Adding write_nodal_data for UCDIO thereby enabling write_equation_systems for UCDIO. This includes some internal rearrangement of UCDIO. Also updated vector_fe_ex2 to use this capability as a regression test.,2018,,
c557b08,gcc 4.7  intel 13.0,2018,,
2cf5223,rbOOmit change: RBParameters::get_string now takes a precision argument and writes out parameters in scientific notation,2018,,
b2c8b74,Fparser Update V4.3.3 -> V4.5,2018,,
e017410,Fix TransientSystem vectors to be consistent in basic_system_only case,2018,,
d48c616,"Revert ""Fparser Update V4.3.3 -> V4.5""",2018,,
2d4e3ae,Patch from Vikram Garg implementing global error estimation and an initial version of element-wise error indication based on refined adjoint solutions,2018,,
edf8b88,Adding another adjoints example from Vikram  this one testing out the AdjointRefinementErrorEstimator,2018,,
d34cace,Fix for GNU hash_map case  fix forgot-to-reset-elem_it bug  if(false)-out some code that isn't being used yet and needs to be a non-O(N^2) algorithm before it is.,2018,,
02485ca,Fix the bug Shuangxing Dai found in our gzstream dependency checking,2018,,
2398b9a,If we want to evaluate some norms or plot some data  we don't need to construct Jacobians etc. first.,2018,,
b2e3f40,Use new asserts  remove a redundant assertion,2018,,
5cd08ef,Allow users to disable renumbering directly from a MeshBase reference,2018,,
b85d16b,No  really: listen to both the argument and the member variable when deciding whether it's safe to renumber.,2018,,
e5e095d,"Let's call this accessor ""allow_renumbering"" to match Derek's preferences",2018,,
1034d21,Skip renumbering when requested  updated cached numbers where appropriate to make that work.,2018,,
a293f85,Assorted efficiency tweaks and correctness fixes from Vikram Garg and myself for ARefEE,2018,,
0dbdc8c,Fix operator typo,2018,,
bc9c9db,Call {PC KSP Vec}GetType with correct arguments for petsc-dev.,2018,,
add0f53,Bug fix for interaction between ParallelMesh and user-supplied constraints.,2018,,
e6f291b,Fixes for non-debug Node communication  Nemesis->ParallelMesh regressions,2018,,
6da8c15,Fix  re-enable ParallelMesh gathering of recursive NodeConstraint data,2018,,
f3de1ea,Fix for --disable-amr,2018,,
5ff8159,Bugfix for allocations in constraint gathering,2018,,
d19227d,Do not use GLIBCXX_DEBUG and the like for *any* compilers on OS X  not just the Apple compilers.,2018,,
3b1dbb0,Oops  forgot to commit updated configure script that has the changes in compiler.m4 from r6197.,2018,,
13b318a,fparser update,2018,,
349dc32,Oops somehow managed to bork the version of fparser.m4 - here's the right version (configure in previous commit was generated with this version),2018,,
5861d36,Turning off the function parser optimizer,2018,,
edaa866,Fixes for constraint gather/scatter.  We're not quite done here yet - I still have to figure out how to handle the case where a processor needs to know about a constraint  not because it owns a constraining dof  but because it owns an elem which supports another processor's constraining dof...,2018,,
c9b9e8d,Printing DoFs is useful for debugging.,2018,,
95b9eb1,SubDM now generates global vectors of correct size  albeit non-ghosted.,2018,,
f7dc01d,Provide callbacks to serve up (near)nullspaces to the solver.  PETSc hookup in place.,2018,,
d3a546d,Clean up trailing whitespace only.,2018,,
28984c1,* Use libmesh formatting.,2018,,
5f589cd,Clean up unused variable warnings.,2018,,
f0a1369,Improved error message: print the name of the block that's not found.,2018,,
b5fc590,Avoiding compiler warnings is good  but so is avoiding compiler errors.,2018,,
b1f9691,Adds ExodusII_IO capability to ErrorVector::plot_error. Also updates adaptivity_ex3 to use this capability.,2018,,
544b707,Not sure how to get the --enable-complex ARefEE case just right without making the real-valued case much more expensive.  So let's just make sure --enable-complex still compiles  for now.,2018,,
8fa20d8,Forgot to update the no-MPI version of this function,2018,,
1503784.0,Deprecate skip_renumbering arguments  but fix their behavior so they'll work as expected until after we remove them.,2018,,
9a86abf,Fix for initialization of additional SERIAL vectors.  This fixes our --disable-ghosted TransientSystem regression.,2018,,
f1d94f3,Parallel::send/receive for strings,2018,,
b66b7e2,Avoid overzealous asserts,2018,,
642b0e2,Better options for printing constraints  bugfix and handle more corner cases for communicating constraints on a distributed mesh.,2018,,
3e74df8,Added norm capabilities to DenseSubVector.,2018,,
1132fec,Fix uninitialized pointers,2018,,
884c273,Bugfix for flagging on a non-contiguous mesh,2018,,
858a7e1,Even non-node-constraints code needs a mesh here now,2018,,
8174735.0,More than NodeConstraints needs this mesh now,2018,,
9c28006,rbOOmit change: added verbose flag to RBParametrized,2018,,
bcb297a,Make initialization order match declaration order (fixing warning).,2018,,
7565914.0,allgather_recursive_constraints() only needs named parameter 'mesh' if LIBMESH_ENABLE_NODE_CONSTRAINTS.,2018,,
38d7bd8,I have no idea why getpwuid() suddenly decided to return NULL (with errno=0) on one of my systems  but the man page suggests a returned NULL is indeed an Official Thing That Can Happen  so let's make sure we don't just segfault when it does.,2018,,
bc89796,Sun Studio fixes,2018,,
b5bf111,fix for implicit declaration of function strptime,2018,,
22ddb1b,PGI fix - really  <cstdlib> needed before <cmath> - http://mailman.ucar.edu/pipermail/met_help/2012-July/001824.html,2018,,
0805fbb,PGI fix - really  <cstdlib> needed before <cmath> - http://mailman.ucar.edu/pipermail/met_help/2012-July/001824.html,2018,,
c4993b0,Added accessors for DiffContext data members who will be made private after the next release. Also updated fem_system_ex1 to use the new accessors.,2018,,
98bf8c7,Accessors for FEMContext members who we plan to make private after the next release.,2018,,
fbeb140,Sun Studio fixes,2018,,
8b05b4c,fix  found by Sun Studio,2018,,
eceb798,fix linking error with PGI  std::string::npos not necessarily printable,2018,,
4934716.0,Optionally write out a subset of the systems in an EquationSystems object in write_equation_systems,2018,,
581b645,header portability fix for Sun Studio,2018,,
f5f486b,Avoid overzealous deprecated() warnings,2018,,
359ab84,Typo fix in warning message,2018,,
b30240d,Warnings that are reached in parallel can be output on processor 0 alone.,2018,,
e448334,Fix up warning  make mesh numbering contiguous if we have to.,2018,,
7474661.0,Adding an assert,2018,,
5490496.0,We can safely renumber if necessary to plot an error vector on a non-contiguously-numbered mesh.,2018,,
7cff2ba,reduced_basis example 6 (at least...) isn't distributed mesh compatible yet.,2018,,
12443dc,handle heterogeneous constraints,2018,,
fd70923,Parallel refactoring  stage 1:,2018,,
3e0de71,Adding more example output files to gitignore.,2018,,
9246fc5,Updated list of publications.,2018,,
322db00,Accidentally made that last commit from an older checkout - here's the new Communicator part of the refactoring and the separate-namespace compatibility fix.,2018,,
6be3d1c,rbOOmit change: Fixed rb_eim_construction for --enable-parmesh,2018,,
d82a7a6,rbOOmit change: changed Parallel::sum to Parallel::max in rb_eim_construction to avoid a potential bug when an evaluation point is on a ghosted element. Also  removed parmesh assert in reduced_basis_ex6.,2018,,
38f9d80,rbOOmit change: fixed up comments related to the change in r6280,2018,,
e9295e0,I was expecting a cholesky solve to modify the matrix being factored  but not the right hand side too...  Finding that behavior was hell  but changing it seems to be quite cheap.,2018,,
c99af46,Const-correctness is nice  but so is correctness.,2018,,
bec8b2d,I forgot about receive-with-DataType shims  let's add them.,2018,,
455c9d7,Sanely return an out-of-mesh value when MeshFunction is given a non-serialized vector but asked for a non-local point value.,2018,,
7586b32,Added a method to get all the variable numbers in a system  since this is useful for setting up a MeshFunction that can access all the variables (as is done in rb_eim_construction.C),2018,,
979a890,MessageTag::invalid_tag.  Set this to INT_MIN.  Note that we can't use std::numeric_limits<int>::min() (which is equivalent) because that is a function call and not allowed in the initialization of static data in this case.,2018,,
fedbedd,Disable caching in Hermite elements until we figure out a cache test that can't break after a renumbering.,2018,,
d73530f,Try to be compatible with disabled-legacy-includes,2018,,
f2e1fb2,Bugfix for NodeConstraints scatter,2018,,
419ce4a,rbOOmit update: updating code to match the new DiffConext API (get_elem_residual instead of elem_residual  etc),2018,,
56d5f12,do not require message tag creation to be done by all processors in DEBUG mode.  there are valid use cases where processor 0 creates tags to send to other processors  but the call cannot be synchronized.,2018,,
7c1b199,Let's not deprecate Parallel::wait - the vector-of-requests case doesn't really have a new equally-convenient equivalent  and so we might as well leave the single request case in too for symmetry.,2018,,
f4886d8,commented-out profiling code,2018,,
cde879c,Add non-specialized versions of Communicator::receive to main header  fix implementations for --disable-mpi,2018,,
abc091f,Fixes for --disable-legacy-using-namespace,2018,,
1ff020f,Fix --disable-mpi linking failure,2018,,
7ba9863,Don't try to do fine C1 adaptivity in single precision,2018,,
f4a4ad9,Parallelize  and fix a very-hard-to-trigger-bug in  and add distributed-mesh compatibility to  sparsity pattern generation.,2018,,
ed6058d,Refactoring the System IO for increased performance.  Removed collective communication',2018,,
08dc7b4,After conferring with Ben: We're going to make the next libMesh release 0.8.0  and use 0.9.0 for the automake-d release.,2018,,
f54c46a,adding support for std::thread where available  will add fallback option to boost::thread if it exists,2018,,
055ca67,Change include .depend -> -include .depend,2018,,
e9145a9,fall back to TBB thread when it is there,2018,,
5dc6b45,semantics  sync with branch,2018,,
6f0fac6,Updating ignores.,2018,,
05d7e87,Clobber should also remove the library  the way it does for other contrib packages.,2018,,
8ddf775,std::thread compatibility,2018,,
16afbf3,use asynchronous threads to overlap disk IO with MPI communication,2018,,
344b8f0,comment-out oops,2018,,
abbf562,reset default,2018,,
5210656.0,use asynchronous threads to overlap disk IO with MPI communication,2018,,
411ce93,Refactor parallel id count updating.,2018,,
a07f7a6,Refactoring DiffSystem: it should now be possible to swap different objects of our Physics class in to and out of a single System.,2018,,
b0e93cf,More MeshTools::libmesh_assert_stuff,2018,,
d20b973,fix for standalone headers,2018,,
64ec7b2,The reduced basis IO needs to pass the version to read,2018,,
690ea5f,consolidate IO versioning info,2018,,
dc987d8,Fixes for --enable-singleprecision,2018,,
8955d12,RB IO optimization,2018,,
7eb4bf5,fix for Trilinos 11.0.3  must disabiguate (if that is a word) between int and long long,2018,,
97ef88d,Remove overzealous assertions,2018,,
acf1ae6,rbOOmit change: some more edits to RB IO  added a new helper function write_out_vectors in RBEvaluation,2018,,
fdc840e,Lowering convergence tolerance so this example will run in single precision too,2018,,
d467783,Public accessors for _vector_projections settings,2018,,
f8958b1,Fix ParallelMesh id selection for cases of mixed fixed-id and mesh-selected-id elements,2018,,
3e0ef43,Always update parallel id counts in prepare_for_use,2018,,
d6a99a7,Added reduced_basis_ex7: Simulate an acoustic horn with the reduced basis method. This requires --enable-complex,2018,,
84940fd,towards a CHANGELOG,2018,,
abf3020,fix for strict namespace,2018,,
deb9bd0,Set svn:ignore,2018,,
fce2de1,Additional debug-mode assertion regarding copying mesh elements,2018,,
c11b390,More robust next_free_*_id.  This fixes the recent ParallelMesh examples regressions.,2018,,
8e3a2a8,When we copy a mesh we probably don't want to change the partitioning,2018,,
7b8dd97,added info about new examples to CHANGES,2018,,
7fe8025,"Extend the MeshTools::Generation::build_sphere() function to optionally build what is called an ""icosasphere"" (or  more rarely  ""icosphere""). That is  a regularly triangulated 2D spherical mesh  obtained by iterative refinement of a regular icosahedron. The patch fits quite nicely into the preexisting code. An icosasphere can be built by setting the new flag ""flat"" to false (default true) when building a 2D mesh in 3D space.",2018,,
1e9ffbb,Fixes for Cygwin,2018,,
6e3d14b,Update configure,2018,,
59e70a7,Cygwin doesn't have random()  OSX rand() has weak low-order bits  but high-order bits from rand() ought to be decently random and portable.,2018,,
25382ed,updated .gitignore for automake,2018,,
b2c12c4,updated .gitignore for automake,2018,,
866ec76,updated .gitignore for automake,2018,,
11f3295,updated .gitignore for automake,2018,,
5de7a66,updated .gitignore for automake,2018,,
c02782d,updated .gitignore for automake,2018,,
c9c4ccf,updated .gitignore for automake,2018,,
49db607,updated .gitignore for automake,2018,,
cb12a16,updated .gitignore for automake,2018,,
2e0169a,updated .gitignore for automake,2018,,
c8ae972,updated .gitignore for automake,2018,,
b0fc21a,updated .gitignore for automake,2018,,
6431808.0,merged libmesh.automake branch,2018,,
a4f23b9,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
fd72114,bin/parameterize.pl->contrib/bin/parameterize.pl,2018,,
6a41dc4,adding generated files - oh how this pains me,2018,,
c157712,but not these...,2018,,
e5bf034,ylwrap,2018,,
1dab298,do not check this one in,2018,,
300ed00,do not need this,2018,,
33d8465,updated svn:ignores to reflect generated files,2018,,
8113467.0,working on stricter autotools prerequisites,2018,,
cfb3673,ignore installed paths,2018,,
5d1c9c8,prefer glibtool,2018,,
3eaebc6,adding utility to update .svnignore,2018,,
9c5582a,svn:ignore,2018,,
3fb62e7,svn:ignore,2018,,
6b45603,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
d594e14,strricter version requirements if we are going to check in generated sources.,2018,,
c7a75f5,forgot to add aclocal.m4  libtool as a generated files,2018,,
173ab99,I was wrong about libtool - wholly generated by configure  so no need to check in,2018,,
f2f321f,optionally support --disable-maintainer-mode,2018,,
937710a,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
b42c239,more robust version checking for autotools,2018,,
518fe10,Make comment up to date,2018,,
be98646,pass libmesh_INCLUDE to parmetis when building  so it can find for example a PETSc-provided MPI,2018,,
85596c1,If we didn't detect any usable Trilinos 9 components  then we didn't detect Trilinos 9.,2018,,
ec635d0,We're echoing that our tests use $LIBMESH_OPTIONS  let's also actually use $LIBMESH_OPTIONS.,2018,,
8dbc84c,automate the generation of source file lists using include/rebuild_include_HEADERS.sh and src/rebuild_libmesh_la_SOURCES.sh,2018,,
2675735.0,m4/trilinos.m4 update  trickled down,2018,,
5085081.0,"Make it easier to ""svn update"" an existing libMesh tree through the automake merge",2018,,
64dd25e,set executable,2018,,
987a99f,Avoid unused parameters,2018,,
6672c16,make doc works  loops through all the examples  makes their documentation,2018,,
1c5636a,make doc,2018,,
a9f20c9,updated svn:ignore for make doc,2018,,
145cb11,leave on dependency tracking  so the build dirs are useful for more than a one-time build,2018,,
1a0cb4f,fix for legacy include paths in Make.common,2018,,
07e7fc6,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
e58841b,svn:ignore,2018,,
19a558d,have make dist create xz files as well,2018,,
715707e,support for make upload,2018,,
804098e,updating for new build system,2018,,
2309689.0,updating for new build system,2018,,
79e5892,support for ./foo/bin/libmesh-config --cxx  thanks Robert!,2018,,
9b98671,Fix bug from FEMPhysics refactoring.,2018,,
c8c32cf,Update svn:ignore,2018,,
812f2bf,Refactor all examples to use examples/Make.common  where we define duplicated cruft.  Also symlink include/libmesh/fparser.hh so it does not need special handholding.,2018,,
55f8a8f,Use top_srcdir instead of libmesh_dir for enabling legacy include paths.,2018,,
6a319b9,Do not attach an empty near-nullspace.,2018,,
cadd903,Install buildable examples by copying,2018,,
b3ccf8f,build doc in builddir  so upload from there too,2018,,
fca12a4,build doc in builddir  so upload from there too,2018,,
5c05701,If we don't use strtold (which isn't as standard as I thought it was) in fparser  then libMesh compiles on Cygwin now.,2018,,
02a0f29,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
0b5e222,freshen,2018,,
3f994c1,configure for cppunit,2018,,
28afa77,build unit tests when cppunit is available,2018,,
f5ff069,make PHP again,2018,,
4921f19,order tests into logical groups,2018,,
65060000000000.0,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
6d85d9f,make test_headers,2018,,
f1723b8,backport slepc.m4 from libmesh.automake branch - no longer include SLEPc's makefile bits in our top-level Make.common file.,2018,,
f176eee5,backport run.sh cleanup from libmesh.automake,2018,,
c35edd0,gotta export this for the underlying make configuration query,2018,,
54b37c3,export SLPEC dir when we set it,2018,,
b0c34d0,Adding Vikram Garg's new solution history ABC + simple implementations,2018,,
1f49955,Strict compilers may not allow us to get an address of a complex::real() return value,2018,,
bb7688f,Fix SLEPC_DIR/PETSC_ARCH detection,2018,,
a1f9b52,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
16bf977,reintegrating multi-method support from libmesh.automake,2018,,
2d24bc5,do not micromanage serial vs parallel test suite - AM1.11 cannot handle it,2018,,
90cfd80,method to turn off g++ pedantic stuff - needed in some cases when including external libraries written in C++ that were not compiled with pedantic flags.  needed to use trilinos from apt on ubuntu with libmesh in debug mode.  will wrap the trilinos includes next.,2018,,
2333abb,stricken from the record - as Roy pointed out  this approach was hopeless,2018,,
165c442,Fix Parallel verify() for vectors/strings  add Parallel semiverify() methods,2018,,
5157204.0,Add MeshTools::libmesh_assert_valid_dof_ids,2018,,
af8b4e7,Updated publications website at Roy's request.,2018,,
87b86d7,DiffContext should save (and have an accessor to) the System it was created for.,2018,,
8db4c73,semiverify without MPI,2018,,
24cec6e,Matching change for r6489,2018,,
9cd0653,Bugfix for semiverify() with non-CommWorld communicators,2018,,
bcb2eb6,We need virtual destructors to avoid memory leaks here,2018,,
e0ae179,Default arguments fixes for Communicator::send/receive.  Fortunately the Parallel:: wrappers should have prevented anyone who hadn't updated APIs yet from triggering these bugs  but this means anyone who does want to update APIs while remaining 0.8.0 compatible would have to manually specify send/receive tags.,2018,,
6c272dd,Added PetscVector<T>::add_vector_conjugate_transpose  PetscVector<T>::indefinite_dot and DenseVector<T>::indefinite_dot. Also  small change to rb_evaluation for complex-valued outputs.,2018,,
7d0e6b9,Use CommWorld methods explicitly instead of Parallel:: shims,2018,,
a49d9a5,no one else is maintaining LASPack  and certainly not with our hacks to support complex numbers  so we might as well!,2018,,
7a443ca,System::vector_name should be const,2018,,
d4651c2,set METHODS when needed,2018,,
261f439,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
4cbfa41,New System::vector_name option based on patch from Vikram Garg,2018,,
5d74ab4,checkpointing today,2018,,
44ea143,MemorySolutionHistory bugfixes from Vikram Garg,2018,,
137ef48,Patch from myself and Vikram Garg adding support for DiffContext localization of arbitrary system vectors,2018,,
e22f6de,This assert didn't turn out to fail in the case I'm debugging right now  but couldn't hurt to test it in the future.,2018,,
c9fe8c2,Fix for a literal ParallelMesh corner case: we need to make sure that every processor with an element supporting a degree of freedom or node knows about any constraints affecting them.  This was triggered for me by a Dirichlet constraint with ParallelMesh load-balancing on  but I suspect it could have affected plain AMR constraints and/or systems with load-balancing off under other circumstances.,2018,,
d45d1dc,do not do color stuff when teeing to an ASCII file  or hopefully inside buildbot.  logic swiped from automake color tests,2018,,
7dcc0c9,Make a sometimes-underzealous debug-mode assertion sufficiently zealous.,2018,,
4eda33c,Fixes for ParallelMesh redistribution.  Simple --enable-parmesh tests are all passing even with reparititioning turned on!,2018,,
2459938.0,rbOOmit change: Added non-Dirichlet output vectors,2018,,
9d0da17,Fix for --enable-complex,2018,,
fa631f4,fix for ancient PETScs,2018,,
ed82596,Patch from Yaqi Wang.,2018,,
a6829ac,As per mailing list discussion with Barry Smith,2018,,
a793701,Add a comment explaining why we've got this disabled,2018,,
51a2a6f,"Stay compatible with whatever we do in the ""divergence of a scalar"" case.",2018,,
9410f0c,Add TensorTools::MakeReal  do something slightly less embarrassing for DecrementRank of a scalar,2018,,
6d9cf7d,Fix up templated FEMContext methods so that users don't have to manually specify which overloaded version to use,2018,,
97db8fb,checkpointing variable group work,2018,,
685fcfb,checkpointing - works just fine as a drop-in replacement when we have only one variable per group!,2018,,
06114ac,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
134a6be,checkpointing - seems to work!,2018,,
fe6281b,This commit introduces VariableGroups as an optimization when there are repeated variables of the same type inside a system.  Presently  these are only activated through the system.add_variables() API  but in the future there may be provisions for automatically identifying groups.,2018,,
9.535e+70,VariableGroup unit test,2018,,
46c7ec7,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
319e3d6,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
f58d4a4,cleanup,2018,,
a5b1706,update .gitignore,2018,,
5f1aab0,DofMap::set_nonlocal_dof_objects() VariableGroup optimization,2018,,
f023897,update .gitignore,2018,,
338f5ac,updating installation instructions.,2018,,
659d870,oops - John was right about those m4 files - sorry  thought I had added them!,2018,,
5db28da,bumping automake to 1.12.5,2018,,
1e5a8b3,bumping generated files using automake 1.12.5,2018,,
f03b151,update documentation (#3),2018,,
5a7661c,fixes for new example targets,2018,,
4a6155a,Add DiffContext::is_adjoint() - this can be used to perform different integrations when solving transient adjoints.,2018,,
2f0a92c,typo (#3),2018,,
6724d7e,Updated publications list.,2018,,
a3c146d,Everyone wants a README  so might as well add AUTHORS  COPYING  and INSTALL.  Renamed CHANGES to NEWS  added ChangeLog  and voila - we conform to the (OK  somewhat crusty) GNU coding standards.  No longer specify 'foreign' as an automake option.,2018,,
3a7b9a9,try markup,2018,,
05bd3e8,try markup - v2,2018,,
4cfa2e2,that did not work,2018,,
4cf32bb,describe METHODS (#3),2018,,
99cc2f4,describe build process (#3),2018,,
69a9e97,point to GitHub commit log (#3),2018,,
d3a55b4,get git SHA-1 hash into configured information,2018,,
64556fb,Dummy commit (remove blank line) for test purposes.,2018,,
237f9a1,point to new download location (#3),2018,,
bb25a76,VTKIO: Skip MONOMIAL variables as they cause crashes,2018,,
1ef948b,Add a TimeSolver::_is_adjoint flag  setter/getter,2018,,
1c37fc2,time_solver getter/setters  set adjoint flags,2018,,
946a955,Use libtool in Make.common as well - seems to help fix Moose issues.,2018,,
f20fa2f,"Fix for ""make test_headers"" on a fresh tree",2018,,
9.62e+213,Fix for --enable-complex,2018,,
ff94d53,adding a unit test for Jens - content tomorrow,2018,,
9d365f7,added unit test to make sure that the Jens issue is not a result of the new Variable Groups patch,2018,,
b379636,Merge pull request #9 from benkirk/devel,2018,,
34f7552,Updated include guards for all headers in libmesh to be ANSI-C compliant (no leading underscores!).,2018,,
855d2b3,incorporate Roys comment (#9),2018,,
b0b65ad,Merge pull request #11 from benkirk/devel,2018,,
21415a6,Initial implemention of libMesh (#10),2018,,
a683622,update based on feedback (#10),2018,,
feb030b,"Adding ""distance"" method to Sphere",2018,,
0ef6ffd7,More efficient ordering of constrained DoF index sets,2018,,
d8716a1,Additional test for mpi.h,2018,,
c46879c,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
81ad7a0,Removed incorrect assert in equation_systems.C. Assert is no longer valid now that we can plot a subset of the systems in an EquationSystems object.,2018,,
620ff34,Fix for --enable-mpi --disable-petsc cases,2018,,
6fc20d5,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
bdb3dba,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
1f2c279,Merge branch 'master' of github.com:roystgnr/libmesh,2018,,
54a7772,oops - did not complete enablegccdebugging -> enableglibcxxdebugging replacement.  done now,2018,,
c20cbcf,Merge pull request #5 from robert-we/master,2018,,
8157594.0,warn rather than skip silently.,2018,,
e624000,Don't double-add libmesh_*FLAGS when profiling,2018,,
25f631a,Misc example 2 needs a command line argument,2018,,
465a27f,update .gitignore,2018,,
239c3b8,update .gitignore,2018,,
64ddd20,adding MeshfreeInterpolation class,2018,,
ec70139,slepc example ignores too,2018,,
6174f35,adding InverseDistanceInterpolation & misc_ex8 to demonstrate usage,2018,,
ef53f14,adding nanoflann as a contributed package.,2018,,
04f2c21,incorporating nanoflann into our build system,2018,,
8da904e,updating generated files from previous commit  separately so as not to bloat the diff,2018,,
9632011.0,If we disable GLIBCXX debugging earlier on Darwin we can get it in the AM_CONDITIONAL and do debug unit testing by default.,2018,,
21c8178,Merge branch 'master' into meshfree_interp,2018,,
37f5d6d,Updated InverseDistanceInterpolation class to use an internal KD-Tree.,2018,,
302151.0,Actually perform inverse distance interpolation.  Also interpolate two different variables in the example to verify that functionality.,2018,,
4b409ba,Merge pull request #15 from jwpeterson/include_guards,2018,,
d624fd5,extend miscellaneous/miscellaneous_ex8 to do interpolation from one mesh to another,2018,,
bf3b161,Merge branch 'master' into meshfree_interp,2018,,
8457585.0,Converting PETSc configure test to use AC_CHECK_HEADER to enable easier cross-compiling.,2018,,
58f4a56,Merge pull request #14 from dknez/master,2018,,
17b9985,Patch to add project_solution/project_vector methods using FEMFunctionBase objects. Still untested.,2018,,
f3b245a,Undoing change to compiler.m4 and libmesh_optional_packages.m4,2018,,
f7aebc7,Minor cleanup of m4 files  mainly removing commented calls to AC_CHECK_FILE.,2018,,
efd625b,Removing AC_CHECK_FILE from slepc.m4,2018,,
4b97864,Remove AC_CHECK_FILE commands from tecplot.m4  replace with calls to AC_CHECK_HEADER where appropriate.,2018,,
65936f1,Merge pull request #17 from jwpeterson/slepc_check_header,2018,,
e0ff624,Merge pull request #18 from jwpeterson/tecplot_check_header,2018,,
a57b047,pass distcheck,2018,,
be55288,Merge branch 'master' into meshfree_interp,2018,,
1f1068e,incorporated m4 fixes,2018,,
0a76c4f,Removing AC_CHECK_FILE from trilinos.m4.,2018,,
00504b0,Bootstrapped after recent m4 file changes.,2018,,
1e23768,demo a MeshlessInterpolationFunction in miscellaneous_ex8.C,2018,,
fbb4d17,Merge branch 'master' into meshfree_interp,2018,,
7612143.0,Split the LIBMESH_CONFIGURE_INFO on whitespace.,2018,,
58df30f,PopLog needs to match PushLog name.,2018,,
39d350f,Updated publications list.,2018,,
a2039b0,"Split LIBMESH_CONFIGURE_INFO only on the string ""' '"" rather than any whitespace.  Looks slightly better in case some arguments to configure contain whitespace.",2018,,
0f0a6a2,Removing OStringStream from PerfLog.,2018,,
8a0bddc,Why use a helper function when the std::string constructor works fine?,2018,,
756f29c,Removing OStringStream from various classes.,2018,,
d4e7907,Merge branch 'master' into meshfree_interp,2018,,
7ca61a1,link to new example,2018,,
eae4ed5,Removing OStringStream from PetscVector.,2018,,
4b40fb3,Removing OStringStream from various examples:,2018,,
de36dd3,Deprecating OStringStream.,2018,,
7eb6d44,add mechanism to copy source data from other processors.  this is one of two obvious parallelization strategies  suitable for relatively small amounts of source data,2018,,
fcc6c45,Removing OFStream from XdrMGF.,2018,,
9f7dde0,Removing OFStream from Xdr.,2018,,
05a90de,Deprecating OFStream.,2018,,
ca9918b,Merge branch 'master' into meshfree_interp,2018,,
5a25390,documentation,2018,,
2e6c417,Fix accent,2018,,
ee96345,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
b8cb652,rigorous m4 quoting seems required for some older autoconfs,2018,,
a9bf681,Merge branch 'master' into meshfree_interp,2018,,
1f78193,fix for gcc-4.2,2018,,
a9dde6e,Merge branch 'master' into meshfree_interp,2018,,
376a8aa,Merge pull request #25 from benkirk/meshfree_interp,2018,,
77f924f,#include <sstream> as required  thanks to Solaris CC,2018,,
5e7d756,Merge branch 'master' into meshfree_interp,2018,,
80aa68d,autodetect variable groups  with an opt-out method too,2018,,
5027a68,rbOOmit change: fixed bug in RBConstructionBase::generate_training_parameters_deterministic,2018,,
cb07ab9,rbOOmit change: Added option to specify a single deterministic training parameter while the rest of the training parameters are generated randomly,2018,,
161ae73,rbOOmit change: Added print statement in rb_construction.C,2018,,
972983d,Trying to add Google Analytics traffic statistics to our github page  using the instructions mentioned in one of the answers here:,2018,,
65c670e,May need to use markdown version of README file to get analytics to work.,2018,,
499f0c6,fixed erroneous assert  all examples pass now,2018,,
c8e747a,Fix from Vikram Garg for adjoint_advance_timestep,2018,,
6b1a867,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
149915a,adjoint_already_solved patch from Vikram Garg,2018,,
6c5e388,use an int for pow happiness,2018,,
ebf64b3,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
1d4fd39,Merge branch 'variable_groups' of https://github.com/benkirk/libmesh into variable_groups,2018,,
416e401,revert misleading comment,2018,,
c76c8c9,test commit,2018,,
8f3e497,more #include <sstream>,2018,,
cb08b51,Merge branch 'master' into variable_groups,2018,,
8.76e+17,fix multithreading,2018,,
039942a,preserve exit status from examples,2018,,
c2790c2,skip for DIM=1 2,2018,,
10f5c1e,fixes for more config options,2018,,
dc9ad69,complex fix,2018,,
5328e6d,more complex fixes,2018,,
f1601e6,fix NOX configuration,2018,,
10e11d2,Merge pull request #28 from benkirk/variable_groups,2018,,
fd93777,Use actual markdown in README.md.,2018,,
d2c6b0b,Store adjoint solutions in SolutionHistory,2018,,
7161f66,Add a flag to SolutionHistory,2018,,
ac09ead,MemorySolutionHistory updates,2018,,
262802c,More flexible MemorySolutionHistory,2018,,
f4e03d5,fix first scalar number business,2018,,
5cbd5a9,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
a81867c,Use default grainsize for system_projection functions.,2018,,
a07ae70,Only get dphi for C1 continuous elements in ProjectFEMSolution.,2018,,
9b05f38,Added monitor callback in NewtonSolver,2018,,
06d2a9c,More bugfixes in ProjectFEMSolution. Thanks to Roy for privately pointing out the context.side issue.,2018,,
f78c308,Adding PETSC_CC_INCLUDES to PETSCINCLUDEDIRS,2018,,
729fe5b,Don't bother with an extra function call for querying SCALAR values until/unless we actually see SCALAR values that need to be set.,2018,,
4609c5d,Adding --host as an option to libmesh-config.,2018,,
4c4d9ba,Ignore autotools installation directories.,2018,,
f6c7633,Allow VariableGroup to group scalar variables together,2018,,
98f2d67,Merge pull request #31 from andrsd/var-group,2018,,
bedb253,Get the right variable name when querying SCALARs,2018,,
535bfac,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
b174c5c,TOLERANCE would be namespaced and easier to debug with if it was a static const rather than a macro,2018,,
36284c2,"Add a ""make coverage"" target for gcov/lcov output.",2018,,
a1b187d,fixup ML detection,2018,,
9da7de4,Add getpot_parse utility for debugging purposes,2018,,
4f1ee2c,Add GetPot Dollar-Bracket-Expression functions,2018,,
51e3c70,"Clean up gcov outputs during ""make clean""",2018,,
60cb7ee,Merge pull request #29 from robert-we/master,2018,,
f0b3054,Clear the KDTree too!!!,2018,,
a53f6af,discern whether we have been installed or not,2018,,
6442022.0,link external-facing ExodusII files into include/libmesh,2018,,
2857786.0,set back to executable,2018,,
df83cdf,fix for no nanoflann,2018,,
41420a3,Adding netcdf.h rule to rebuild_makefile.sh,2018,,
20fab33,Sed should read stdin by default  no need to specify dash?,2018,,
5a2ee4b,Regenerating include/libmesh/Makefile.{am in} using the appropriate scripts and bootstrap.,2018,,
fed3e7d,make building from a tarball work in the top-level,2018,,
842f477,Override sorting locale in rebuild_libmesh_SOURCES,2018,,
20ccfcc,Factor SyncNodalPositions out of that anonymous namespace so we can use it elsewhere in the library.,2018,,
7ba45d6,Add a non-const getter for _mesh_sys,2018,,
8e2409f,get_physics()/get_qoi() const/non-const getters,2018,,
d36da1d,Better accessors for moving mesh problems,2018,,
a198e80,Fix moving mesh code parallelism  regressions,2018,,
5a417c3,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
877533f,Allow spaces in matched square bracket tokens,2018,,
1e418c3,Ignore lib at the top level.,2018,,
f63784e,replace ibmesh_cast_ptr<> with dynamic_cast<> in FEMSystem::build_context (),2018,,
81994ab,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
387a220,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
745d639,Support include directives in GetPot,2018,,
3c8b25d,extending Tecplot API to handle newer time-aware data,2018,,
31fa639,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
b8c6e06,Removing superfluous libmesh_config.h rule,2018,,
a3b88ef,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
0a988cc,Moving mesh stuff moved to DiffPhysics,2018,,
27e9c88,Bugfixes for previous commit,2018,,
80bbdce,Avoid that dynamic_cast,2018,,
e9ce0ac,Add missing terms to adjoints_ex3,2018,,
0bb31ab,do code coverage configuration after we set compilers  so that it does not detect compilers for us,2018,,
8ce3bbd,reorder build rules to build dbg devel opt so that warnings appear early,2018,,
fd02bb8,Get coverage working again,2018,,
631cbfe,adding support for active_subdomain_elements iterators,2018,,
13d9042,Getpot log10 bugfix,2018,,
ea9e621,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
39cf9e4,update new Tecplot format to understand subdomains,2018,,
002c04e,Fix some compiler warnings with older PETSc,2018,,
c240b8a,clang 3.0 doesn't recognize -ansi,2018,,
3cdbd16,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
17ce0d4,More id types options  configurability,2018,,
fe96c80,Cut-n-paste typos fixed,2018,,
43fc5f5,adding MeshBase::subdomain_ids (std::set<subdomain_id_type> &ids) accessor method to construct a list of subdomain ids,2018,,
1d2456e,MPI_SIGNED_CHAR support with MPI 2,2018,,
849bdae,We'll want unsigned types for dof ids,2018,,
8057190.0,Replace prefix at install time for 'make install prefix=/new/path' (#27),2018,,
4f68faa,More XDR datatype options,2018,,
084df4d,Added -Qunused-arguments to the flags for clang  bootstrapped.,2018,,
bb928fe,Fix boundary_id_type independence,2018,,
b8a0bfe,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
c7599c9,VTKIO updates for parallel operation,2018,,
c7764f3,Adding fem_system_ex2,2018,,
42e3831,Forgot to add fem_system_ex2 to configure.ac,2018,,
1d9ebc1,Fix for --disable-vtk,2018,,
a348113,A couple more Xdr overloads,2018,,
3f8c666,Configurable processor_id_type,2018,,
3169b0e,fix for new index types,2018,,
482fe46,Fix (hopefully) for compiling against older VTK,2018,,
087e752,fix for solaris studio,2018,,
d78bab2,more verbosity when testing,2018,,
44e1945,Fix for signed/unsigned comparison warning,2018,,
52f192d,Commit the *rest* of the old-VTK-compatibility fix,2018,,
03e3121,fix for various configs,2018,,
a360ab5,MemorySolutionHistory bugfix,2018,,
dffd16b,Use dof_id_type  processor_id_type  std::size_t,2018,,
f4a9cd5,Restore 2 byte processor_id_type default,2018,,
6ee2c9e,More non-default-type-size correctness fixes,2018,,
1e01169,Merge pull request #32 from friedmud/dtk_cherry_pick,2018,,
e6dbda3,Remove redundant libmesh_config.h rule,2018,,
f04c3fc,Adding namespace libMesh to new classes,2018,,
5a99c41,More dof_id_type fixes,2018,,
9e15fc8,id_type fixes for unit tests,2018,,
90b467c,Update examples to work with dof_id_type,2018,,
c950167,Add DirectSolutionTransfer object,2018,,
c8547f2,add a couple of asserts to the DirectSolutionTransfer object... theyre not complete but theyre better than nothing,2018,,
89f20e1,fix to keep libmesh_config.h from getting duplicated when doing in-tree builds,2018,,
c406f0e,documenting some new features,2018,,
23984c2,Fix anachronistic example name in message,2018,,
1334c6a,fem_system_ex2 isn't expected to be thread-safe,2018,,
158deef,Partial fix for VTK with --enable-complex,2018,,
74f0c64,fem_system_ex2 won't currently run in 1D or 2D,2018,,
901a41f,TecplotIO fix for non-double-precision,2018,,
339e9f3,fem_system_ex2 should use has_boundary_id(),2018,,
5.333e+38,add MeshFreeSolutionTransfer,2018,,
f400330,Fixes for stricter compiler warnings,2018,,
33b6d51,One more part of that SideIter fix,2018,,
e076b62,Make Node  DofObject non-virtual,2018,,
11b106a,get public destructors back only for unit tests,2018,,
acaf786,Two build system changes passed in the night?,2018,,
30aa87b,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
096b88b,SolutionHistory updates from Vikram Garg,2018,,
aa8fd5a,Refactor truncating casts into libmesh_cast_int,2018,,
7a1f0f2,TimeSolver::retrieve_timestep(),2018,,
934b318,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
f2d670d,Fix funky comment from last commit,2018,,
e4820ae,Variable::sys() is now Variable::system(),2018,,
d2bc66e,SolutionTransfer fix for dof_id_type!=unsigned int,2018,,
5b4e8fb,Various int size changes  warning fixes,2018,,
f2ecb2b,Unit test uses processor_id_type now,2018,,
4cacb93,Fix for previous getpot commit,2018,,
edb95e3,Fix for dof_id_type==int16_t failure,2018,,
78e7510,Updating NEWS file for 0.9.0.,2018,,
5c0b1c7,Changes in dof_map.C for -Wshadow.,2018,,
24297a8,Changes in dof_map_constraints.C for -Wshadow.,2018,,
4d3793a,Revert a couple excessive size_t returns,2018,,
2e8a680,Changes in patch_recovery_error_estimator.C for -Wshadow.,2018,,
90d2d5c,Changes in uniform_refinement_estimator.C for -Wshadow.,2018,,
619a8bc,Changes in weighted_patch_recovery_estimator.C for -Wshadow.,2018,,
4ec194d,Changes in boundary_info.C for -Wshadow.,2018,,
edfe00d,Changes in legacy_xdr_io.C for -Wshadow.,2018,,
6d99d30,Changes in mesh_base.C for -Wshadow.,2018,,
ab684a4,Changes in mesh_communication_global_indices.C for -Wshadow.,2018,,
084d9b2,Changes in xdr_io.C for -Wshadow.,2018,,
9bda34e,A comment for later,2018,,
29bceb8,More dof_id_type fixes,2018,,
e8014bf,Merge pull request #34 from permcody/extruder,2018,,
7ab33af,Changes in fe_base.C for -Wshadow.,2018,,
d602ad8,Another swath of zealous-warnings fixes,2018,,
9df379c,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
d2a7360,Changes in fe_boundary.C for -Wshadow.,2018,,
3ce626a,Changes in fe_xyz_map.C for -Wshadow.,2018,,
8eff992,Changes in fe_xyz_shape_1D.C for -Wshadow.,2018,,
e0a2352,Changes in fe_xyz_shape_2D.C for -Wshadow.,2018,,
3180df0,Maintain the subdomain when extruding,2018,,
0bea13f,Changes in fe_xyz_shape_3D.C for -Wshadow.,2018,,
5732a7a,Changes in cell_hex.C for -Wshadow.,2018,,
d90021e,Changes in edge.C for -Wshadow.,2018,,
dc9053c,dof_id_type fixes for Elem::connectivity(),2018,,
761dc56,Changes in elem.C for -Wshadow.,2018,,
1760301.0,Changes in face_quad.C for -Wshadow.,2018,,
a7b0856,Changes in node.C for -Wshadow.,2018,,
a084d25,Changes in elem_refinement.C for -Wshadow.,2018,,
553d958,Changes in sphere.C for -Wshadow.,2018,,
0fe1b8f,Changes in abaqus_io.C for -Wshadow.,2018,,
ca2bf88,Changes in diva_io.C for -Wshadow.,2018,,
4eec4c5,Changes in boundary_info.C for -Wshadow.,2018,,
f7603c0,Changes in ensight_io.C for -Wshadow.,2018,,
bb62af8,Changes in fro_io.C for -Wshadow.,2018,,
c35c336,Changes in exodusII_io_helper.C for -Wshadow.,2018,,
01f0069,Wconversion fixes for dof_map_constraints.C,2018,,
9cea88d,More -Wconversion fixes,2018,,
c0d9111,Trivial change to save intel-12.0 from itself.,2018,,
777c9d9,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
901a9a4,More -Wconversion fixes,2018,,
c195d23,More -Wconversion fixes,2018,,
27ada9c,More -Wconversion fixes,2018,,
da06789,More -Wconversion fixes,2018,,
3b58380,Changes in gmsh_io.C for -Wshadow.,2018,,
0a5b4ab,Changes in gmv_io.C for -Wshadow.,2018,,
e7fa18c,Changes in gnuplot_io.C for -Wshadow.,2018,,
675fada,Changes in matlab_io.C for -Wshadow.,2018,,
39ef43c,Changes in legacy_xdr_io.C for -Wshadow.,2018,,
e01c2a1,Changes in medit_io.C for -Wshadow.,2018,,
0bc625b,Changes in mesh_communication.C for -Wshadow.,2018,,
76d09d2,Changes in mesh_data_tetgen_support.C for -Wshadow.,2018,,
42dc9f3,Changes in mesh_data.C for -Wshadow.,2018,,
718b5c4,Changes in mesh_generation.C for -Wshadow.,2018,,
6037ae7,Changes in mesh_modification.C for -Wshadow.,2018,,
59b7310,Changes in mesh_refinement.C for -Wshadow.,2018,,
b4181d1,More -Wconversion fixes,2018,,
ff01e99,Changes in mesh_smoother_vsmoother.C for -Wshadow.,2018,,
5bf9837,Changes in mesh_smoother_laplace.C for -Wshadow.,2018,,
c7954ca,Changes in mesh_tetgen_interface.C for -Wshadow.,2018,,
362a8c0,Changes in mesh_triangle_holes.C for -Wshadow.,2018,,
863bb6b,Changes in off_io.C for -Wshadow.,2018,,
766fd43,XDR data_stream method for long int,2018,,
cf147db,More -Wconversion fixes,2018,,
8233d0b,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
a895c95,More -Wconversion and dof_id_type fixes,2018,,
24cf3e0,Still more dof_id_type  -Wconversion fixes,2018,,
6fc715c,More -Wconversion and dof_id_type fixes,2018,,
7483669.0,More dof_id_type and -Wconversion fixes,2018,,
5983cd0,Parallel sorting/binning templated on index type,2018,,
d98644b,More dof_id_type and -Wconversion fixes,2018,,
4969010.0,add includes,2018,,
b04d66b,Changes in nemesis_io_helper.C for -Wshadow.,2018,,
1934deb,Changes in patch.C for -Wshadow.,2018,,
95290b9,Changes in tecplot_io.C for -Wshadow.,2018,,
21aee23,include licensing foo  comment preprocessor blocks,2018,,
1052202.0,Changes in parallel_mesh.C for -Wshadow.,2018,,
6442847.0,Changes in postscript_io.C for -Wshadow.,2018,,
ada8d27,mark new APIs as experimental,2018,,
24c9ae9,Fix for double!=Real cases,2018,,
f0b0f45,Changes in serial_mesh.C for -Wshadow.,2018,,
afe6891,Changes in tetgen_io.C for -Wshadow.,2018,,
4f7f315,Changes in ucd_io.C for -Wshadow.,2018,,
f2b3720,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
6721768.0,Changes in unstructured_mesh.C for -Wshadow.,2018,,
9231501.0,Changes in dense_matrix.C for -Wshadow.,2018,,
3fe13c0,More dof_id_type fixes,2018,,
4e3c261,Changes in distributed_vector.C for -Wshadow.,2018,,
6022fad,Changes in distributed_vector.h for -Wshadow.,2018,,
c720532,Changes in laspack_matrix.C for -Wshadow.,2018,,
802fe44,Changes in laspack_vector.C for -Wshadow.,2018,,
d44b957,Changes in petsc_vector.C for -Wshadow.,2018,,
99f0546,Changes in petsc_matrix.C for -Wshadow.,2018,,
513fb58,Changes in type_tensor.C for -Wshadow.,2018,,
5d7193e,Changes in quadrature.C for -Wshadow.,2018,,
ede2590,Bugfix for a recent ParmetisPartitioner bug,2018,,
f171897,More dof_id_type and -Wconversion fixes,2018,,
4ee1a2a,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
3728608.0,Typo fix for previous commit,2018,,
364de7e,Making ExodusII reader recognize more types of elements.,2018,,
87f203d,Large set of dof_id_type  -Wconversion fixes,2018,,
853388.0,Fix typo from previous commit,2018,,
01901ac,Merge pull request #21 from pbauman/femfunction,2018,,
25ef85d,Changes in quadrature_clough_2D.C for -Wshadow.,2018,,
032bf34,I guess don't use leading underscore prefixes in class function prototypes.,2018,,
10c4282,Changes in quadrature_clough_3D.C for -Wshadow.,2018,,
cd3e438,More -Wconversion fixes,2018,,
2b015ae,Storing the old time step must precede advancing,2018,,
755e89d,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
6d0631f,Another fix for floating point error,2018,,
84ad3de,Changes in quadrature_conical.C for -Wshadow.,2018,,
157bee7,Changes in quadrature_conical_2D.C for -Wshadow.,2018,,
cef8137,Changes in quadrature_conical_3D.C for -Wshadow.,2018,,
d091758,Changes in quadrature_gauss.C for -Wshadow.,2018,,
45c03a7,Changes in quadrature_gauss_3D.C for -Wshadow.,2018,,
3063bb0,Changes in quadrature_gauss_2D.C for -Wshadow.,2018,,
84a04ef,Changes in quadrature_gm_3D.C for -Wshadow.,2018,,
d16d746,Changes in quadrature_grid_2D.C for -Wshadow.,2018,,
38cb3bc,Changes in quadrature_grid_3D.C for -Wshadow.,2018,,
efcb3a2,Changes in quadrature_monomial_2D.C for -Wshadow.,2018,,
7c97c80,Changes in quadrature_monomial.C for -Wshadow.,2018,,
0eba6b5,Changes in quadrature_monomial_3D.C for -Wshadow.,2018,,
241d011,Changes in quadrature_simpson_2D.C for -Wshadow.,2018,,
b6155a5,Changes in quadrature_simpson_3D.C for -Wshadow.,2018,,
2a50ca1,dof_id_type fixes,2018,,
a2b4a12,Changes in derived_rb_evaluation.C for -Wshadow.,2018,,
addd2ea,Changes in derived_rb_construction.C for -Wshadow.,2018,,
42baa3a,Typo fix,2018,,
7949911.0,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
20d29c8,Changes in fem_function_base.h for -Wshadow.,2018,,
3268741.0,Changes in rb_construction.C for -Wshadow.,2018,,
92449f9,Changes in rb_construction_base.C for -Wshadow.,2018,,
433dbde,Changes in rb_evaluation.C for -Wshadow.,2018,,
95b9fbc,Changes in rb_eim_construction.C for -Wshadow.,2018,,
aba528a,Changes in transient_rb_evaluation.C for -Wshadow.,2018,,
81b6075,Changes in transient_rb_construction.C for -Wshadow.,2018,,
7bfe626,Changes in nanoflann.hpp for -Wshadow.,2018,,
b7a81e3,add type,2018,,
e5aac7b,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
2b80c18,Remove uninitialized dphi warnings in ProjectFEMSolution.,2018,,
0309eac,is_adjoint() bugfixes,2018,,
9.36e+199,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
514052e,UnsteadySolver fixes and optimization,2018,,
9f639a6,Merge branch 'master' of ssh://github.com/libMesh/libmesh,2018,,
69346ba,latest make doc,2018,,
e72d7d7,Adding adjoints_ex5 from Vikram Garg,2018,,
5e03922,Changes in reference_counter.C for -Wshadow.,2018,,
47ecc11,dof_id_type error fixes for Paul's patch,2018,,
9e74677,Changes in nanoflann.hpp  for -Wshadow.,2018,,
37150c9,Changes in type_vector.C for -Wshadow.,2018,,
fd2a60e,Changes in quadrature_trap_2D.C for -Wshadow.,2018,,
5dcdaaf,Changes in quadrature_trap_3D.C for -Wshadow.,2018,,
f2bc171,Changes in adaptive_time_solver.C for -Wshadow.,2018,,
928b41d,Changes in petsc_dm_nonlinear_solver.C for -Wshadow.,2018,,
9b7d416,Changes in petscdmlibmesh.C for -Wshadow.,2018,,
f842468,Changes in unsteady_solver.C for -Wshadow.,2018,,
48e44b1,remove stray character,2018,,
46c53e5,Changes in continuation_system.C for -Wshadow.,2018,,
b5e71bf,Changes in diff_context.C for -Wshadow.,2018,,
62ff67f,Changes in diff_system.C for -Wshadow.,2018,,
c9ecc93,updating documentation,2018,,
4da4419,Merge branch 'master' of https://github.com/libMesh/libmesh,2018,,
81603d3,Changes in equation_systems.C for -Wshadow.,2018,,
dd4af23,Changes in explicit_system.C for -Wshadow.,2018,,
683a8ba,Changes in fem_context.C for -Wshadow.,2018,,
02aaa1d,Changes in fem_system.C for -Wshadow.,2018,,
1dd956e,Changes in implicit_system.C for -Wshadow.,2018,,
23608fb,Changes in linear_implicit_system.C for -Wshadow.,2018,,
0074a3b,Changes in newmark_system.C for -Wshadow.,2018,,
5.623e+90,Changes in nonlinear_implicit_system.C for -Wshadow.,2018,,
2990ac2,Changes in qoi_set.C for -Wshadow.,2018,,
124edf8,Changes in petsc_nonlinear_solver.C for -Wshadow.,2018,,
9fe25b0,Changes in system.C for -Wshadow.,2018,,
8b44f9a,More dof_id_type and -Wconversion fixes,2018,,
4f8bc0b,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
bf70e5f,fix for --disable-amr,2018,,
511b51c,fix generated Makefile.in using blessed autotools,2018,,
a67175b,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
938bfb2,More dof_id_type and -Wconversion fixes,2018,,
256c8a1,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
370b0cd,updating web content,2018,,
1b108dd,updating web content,2018,,
621294d,Changes in system_io.C for -Wshadow.,2018,,
e18e63f,add MeshFunctionSolutionTransfer,2018,,
98dcbe8,Changes in transient_system.C for -Wshadow.,2018,,
ee01a2a,Changes in error_vector.C for -Wshadow.,2018,,
497073d,Changes in perf_log.C for -Wshadow.,2018,,
d8b5a6e,Changes in plt_loader_read.C for -Wshadow.,2018,,
bd4203a,Changes in location_maps.C for -Wshadow.,2018,,
91baeb8,Changes in plt_loader_write.C for -Wshadow.,2018,,
4927ba9,Changes in statistics.C for -Wshadow.,2018,,
aaef69c,Changes in tree_node.C for -Wshadow.,2018,,
1f62eff,Changes in utility.C for -Wshadow.,2018,,
9517de1,Changes in xdr_cxx.C for -Wshadow.,2018,,
316169b,64-bit fixes for key()  compute_key(),2018,,
08dc830,Fix for dof_id_type!=uint,2018,,
f69174e,Some 16 bit hashing  Xdr support,2018,,
1cd6c08,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
407b91b,-Wconversion fixes are hard in 16 bits...,2018,,
1d8a3ad,"Fixes for ""missing variable"" warnings in some configurations",2018,,
9fc683a,fix compile error,2018,,
6706a2f,Fix for cygwin,2018,,
ea79500,Merge branch 'master' of github.com:libMesh/libmesh,2018,,
7000966.0,use size_t  not std::size_t if we are only including stdint.h,2018,,
5eadc98,give Paul some glory,2018,,
cf226ff,scale image,2018,,
5e8a40d,proper link to cv,2018,,
e3cd714,link to optional dependencies from README.md (#33),2018,,
e709efa,sync README.md to README  hopefully soon automake will like the former...,2018,,
6eef7eb,workaround for new VTK code in complex mode - write the real part and print a warning.,2018,,
c506d9a,direct link,2018,,
4d2da6b,allow ./bootstrap --build-autotools,2018,,
c6e16ca,copyright info  fix for barebones build,2018,,
c01b0d5,copyright info,2018,,
7e50eab,fix for 1D  complex configurations,2018,,
c3cb34d,massive comment-only fix for copyright consistency,2018,,
f2661c3,fix for --enable-complex,2018,,
f495444,fix for --enable-complex,2018,,
0dd148f,Directly use the __DEPRECATED token to avoid warnings about deprecated headers coming from VTK.  This works for GCC  and the __DEPRECATED token has been used at least as far back as GCC 4.2.,2018,,
b4da774,Changes in adaptivity_ex2.C for -Wshadow.,2018,,
e17c79e,Changes in adaptivity_ex3.C for -Wshadow.,2018,,
729541a,Changes in adaptivity_ex5.C for -Wshadow.,2018,,
b657617,Changes in adjoints_ex1 for -Wshadow.,2018,,
e6f444c,Changes in adjoints_ex2 for -Wshadow.,2018,,
cccdb62,Changes in adjoints_ex3 for -Wshadow.,2018,,
2b9c717,Changes in adjoints_ex4 for -Wshadow.,2018,,
ba6afdd,Don't include deprecated o_string_stream header.,2018,,
0dc8e2e,Fixes for unused variable warnings.,2018,,
f957dea,Changes in adjoints_ex5 for -Wshadow.,2018,,
6ccd84e,Changes in fem_system_ex1 for -Wshadow.,2018,,
85a7e97,Changes in fem_system_ex2 for -Wshadow.,2018,,
eb616e8,Changes in miscellaneous_ex3 for -Wshadow.,2018,,
fe3039d,Changes in type_vector.h for -Wshadow.,2018,,
2.13e+206,fix for initing / seting up preconditioners with adaptivity,2018,,
1b4c2a7,Changes in miscellaneous_ex4.C for -Wshadow.,2018,,
2375c2c,Changes in miscellaneous_ex7.C for -Wshadow.,2018,,
0392b90,Changes in reduced_basis_ex1 for -Wshadow.,2018,,
95d8003,Changes in reduced_basis_ex3 for -Wshadow.,2018,,
1a5db52,Changes in reduced_basis_ex4 for -Wshadow.,2018,,
3847f57,Changes in reduced_basis_ex5 for -Wshadow.,2018,,
5bcca40,Changes in transient_ex1 for -Wshadow.,2018,,
5e0f961,Changes in vector_fe_ex2 for -Wshadow.,2018,,
14f5c71,Changes in vector_fe_ex3 for -Wshadow.,2018,,
d99e3fc,Changes in reduced_basis_ex6 for -Wshadow.,2018,,
2.138e+39,fix for PETSc 3.1 and older,2018,,
2b4e114,updating release notes,2018,,
8d5522e,The PETSc XXXDestroy() imbroglio occurred around PETSc 3.1.1.,2018,,
197b57f,fix for --enable-singleprecision,2018,,
6e1c876,Mark MemorySolutionHistory as still experimental,2018,,
81960.0,Adding Vikram's and Andreas theses,2018,,
5043d5a,Updating publications.,2018,,
ea1c143,Fix for --disable-amr,2018,,
bfeabec,Slew of header file interdependency reduction. Warning: you may have to include more header files in your user code due to the removal of many unnecessary prior inclusions.,2018,,
3b70312,Reducing header file dependences.  Instead of having a BoundaryInfo object in the MeshBase  we now have an AutoPtr<BoundaryInfo>.  This maintains the same level of safety with regard to garbage collection and removes the boundary_info.h dependency from mesh_base.h. If you have any code which used the mesh.boundary_info.xxx() syntax  you will have to change it to mesh.boundary_info->xxx().  The same idea was used in system.h to hold an AutoPtr<DofMap> rather than a naked pointer.,2018,,
8281432,Possible performance enhancement in Mesh::delete_elem. We use the passed Elems id() as a guess for the location of the Elem in the _elements vector. If the guess does not succeed  then we revert to the linear search.,2018,,
958c4db,fixed exodusII_io.C to include boundary_info.h,2018,,
d396552,Utility to convert a string to an enumerated value,2018,,
59e92ab,Cleanup of several .C files  including unnecessary or redundant includes.,2018,,
47a9d93,Script for detecting redundant/unnecessary includes in .C files.,2018,,
5b7f4c1,Added --cxx target to libmesh-config and echo_cxx to Makefile.,2018,,
1d84887,changed ex4 to take a user-specified order and finite element family,2018,,
8543577,Include utility.h for complex numbers.,2018,,
ea4a91e,Added support for EDGE4 elements  i.e. cubic 1D lagrange elements,2018,,
d16b76c,added DofMap::extract_local_vector(),2018,,
7cc6d79,removed deprecated operator() from the EquationSystems,2018,,
34e9e1a,changed component_mask to component_scale.  Allow the user to specifiy a constant scale factor for each variable in the system.  A variable is omitted from the error computation when (component_scale[var] == 0.),2018,,
96533e7,Changed component_mask to component_scale.,2018,,
a6adb32,Changed false to 0.0.,2018,,
bf0d368,Minor changes.,2018,,
ee5d4ac,Added forward declaration for Node.  This was needed for xlC on IBM apparently.,2018,,
d263fd9,Added explicit instantiations which seemed necessary on icc71 at TACC.,2018,,
f9dcc73,Oops  extra semi-colon in macro.,2018,,
21abf4b,Added != operator to TypeVector,2018,,
b0b5ab5,Added has_affine_map() function to enable future optimization of compute_map  inverse_map  etc.,2018,,
fe84836,Compiler complained about control reahing end of non-void func.,2018,,
f3d6ecd,"applied GMSH patch from Martin & added #include ""boundary_info.h""  Boundary information is now handled  and numNodes is now properly initialized.",2018,,
74158c9,if the BoundaryMesh is not going to copy the node pointer locations from the parent mesh then it must delete the nodes since it allocates memory.  Fixed that and the meshtool.,2018,,
56319fb,added Utility::enum_to_string().  Also  do not bother with ifdefs based on configuration state in enum definitions.  It really complicates matters and  after all  they are just enums.,2018,,
c3202bb,removed #ifdef for --disable-ifem,2018,,
897428f,Use default_quadrature_rule for accurate computations on macroelements,2018,,
aea1051,added a link to the wiki on the navigation panel,2018,,
89263dc,added the gallery to the navigation panel,2018,,
fc40f71,Enhanced readability for the PerfLog.,2018,,
46580cd,Added optional scaling by number of flux faces for the Kelly estimator.  This is useful for more equally weighting the elements on the boundary which may have fewer faces for which the flux-jump is computed.,2018,,
900ff4d,Minor change making the intent of a comparison easier to understand.,2018,,
786a3d3,Added virtual dtor as required by any class which is inherited from.,2018,,
0425c08,Added boost header files necessary for using the shared_ptr as well as a Make variable which adds the new contrib directory to the INCLUDE variable.  No uses for shared_ptr are in the library yet  but we plan on adding some.,2018,,
81cfdf1,Updated dependencies for perf_log  others.,2018,,
61767c5,added string conversion for QuadratureType enumeration,2018,,
b0c2925,Change to more informative function name,2018,,
c56a679,Attempting to optimize for affine map case,2018,,
f15acd3,Added another has_affine_map optimization,2018,,
2a63e8c,Added boundary integration support for infinite elements.,2018,,
f5f4fe0,No need for AutoPtr when object will do just fine.,2018,,
9f3e0b7,commented out an assert.,2018,,
369120e,Added -fPIC back to keep tetgen shared-library linkable,2018,,
a7c7c47,use \n for newline when printing a point. Do not want to force flushing from library code,2018,,
7cc32f4,fixed warnings in tetgen so that we can use the libMesh CXXFLAGS for compilation,2018,,
d1abcc8,removed -vec_report0 since newer versions of ICC/Itanium do not support it,2018,,
ebecea4,remove lib/*_devel in distclean target,2018,,
035626f,added tecio.a library for creating Tecplot binary files on Apple OSX,2018,,
47b1a4a,Added .png output functionality to GnuPlotIO,2018,,
1cd96ec,Changed GnuPlotIO constructor so that it takes OR'd bit flags to indicate plotting properties,2018,,
2242df6,Extra documentation in ctor ofinclude/mesh/gnuplot_io.h,2018,,
58f25e2,worked on default parameters for Intel icc v7.1,2018,,
daff690,Made project_vector() functions protected  since they currently only work when called from the System reinit process,2018,,
8462e4d,"Support for 1D ""Clough-Tocher"" functions Well  C1 cubics look like Clough-Tocher edges  anyway",2018,,
fad265c,Added restricted Clough-Tocher triangles,2018,,
dda250e,This commit was manufactured by cvs2svn to create tag 'sts114'.,2018,,
afb2d96,Updated ex14 Makefile to use Jacobi preconditioning under Petsc-2.3.0. A zero pivot is detected in the default ILU preconditioner.,2018,,
b9f6cde,Moved the huge DofObject copy constructor to dof_object.C  Also check before allocating zero length arrays in this copy ctor.,2018,,
b2cf328,Added a predicate which returns true when the dereferenced iterator is NULL.,2018,,
ecbb593,Updated the XdrMHEAD class to account for different element levels.,2018,,
1fe0f91,Added an iterator for subactive and not_subactive elements.,2018,,
9e9dbe6,Changes to enable writing/reading of refined meshes using a updated XDA file format that stores adaptivitiy hierarchy information.,2018,,
8e4eb1c,fixed Mesh::read() bool flag,2018,,
6120c0a,reworked mesh_communication.C to omit the temp_elem,2018,,
a2d70f9,An .png file showing a refined mesh  used in the xda_format document,2018,,
62d9177,Changed the xda_format.tex file to include description of the new XDA format which is able to handle refined meshes.,2018,,
2c667ea,Edited xda_format.pdf document which contains information on the new XDA format which is able to handle refined meshes.,2018,,
1f9f1e7,New but similar .png file showing a hybrid mesh. It was changed so that it would have the same line coloring as the new file refined_hybrid_mesh.xda.,2018,,
7eba5e3,Reference elements updated to reflect new XDA format,2018,,
fa09b71,Slight changes in XDA documentation,2018,,
38fa10a,Changes in the interface for EquationSystems::read and EquationSystems::write. Instead of using multiple boolean arguments to specify reading/writing properties  we bitwise OR enumeration values.,2018,,
09a75ba,fixed for no sidesets,2018,,
a867fcc,"Changes to XDR reading and writing to work with the new XDA format. Now refined meshes can be written out and read in using the binary XDR format.""",2018,,
084970a,Fixed makefile.,2018,,
313a212,Efficiency changes in xdr_IO.C.  Replaced two N^2 algorithms with Nlog(N) algorithms.  Reading/Writing xda xdr files is much more efficient.  The same change was also implemented in mesh_communication.C,2018,,
33d5e33,Fixed an issue with the MeshRefinement class and its initial_nodes vector. We were not accounting for cases where the Mesh was coarsened  and nodes were deleted.,2018,,
fe0aa41,Added a missing &.,2018,,
b838578,Wrote the compute_children_node_keys() function in elem.h which allows one to generate appropriate node keys while reading in a mesh with multiple refinement levels. This allows us to avoid a linear search in the MeshRefinement::add_point routine since all the nodes can now be found in the nodes hash table.  The resulting performance improvement was significant.,2018,,
bbdbb67,Added new parameter to add_vector to create unprojected vectors,2018,,
31222ea,Changed Example 10 to demonstrate reading and writing of refined mesh and solution.,2018,,
2ae4ab5,Added type for cubic Hermite elements,2018,,
8ff40a2,Fixed incorrectly pasted comment,2018,,
fc2d402,Added Hermite tensor product FE type (currently insufficiently tested),2018,,
6aef57a,Fixed linker errors,2018,,
8b73e68,Added HERMITE type to string_to_enum map,2018,,
aaccc73,Fixed incorrect master element in 1D elements  refactored 2D code  fixed caching bug in all elements.  Hermite elements appear to be working now.,2018,,
b1d5e15,Some additions to the ifem inverse map.,2018,,
84fe5b1,Added Hermite cubic approximation type option,2018,,
bd8f4bf,Allow all_second_order() to execute in parallel,2018,,
76ca7cf,Minor change.,2018,,
16bdabf,committed the MeshTools::Modification::smooth patch,2018,,
9fc86bd,added a file existence check across all processors that works in optimized mode,2018,,
41c4b2a,GMV ptet10 patch included,2018,,
ce7a0ad,Hermite shape function refactoring,2018,,
4a139a9,recognize Intel icc v9.0,2018,,
3736db6,latest patches.  Thanks  Martin,2018,,
5ebe2fd,remove trivial uninitialized warning,2018,,
14086d4,ignore the xda restart files,2018,,
bfdf20f,Removed outdated comment.,2018,,
edccd7f,checkin of patch recovery error estimator from Varis.  Minor code clean-up  no rigorous testing.  I think the elem_order needs to be replaced with var_order.,2018,,
f3d5e67,Added different petsc option targets,2018,,
bc1fee9,More informative error messages,2018,,
b56d878,Fix for 3D,2018,,
d5803b5,constructor was moved from the header file  but was still inline.  xlC (correctly?) does not provide global linkage  resulting in a linker error.  Fixed.,2018,,
489981e,ifdef-out MPI-specific variable,2018,,
95e671a,added .cvsignore,2018,,
7e1ce70,configuration updates  add a wrapper for dot,2018,,
1ae8f86,made code work with Sun C++ again - requires strict std:: conformance for all old C APIs,2018,,
d468fe2,fixed getpot,2018,,
6f43ea7,fixed documentation to reflect new compilers,2018,,
5ac23aa,fixed for MIPSPro,2018,,
32ba7c0,Changes for complex numbers.,2018,,
034d370,Implemented finite differenced second derivatives for 3D Hierarchics,2018,,
e15ec5f,"Fixed ""flipping vertex-based DoFs"" problem",2018,,
8e5b078,Library compatibility fixes for Real == long double,2018,,
dcc1bed,Switched affine test to use FPU,2018,,
51ed4dd,Better compatibility with Real != double,2018,,
82c98e8,Made TOLERANCE dependent on chosen FP precision,2018,,
eb6bdf2,Explicitly specialize for single and double to avoid undefined function when SINGLE_PRECISION is set,2018,,
1132e7d,Make default linear solver tolerance dependent on FP precision  to prevent convergence failure when using SINGLE_PRECISION,2018,,
86ee019,Changed linear solver tolerances to be FP precision dependent,2018,,
03e645f,Fixed cut-n-paste typo,2018,,
9b1b53e,Fixed code for complex numbers.,2018,,
08a86c5,Only processor 0 should read the data.,2018,,
ee14d08,Fixed assert in shape_second_deriv(),2018,,
930fccf,Command line parsing is now more correct and robust.,2018,,
305fafc,Fixed overzealous assert,2018,,
3addd2a,Added norm functions to dense vectors,2018,,
24607f8,Fixed broken l2 norm,2018,,
5a3bb6d,ScalarTraits specialization for complex scalars,2018,,
53ab69d,Added vim swapfiles to ignore list,2018,,
c0b1d71,Fixed comment typo,2018,,
9186c66,Added H2 error calculation options,2018,,
f5fcb9c,Added dot product to the NumericVector subclasses.,2018,,
b4fcf7a,Fixed compatibility bug when PetscReal==long double,2018,,
e23724a,Added long double specialization for compare(),2018,,
3bdcf93,Fixed out-of-vector (but not buffer overflow!) bug,2018,,
80c03df,Fixed Xdr read support for long doubles in double-precision files,2018,,
58388bf,Fixed typo from previous commit,2018,,
013a6c6,Fix for double != Real case,2018,,
43038cc,Make sure _exact_hessian initializes to NULL  only compute H1 and H2 errors if necessary,2018,,
156eaf7,must defone operator << before using it in an inline function,2018,,
2db94ec,Using PetscReal instead of Real in call to VecDot.,2018,,
c98f55e,Reduced penalty values to safer levels in modified code,2018,,
70ed1c0,Fix for when libMesh is compiled without MPI,2018,,
65b89ba,An order 6 quadrature rule was mistakenly labeled an order 7 rule,2018,,
fe4ed81,"Bugfix for ""all elements have identical error"" case - yes  this actually happened to me.",2018,,
c909beb,Define DOUBLE_PRECISION for consistency with SINGLE_ and TRIPLE_ cases,2018,,
105535f,Reworked the eigen system in order to support generalized eigenvalue problem.,2018,,
32bc6d5,Reworked the eigen system in order to support generalized eigenvalue problems.,2018,,
770e9d5,Fixed some problems combining Bernstein FE with infinite elements.,2018,,
535a26c,Omit the bubble shape for QUAD8 szabab elements.,2018,,
9ce93ef,Changes for complex numbers.,2018,,
c60eb05,Update for newer SLEPc versions.,2018,,
8b51c2d,Removed some std::couts.,2018,,
5a309ca,Added the usual constructors to ErrorVector  created a typedef to keep the choice of error value type in one place,2018,,
8089a7e,Fixed typo in comment,2018,,
78a48d9,Included the SLEPc Lancsoz solver.,2018,,
9488f1c,Added a boolean flag to the system class which allows you to skip assembling during the solve step if you know that for some reason the system has already been assembled e.g. during a previous call to assemble(). This can be useful if you are solving an implicit system with multiple right hand sides where you will need to solve multiple times but only assemble once.,2018,,
45f9f0d,We need an element-specific quadrature rule  not just a QClough rule that may not exist!,2018,,
9e19af0,Fixed broken yy derivative calculation,2018,,
6cd8fd6,Fixed Order documentation,2018,,
f256beb,update for building with SUPERLU  SUPERLU_DIST  and UMFPACK,2018,,
688afa1,Added an example program for generalized eigenvalue problems.,2018,,
349139a,Added option to use Hierarchics,2018,,
f661997,Ignore .nfs* file handles,2018,,
3a493cc,Ignore .nfs* file handles,2018,,
bd4b6cd,Make rectilinearity assertions less sensitive and tolerance-dependent,2018,,
4da895b,build update for intel icc 9.1,2018,,
45a8845,undo of erroneous ex10 checkin,2018,,
01505fe,added read-only method to get d2xyzdzeta2,2018,,
296821e,added support for gcc 4.1 and beyond,2018,,
1db0904,added ex17 to make rules  documentation,2018,,
2f857a2,added BLOPEX to libraries,2018,,
66ea884,Avoid bad pivots in preconditioner  remove more output files when cleaning,2018,,
acbac89,Replace domain file  2D uniform code with constructed mesh  2D/3D adaptive code,2018,,
5df89bb,Make sure laplacian jump is correct in 1 and 3 dimensions,2018,,
9ecc0fb,added Tet10 support,2018,,
c1df92f,updated documentation,2018,,
972402f,updated plot script,2018,,
84ee026,do not change precision for std::cerr since we do not print to it.,2018,,
ddcb7da,updated documentation,2018,,
0802b5c,Added accessor for the ksp object.,2018,,
bc21bc2,Enforce sequential DoF numbers to reduce storage and dynamic memory usage,2018,,
6826d7a,Fix non-expensive dof_object copying,2018,,
e34fbbd,allow for a user-supplied function to create constraints prior to generating the sparsity spattern,2018,,
22af6e3,With new autoconf  configure tests for gcc 4.2,2018,,
814125c,Move reinit until after all get_* statements  to allow unnecessary FE calculations to be optimized away.,2018,,
d7e42b0,Added optimization - FE objects now only compute data that has already been requested by get_*() functions,2018,,
41a81bc,Patch from Martin to print the parameter name in quotes,2018,,
dd430a0,Updated comment  fixed spelling errors,2018,,
cefd4e1,Fixed misspellings,2018,,
52b8b8f,Don't invalidate any dof ids when changing their number - the DofMap may use them as temporary storage space,2018,,
c2d376a,Added support for storing per-element p refinement levels  and for maintaining them through element refinement.,2018,,
e541e84,Maintain a possibly changed p refinement level after element coarsening,2018,,
fec48b1,Comment,2018,,
327e8f3,Turn off example 12 (until someone fixes it!),2018,,
5a418d3,Change from const to non-const parent elements  Add p refinement flags,2018,,
495d21d,Changed const to non-const parent,2018,,
582ad79,Stop setting ancestor p_levels (it's not the optimization I thought) Remember to initialize the p refinement flag,2018,,
36a0263,Added max_order() function  mostly for internal use to prevent p overrefinement,2018,,
cdd050d,More flexible interface for max_order(),2018,,
3e24f65,Add back the parent p_level() caching  plus a function which uses it,2018,,
c8ad984,Fixed accidental commit of intermediate files,2018,,
9209049,We apologize for the bug in the previous commit.  Those responsible have been sacked.,2018,,
4e821e9,make sure parent is not null before calling a method on it.,2018,,
1f6c114,Added Clough option to QBase::build(),2018,,
7532852,Fixing a potential (albeit unlikely) bug in FE caching (see also fe.C),2018,,
0e43af2,Fixing a potential bug in FE caching,2018,,
276b2ff,Use unsigned ints instead of chars where space doesn't matter,2018,,
6fb6a94,Use unsigned ints instead of chars when space doesn't matter,2018,,
727ee85,Added p_level argument to quadrature initialization  to let a constant-order quadrature rule be used on an adaptively p refined mesh,2018,,
0014ef1,expensive data structures no longer that expensive.  Thanks  Roy.  Remove the --disable-expensive option and associated headache,2018,,
9f5b856,New accessor functions  remember to initialize _p_level,2018,,
dc915fa,Clear unused function argument,2018,,
9b25122,Add first-order hierarchic option (useful for p refinement experiments),2018,,
f19a5ba,This commit was manufactured by cvs2svn to create tag 'pre_p_refinement'.,2018,,
879f414,Initial p refinement support - uniform p refinement is working  adaptive p and hp refinement has yet to be well tested.,2018,,
bac2db4,Replaced point.h include with Point forward declaration,2018,,
e5cdb76,Headers replaced by forward declarations,2018,,
91939f6,Replacing vector/tensor headers with forward declarations,2018,,
2ca729f,Replaced linear_solver include with LinearSolver forward declaration,2018,,
0155f9c,Replaced nonlinear_solver.h include with NonlinearSolver forward declaration,2018,,
5587db3,Replaced vector_value.h include with Gradient forward declarations,2018,,
1f368e3,Replaced header includes with forward declarations in transient_system.h,2018,,
658a60d,Add include for linear_implicit_system.h that no longer gets brought in by transient_system.h,2018,,
085b75f,Add include file that no longer gets brought in by transient_system.h,2018,,
60f3b22,We need to constrain total polynomial order  not just element p_level,2018,,
9a835fd,Add option to add extra quadrature order to default quadrature rules  e.g. for more accurate error integration in exact_solution,2018,,
8268d1e,Bugfixes for accidentally overwritten temporary flags  removed assumption that constraint rows are nonempty,2018,,
7f9e5ad,Remove assumptions that constraint rows are nonempty,2018,,
9e3ed99,Minor typo fix,2018,,
edfa00c,Make set_p_level's treatment of ancestor p levels more reliable  add the unfortunate hack_p_level interface that new projection constraints code needs,2018,,
d0bef4d,Write p refinement levels to .gmv output for p and hp refined meshes,2018,,
392efbc,Some higher degree hierarchic shape functions  bugfix for infinite elements,2018,,
882edaa,Simple (stupid) hp refinement options  bugfixes,2018,,
1fadbc7,Added first_order_equivalent_type function,2018,,
5eb1ceb,Made subdivision of second order elements optional,2018,,
7c54e47,Added ExactErrorEstimator class,2018,,
7249a7a,Fixes for hp refinement,2018,,
8682dbf,Use old p refinement level when getting old dof indices,2018,,
66c7938,Fixes for hp projection cases,2018,,
c145d32,Jacobi preconditioning is slow.  :-P,2018,,
e40cdfe,Added missing column to matlab comment,2018,,
847bb73,Add more local elem variables  to make gdb use easier,2018,,
ec3c1a3,Fix false positives in detection of unrefined islands.,2018,,
9dba9db,Fix potential segfaults  add new utility function for mesh smoothing,2018,,
a2d61fe,Fixed cut-n-paste bug,2018,,
66b8e2d,Update smoothing code to handle hp meshes,2018,,
027d781,Add hp options  (broken) 3D options,2018,,
efdbf76,Added virtual keyword to destructor.,2018,,
69d9f0e,Fix gcc warning,2018,,
fd317af,Additional approximation options for testing high p hierarchic triangles,2018,,
30514a7,Added high order hierarchic triangles  replacing existing hierarchic triangle code,2018,,
b1724c5,Fixes for complex numbers.,2018,,
71e2a10,Replace weird O(p) exponent calculation with O(1) lookup table,2018,,
9c95126,Switch to lookup tables for hierarchic basis function numbering,2018,,
579a2f5,Use first order elements to describe geometry,2018,,
a5aad0d,Warning comment about limited simplex support until we extend all_tri (and ideally FE<HIERARCHIC>) to tets,2018,,
efca7f0,Add 3D support,2018,,
1c9f429,Add 3D L mesh,2018,,
3307841,Add support for 1st order hierarchics on 1st order elements  (incomplete) bugfixes for hierarchic cubes,2018,,
fb4b911,Fix basis flipping bug,2018,,
3bbeaad,Minor basis reordering,2018,,
55b9684,Extended Hermite elements to use high order C1 polynomials,2018,,
8cd5a0d,Add HERMITE element  non-singular problem options,2018,,
efbcf1c,More helpful comments,2018,,
ccb54f5,Support arbitrary (e.g. Clough) element types specified in input file,2018,,
1b27c5d,Avoid giving a misleading error message when bad combinations of finite element  geometric element  and/or polynomial degree are used,2018,,
7708d87,Do explicit cast in comparison to avoid gcc warning,2018,,
76ddf74,Add is_hierarchic() function to allow DEBUG-mode warnings when non-hierarchic elements are used with hierarchy-requiring algorithms,2018,,
6f355f5,Reworked the Bernstein elements. Quadrilaterals should now work up to the maximum possible order (currently 11th).,2018,,
0224469,Fix shape function derivative misnumbering bug,2018,,
7f69945,Minor Changes for QUAD8 Bernstein FE.,2018,,
c0b4d56,Add HPSelector class (not yet working) to attempt real hp refinement,2018,,
7895b6a,Use HPSelector class to try real hp refinement if requested,2018,,
875c9fd,Fix for h projection tests,2018,,
f51e87c,Many (but not enough) bugfixes,2018,,
6ac18f0,"Fix stupid ""wrong dimension quadrature rule"" bug",2018,,
3bd240f,Make sure we've got a definition for Tensor,2018,,
8afb732,"Fix ""go directly from coarsening to refinement"" bug",2018,,
bedad50,Fixed min*p_level_by_neighbor bugs,2018,,
6a96088,Added tests for easier debugging of MeshRefinement class,2018,,
f8a382e,Explain matchedhp vs. hp in config file comment,2018,,
df00dc7,Fixed DOF indexing bug,2018,,
6b25bc3,Add -Wuninitialized to dbg gcc flags,2018,,
9c1e5d0,Reverting last change - I didn't know -Wuninitialized didn't work with -O0,2018,,
ef0f736,Add DiscontinuityMeasure class for debugging purposes,2018,,
e85401b,Only constrain p dofs on active elems,2018,,
211a6c8,Add weight for making p refinement more or less likely,2018,,
7c48719,Fixed/simplified min_p_level_by_neighbor,2018,,
b193d58,DofMap now tries to constrain inactive elements where appropriate,2018,,
ccf816f,"Reran ""make depend"" to catch recent updates",2018,,
35256ad,Use projection instead of truncation to get better p-derefinement error estimate,2018,,
912b991,allow incorrectly-tagged QUAD elements in ExodusII input files.  These are created by Gridgen and are functionally equivalent to the Exodus II QUAD4 type.,2018,,
ea67e36,Enable comparison of FETypes,2018,,
ffdcc7b,Sobolev order bugfix,2018,,
15fbecc,This commit was manufactured by cvs2svn to create tag 'pre_diff_system'.,2018,,
76b29b8,Initial work on new DifferentiableSystem/DiffSolver/TimeSolver framework.  These APIs will probably be changed  this code may not work yet  and this CVS commit mesage probably has typos.,2018,,
5c3b930,Bugfixes,2018,,
c6b4bc4,Close PETSc vectors when necessary,2018,,
b78d4df,Typo fix,2018,,
c38c263,Break up destructor code for easier debugging,2018,,
45a830a,Added subclass of TimeSolver for steady-state solves,2018,,
7db2252,Added steady_solver dependencies,2018,,
4f22896,Bugfixes  robustness & accuracy improvements to compute_numerical_jacobian,2018,,
bd87ca6,"Fix ""accidentally copy EquationSystems"" bug  tweak parameters",2018,,
ce8cff1,Added support for cell-centered data.  Does not work with binary or discontinuous gmv files yet.,2018,,
f8ccfb2,Initialized variables to get rid of overzealous GCC warning.,2018,,
fc67d3e,If users don't request any shape function data before FE::reinit()  assume they just forgot  and calculate everything.,2018,,
6c6e3db,Lots of updates to DiffSystem framework,2018,,
6c1ce90,Added *=  += operators to DenseMatrix and DenseVector,2018,,
9313ad6,More modifications to DiffSystem framework,2018,,
f8c84c7,More DiffSystem framework updates.,2018,,
6400e4a,Updated dependencies,2018,,
271ba1c,Added swap() methods to DenseMatrix and DenseVector,2018,,
8b0fa2f,Fixed const-correctness in swap(),2018,,
24e34a0,Fixed dumb bug  vowed to compile even simple future changes before committing to CVS...,2018,,
be1f873,Added DenseMatrix max/min/norm functions,2018,,
5613283,More DifferentiableSystem framework fixes. Simple test cases work now.,2018,,
12e4f15,Use a separate Performance log line for compute_affine_map,2018,,
c32c01f,Fix incorrect has_affine_map,2018,,
3856721,Fixed the other bug in has_affine_map...,2018,,
b89ab31,Fix stupid error in has_affine_map,2018,,
58776e5,Bugfix for DIM==2,2018,,
472fd6d,Fixed bug when writing gmv files without fe solutions but with cell-centered data.,2018,,
9192387,compute_numerical_jacobian log no longer overlaps the assembly time log,2018,,
9906c4c,Build a default DiffSolver at init() not at construction  to be more efficient when the user wants to create a DiffSolver themselves,2018,,
f1444a6,Move performance logging of solve()s into solver classes,2018,,
41a38a2,Don't overlap FEMSystem::assembly log time with FE::* log time,2018,,
71e7f92,Added verify_analytic_jacobians option,2018,,
cdf87f0,Added parentheses to logging names,2018,,
0f3bab6,Added parentheses to performance logging messages,2018,,
0c8c670,Changed compilation flags so that tetgen will actually run!,2018,,
94666f0,Added just a couple of asserts as sanity checks on the sign of the error norms.,2018,,
27e13cc,Added a warning message about encountering 3D elements during a call to all_tri() which only splits 2D elements.  This may be annyoing and so you can remove it if you want to.,2018,,
773290c,Updated header dependencies,2018,,
1ce3350,Many more bugfixes/enhancements to DiffSystem framework  which now works for transient nonlinear problems,2018,,
672b68d,Added example application using experimental DiffSystem framework,2018,,
ae853c7,Better nonlinear solver stopping conditions,2018,,
a4999a0,Updated comments,2018,,
76c68ac,Separate solve and advance_timestep in TimeSolver class,2018,,
1e0d5c0,Added UniformRefinementEstimator class for brute-force error estimation,2018,,
2c0705d,More optimized & accurate uniformly_coarsen,2018,,
f135cb5,Removed maintain_level_one option from uniformly_*coarsen functions,2018,,
9cc60c0,Added dependencies for uniform_refinement_estimator.C,2018,,
5d323db,Bugfixes - UniformRefinementEstimator seems to work now,2018,,
a002b2a,Only p refine active elements,2018,,
3f8aeff,Better warning/error messages for p overrefinement,2018,,
f3fe5e3,New header for dof_map,2018,,
fb18445,Added new flag_elements_by_error_tolerance refinement strategy,2018,,
3c34b4f,Enforce fixed formatting for tetgen args (this is not necessary for tetgen apparently but it was for triangle  which could not handle scientific notation.  Also added a single assert.,2018,,
dcd37ed,Extended build_cube functionality to create meshes with TET4 and TET10 elements.,2018,,
b4b548e,Bugfix for DEBUG/not-verifying-jacobians case,2018,,
1eef8d3,"Fix for ""not advancing time"" bug",2018,,
c9a0dbf,Added l2_norm() method to StatisticsVectors,2018,,
c7f86f0,Added reinit() method to handle mesh refinement correctly,2018,,
d316384,When solving with limited linear tolerance  it's not safe to use anything but zero as our initial Newton step guess,2018,,
ea64c57,Make NewtonSolver quiet by default,2018,,
7bf90a7,Bugfixes: backup the solution  and don't overwrite the accumulated error values,2018,,
4d4c11e,Make sure current_local_solution is up to date,2018,,
8af3319,"Do a ""deep copy"" of nodes and elements in the Mesh copy constructor",2018,,
ec65ba8,Fixed bug in sync() which prevented newly created elements from having the right node pointers.,2018,,
65a1d5b,Generic implementation of computing a cell volume with several specializations.h,2018,,
dc8ea6e,Added volume calculation formula.,2018,,
175bb29,Added volume calculation for pyramid.,2018,,
eea24a3,Cell volume formulae are not as easy to come up with as I thought. Falling back on the default implementation (build an FE and sum JxW) for all bi and trilinear type elements including QUAD4.,2018,,
8fe606a,removed const qualifier on return type,2018,,
07193e6,Enabled user control of (and added reliability improvements to) substepping,2018,,
d9672d0,Test for ridiculous verify_analytic_jacobian values,2018,,
4f86913,clarified exit logic in FE<>::inverse_map()  I do not expect this to change anything except to make the code more clear.,2018,,
9fad711,added ex18 to the documentation,2018,,
8982d79,minor changes for MipsPro C++,2018,,
1e503b8,Allow any small nonzero linear solver tolerance,2018,,
c6aeefe,Triangle::destroy now needs to know whether the struct it is destroying was used for input or output.,2018,,
32bdf40,Always report divergence  even when we're told to be quiet,2018,,
21d0c1a,updated documentation,2018,,
58dc56c,updated documentation,2018,,
8b8303f,updated documentation,2018,,
c713661,Changes for complex numbers.,2018,,
6502ca5,Brought dependencies back up to date,2018,,
d067940,contain doxygen files under same style as main page,2018,,
7c30473,added Roys 2006 Fe Rodeo talk,2018,,
03a390b,added more external links,2018,,
6aa0c37,Ignore near-zero pivots in the preconditioner,2018,,
c076d1b,Make the copy constructor correctly restore adaptive grid and neighbor information,2018,,
4662b0f,updated documentation,2018,,
a5aad1a,updated documentation,2018,,
aab811a,updated documentation,2018,,
077dd3c,updated documentation,2018,,
0d8fe15,fixed typo,2018,,
6963d26,Added DofMap::enforce_constraints_exactly(),2018,,
5187d54,Added additional output to make echo,2018,,
4321b36,"Correctly find ""diagonal"" constraint entries and turn off debugging in enforce_constraints_exactly()",2018,,
b589181,"Make sure newton_iterate is closed before beginning work  use enforce_constraints_exactly() on Newton steps to reduce their ""drift""",2018,,
d696f84,Added MeshRefinement::flag_elements_to_nelem_target(),2018,,
a2bf8fd,Bugfixes and return value (for use as a stopping criterion) for flag_elements_to_nelem_target(),2018,,
e43e7a9,Experimental adaptivity support,2018,,
937cbbf,Fixed typo,2018,,
8ceac99,Coarsen the right number of elements  with a more informative comment,2018,,
347c19d,Include missing headers,2018,,
117b4e8,Break ex18 into (relatively) physics-independent and physics-specific parts,2018,,
1f3b9c9,assert that all_tri() hasn't been called on a refined mesh,2018,,
60c43dc,Move solve options to config file,2018,,
711a475,Added support for delaunay triangulations of domains n-gonal holes cut out.,2018,,
7a91177,Minor changes  moved more options to input file,2018,,
860d48a,Added volume computation for pyramid with bilinear base and the tri-linear HEX8 element.,2018,,
5953088,Added code to enable construction of a TRI6 mesh using build_delaunay_square,2018,,
f260d58,Geometric volume calculation for 6-node prism elements.,2018,,
5c768ec,Added specialized volume computation for Quad4. Also added an approximate volume computation for non-planar Quad4 (living in R^3).  The analyical expression for the area is too complicated to evaluate and the quadrature (2x2 rule) results in 4 to 5 digits of accuracy in most cases.,2018,,
2d9c6c1,Trivial: Fixed indentation,2018,,
6e4da25,For now  DiffSystems should project both linear and nonlinear solutions on reinit(),2018,,
06ecf05,Add warnings to experimental code,2018,,
72fb41c,Warn about experimental code  turn on more debugging info,2018,,
4588fb23,Added assert (dim==2) for MeshTools::Modification::smooth.,2018,,
0cd2666,Weakened asserts() in FE::inverse_map so they don't give false positives on small elements,2018,,
13b2a48,Updated dependencies,2018,,
d1137da,Produce cleaner output in non-quiet mode,2018,,
15ca7ff,"Avoid ""&phi"" and ""&psi"" - so Firefox won't render them as actual greek letters in the documentation pages",2018,,
97aadb1,MeshRefinement API changes  _coarsen_by_parents option,2018,,
47fbe0d,Temporarily disabled unbuildable target,2018,,
ec0c7ce,Switch to non-deprecated MeshRefinement interface,2018,,
a32cd0e,"Also temporarily remove ex13_nonlinear from ""make run""",2018,,
55fa171,Adding support (currently broken) for parallel DiffSystem framework solves.,2018,,
e401ef1,Fix potential unclosed solution in parallel runs,2018,,
a3a3610,Loosen the coarsen and refine fractions by one element.,2018,,
32ad7bf,Specify mesh refinement parameters,2018,,
6dee701,Add (deprecated) support back for component_mask,2018,,
9b3e0bd,Switch to new MeshRefinement APIs,2018,,
7c2b3f7,Switch to new MeshRefinement API,2018,,
ea6f984,Updated configure test to set icc compiler flags based on x86_64 or ia32 architecture availability.,2018,,
29e5680,Do from-analytic projections for HERMITE elements,2018,,
98871f2,do not use -tpp6 with -xP,2018,,
c339085,Fixed bug in broadcast_mesh when reading in adapted meshes in parallel.,2018,,
ea7988f,More verbosity,2018,,
c0d1acb,Avoid redundant close() calls,2018,,
c0f8161,"Set _is_closed to false whenever PETSc APIs that ""unclose"" a vector are called.",2018,,
be6e12d,Add TypeVector<T>::operator>,2018,,
63baa9f,Made the boundary_id() member a bit safer by not reseating the Elem pointer which gets passed in.  The user could possibly still need that pointer after the call to boundary_id().,2018,,
b6bce9a,Base basis function orientations on node locations  not node numbering.,2018,,
0cb90e4,Solver error messages should distinguish between running out of iterations vs. getting NaN solutions,2018,,
4904e4a,Use a couple little vectors to avoid std::map lookups,2018,,
07a3271,Optimizations in FEMSystem::mass_residual,2018,,
b6217c5,"Bugfixes for ""cannot instantiate"" and ""initializing pointlocator twice"" problems",2018,,
9a2dac6,Recognize ExplicitSystem when reading in,2018,,
b588a79,Add const accessor function for point_locator,2018,,
d99a227,Fallback linear search shouldn't return (or bother checking) inactive elements,2018,,
2bf879f,Only add active elements to the PointLocatorTree,2018,,
fbe9d3c,Tree Nodes now index all elements likely to intersect them  not just elements whose centroids they contain.,2018,,
fc096e9,Need math.h for isnan(),2018,,
5d7e73f,Avoid false positives for contains_point(),2018,,
1d78b4a,"Add ""out of mesh mode"" to PointLocatorTree",2018,,
2a5a96e,"Add ""out of mesh mode"" to MeshFunction",2018,,
9c8d6d6,Avoid using isnan on C++ compilers that don't define it,2018,,
55a9c74,Added framework for postprocessing steps,2018,,
fa268e4,"Hackish ""fix"" for the ""partitioning one element"" bug.",2018,,
569cca2,support for Gridgen-created TETRA elements in addition to TETRA4,2018,,
4d88f03,Added T. Krogers patch to enable region attribute support.,2018,,
ad41546,Support for lowercase hex8 type (which is the same as HEX8),2018,,
1357408,Add attribute accessor,2018,,
8bccf6e,Octrees may require a larger bin size for tet meshes,2018,,
1ce707d,Bugfixes for flagging on tiny meshes  restore missing use of max_h_level,2018,,
efada7a,handle gridgen-generated triangles,2018,,
0cdc55e,Added T. Kroger oops patch for compilation in debug mode.,2018,,
7038b3b,Added min/max angle calculation for Tri3s,2018,,
25dabac,Added some additional sanity checks (asserts). These probably will not be tripped  but better to be safe than sorry.,2018,,
6c89900,The all_tri() function now correctly keeps track of boundary side ids.,2018,,
44eee52,Bugfix: dimension mismatch,2018,,
5366e73,build_cube() now correctly sets boundary IDs for the TET4/10 case.,2018,,
0222c96,Use TOLERANCE instead of 1.e-4 in FEInterface::inverse_map()  Add tolerance/secure options to all inverse_map() functions,2018,,
6cd6682,Add tolerance/secure parameters to InfFE inverse_map functions,2018,,
edbdd80,Changes for complex numbers.,2018,,
715ae5a,Add inverse_map tolerance option to FE side reinits,2018,,
ef935ae,Reverting broken/incomplete patch,2018,,
ddb7539,Added optional tolerance argument for side reinit functions to use with inverse_map(),2018,,
e060768,Fix coarsening projection bug,2018,,
3162cd4,Made pulling speed and frequency parameters safer.,2018,,
041464b,Added additional STOP_LOG event in case of early return.,2018,,
babf661,Removed unnecessary diagnostic message about conversion-to-const.,2018,,
fb00e2e,Updated web address in comments about quadrature rules.,2018,,
c4bfa7b,Add workaround for gcc 3.3.5 misoptimization bug,2018,,
ecfe41f,Fixed inaccurate comment  added utility functions,2018,,
0d6bb3d,Factor fine->coarse projection code into FEBase,2018,,
af7cce9,"Use cached n_nodes value  avoid the ""unused variable"" warning that the last refactor caused",2018,,
acd66c2,Move ErrorVectorReal to libmesh_common.h with the rest of the precision typedefs  and clean those up.,2018,,
b757818,Switch from float to ErrorVectorReal and from std::vector<float> to ErrorVector where appropriate.,2018,,
c0def73,Give ErrorVector the option of truly distinguishing active from inactive elements.,2018,,
f73afba,Add estimate_parent_error option (currently ignored!) to ErrorEstimator & its subclasses,2018,,
b30d3e5,"Avoid ""unused argument"" warnings",2018,,
9e052cb,Added support for triangulating square domains with arbitrarily-shaped holes.  Required some non-essential API changes in MeshTools::Generation code.,2018,,
a531779,Bugfix for gcc 4.1,2018,,
ce1b3d0,More dimension-independent support for 1D boundary calculations,2018,,
6b98632,New NodeElem class for dimension-independent side calculations in 1D,2018,,
776a8d8,Make -pc_factor_zeropivot 0 a default argument with any PETSc version,2018,,
1ff9a0b,Return to default (quadratic h-refined lagrange) options,2018,,
576cc66,Bugfix: committing a forgotten file,2018,,
bc7d852,"Factored HPSelector out as abstract base class  started adding a second implementation  reran ""make .depend""",2018,,
c713b40,"Added ""singularhp"" refinement type",2018,,
af8f97d,Fix bug in parallel runs on Hae-Won Choi's system,2018,,
e85c220,Implemented HPSingular,2018,,
3a7a038,Avoid unused parameter warnings,2018,,
6600c6a,Fixes for second derivative support with Number==Complex,2018,,
f443e96,Make operator== default to test exact equality  add separate fuzzy equality functions  make MeshRefinement::add_point use intelligent tolerances,2018,,
d918ecd,Changed has_affine_map tests to use relative error tolerances,2018,,
e9e74f8,Upgrade to version 1.4.1 of tetgen.,2018,,
00279e4,Updated TetGen License.,2018,,
a5fd5c1,Added jacobi target,2018,,
bbb715c,Be more careful about nonlinear solver convergence when the linear solver hasn't converged,2018,,
5c9b9bd,Fix stupid ==/= bug,2018,,
4ef9e5d,"Adjust 2D/3D code to handle 1D h selection  with the new boundary point ""integration"" capability this makes the special 1D path redundant so it is now commented out.",2018,,
22cedbb,Fixed to handle 1D meshes  use component_scale terms,2018,,
91174ac,Encourange overriding of FEMSystem::assembly() for adding pre or post assembly code.,2018,,
aa13af1,Fix missetting of max_linear_steps,2018,,
66a7c7d,Added Elem::*family_tree_by_neighbor functions,2018,,
8f68369,Change floating point BC test to use boundary info IDs.,2018,,
b8afc9f,Switched to boundary id use  loosened solver tolerances,2018,,
3b3f2b5,"Use more ""helpful"" default NewtonSolver settings",2018,,
06ee92b,Refactoring the triangulation code  and moving it out of the mesh_generation.h header.  You will now need to include mesh_triangle_support.h to use the triangulation routines.,2018,,
6fab169,Make which_neighbor_am_i() work for coarser neighbors as well  remove duplicate functionality in fe.C,2018,,
53ef0c5,Fixed typo from last commit,2018,,
83c15fc,Added code to build_delaunay_square() which correctly sets boundary condition IDs.,2018,,
bf5e70e,Added new framework for merging KellyErrorEstimator and LaplacianErrorEstimator code  as well as for adding estimate_parent_error support for each,2018,,
7d80ed5,Added get_fe_type method,2018,,
5b6762c,"Avoid ""unused variable"" warnings when HAVE_MPI is undefined",2018,,
500ee7b,Refactored Kelly  LaplacianErrorEstimator code to use JumpErrorEstimator base.,2018,,
ff2a403,"Added Derek and John's error plotting ""hack"" as an ErrorVector member function",2018,,
8d7eddb,Use error_per_cell's parent error estimates if they already exist,2018,,
920d4e8,"Fix ""corrupting mesh DoFObjects"" bug",2018,,
5f9460a,Format error message better,2018,,
9ce4f78,Added which_child_am_i utility method,2018,,
158055a,Fixed copy constructor to set element children pointers,2018,,
2db7d49,Fix for second order meshes,2018,,
24a75a6,Fixed several bugs in refine_by_nelem_target,2018,,
aa6b2ba,Changed incorrect assert,2018,,
cc18699,Got the direction of coarsen_threshold mixed up,2018,,
8db983d,Added Tim Krogers diagonal-selector refinement scheme as the default refinement scheme for Tet4s,2018,,
c7dad3f,Make linear_tolerance_multiplier a user-adjustable parameter,2018,,
c449bf5,Make asymmetric_constraint_rows behavior optional,2018,,
280a1f7,Remove unused parameter to avoid gcc debug warning  make sure solution is synched to current_local_solution before using the latter to enforce hanging node constraints,2018,,
bdb5c02,Don't fiddle with hanging node dof matrix rows  since we'll be using enforce_constraints_exactly() in the solver,2018,,
2588e7e,Double check hanging node constraints on the final solution,2018,,
a74f28d,More paranoia in parallel,2018,,
11e702f,Add additional debugging option to DiffSystem classes,2018,,
6319447,Add implementation of print_solution_norms option,2018,,
e60fc96,Ensure that constraints are exactly enforced  parallel vectors are properly closed.,2018,,
8b48084,enforce_constraints_exactly doesn't need a non-const DofMap,2018,,
ecea7bb,Added max_constraint_error() function for debugging purposes,2018,,
1ec7c1d,Make enforce_constraints_exactly work properly in parallel and on arbitrary vectors,2018,,
bf2ebb6,Make sure DoF constraints have been created before project_vector() is ever called,2018,,
29a326f,"Move parallel vector handling into System::project_vector  fix a ""hanging dofs of second-order geometric elements"" bug",2018,,
7892bc6,Fix memory leak from last patch,2018,,
efe8612,Only constrain active elements - trying to constrain ancestors is unnecessary and trying to constrain subactives is a bug.,2018,,
8b029f7,Optimize away the unconstrained case  handle serial vectors more correctly,2018,,
6ab78b3,Handle serial vectors better in parallel runs,2018,,
8547956,Make sure the vector is reclosed by enforce_constraints_exactly(),2018,,
be37536,"Fixed my stupid ""all FE objects share same cached_nodes"" bug",2018,,
2e78c04,Added print_global method  changed default operator<< to use it,2018,,
c5d036e,Added print_solutions debugging option,2018,,
ecf71c6,"Fixed more corner cases of the ""weird hanging node behavior in parallel"" bug",2018,,
b17f404,Added implementation of the print_solutions debugging option,2018,,
b46e4a5,More paranoia in parallel,2018,,
693ab36,Fixed foolish bug in *family_tree_by_neighbor functions,2018,,
68664c8,Factor out the function for adding neighbor element dof ids to the send list  and make that function more thorough to handle the special case problems in Tim's testcase,2018,,
1f6d435,Put max_linear_iterations into config file,2018,,
ec2f6e4,Use more paranoia about user code when in debug mode,2018,,
b7a0c1e,Fix bug in numerical jacobian calculations,2018,,
cb38c80,"Move ""include .depend"" to the end of Makefiles so it doesn't override the default target",2018,,
f45c4dd,More accurate asserts,2018,,
5321a0b,Make sure print_solutions is initialized to a sane default,2018,,
4edc5a6,When partitioning  also set the nodes processor ids.,2018,,
1aec02c,Added local node iterators as well as iteration over nodes belonging to a specific CPU.,2018,,
a9b2d61,Add print_element_jacobians option,2018,,
1d14934,Avoid blksize=0 error on ultracoarse meshes,2018,,
91a8f63,Added specialization of volume() for Edge2 elements.,2018,,
6f4368b,Add continue_after_max_iterations option  default to true,2018,,
8b37937,Added volume() implementation for finding the exact length of a quadratic Edge3 element.,2018,,
9f37848,Obey continue_after_max_iterations option,2018,,
ad23033,Fix nelem_target flagging on coarse meshes,2018,,
1faf1b0,"Added ex18 to default ""run all examples"" targets",2018,,
14c6907,All *.C files in example directories should be dependencies,2018,,
80173f0,Checked in Tims diagonal-selector refinement for Tet10.,2018,,
de5c9a4,Removed the min_and_max_angle stuff for the Tet10.  Dihedral angles dont really make sense if you have curved sides.,2018,,
6761132,Generalized 1D element Jacobian calculations to allow for EDGE2/3 elements living in 2D and 3D space.,2018,,
084451d,Fixed element normal calculations for 2D elements living in 3D.  The normal vector now lies in the tangent plane of the element rather than arbitrarily in the x-y plane.,2018,,
9dcc333,Added point_value() utility function,2018,,
14674af,Fixed possible miscaching bug,2018,,
a19c51e,Rebuilt .depend files,2018,,
a1944f7,Add vim swapfiles and new target names to cvsignore,2018,,
c45b0bc,Removed unnecessary #include,2018,,
8748c2d,Add -dbg/-opt/etc suffixes to target names  remember to check current directory when finding file dependencies,2018,,
c0e8c53,Removed overzealous assert(),2018,,
335dec1,Added gradient calculation methods,2018,,
99c924c,Added 3D support,2018,,
489281e,Fixed DORIVATIVES typo.,2018,,
5356f50,Added all_first_order() function,2018,,
3091b1e,Added workaround to make it always possible to plot error vectors discontinuously,2018,,
f4a95aa,Added second derivatives for Tet10 quadratic shape functions.,2018,,
5b18bcb,Avoid unnecessary calculations on affine maps,2018,,
c204d54,Refactored compute_map code,2018,,
24b508f,Removed overzealous assertion,2018,,
2fa5311,Refactored the Delaunay triangulation support in LibMesh.,2018,,
db424dc,Added second_order_child_vertex utility function,2018,,
5e357fd,"Avoid ""unused parameter"" warnings",2018,,
f364862,"Avoid ""mismatched container size"" bug",2018,,
8a9fdfa,Fix for 3D discontinuous element support,2018,,
4c6f8e6,Add non-affine second derivatives warning,2018,,
6bceab9,Added pressure pinning code as well as an adaptive linear solver tolerance. The pressure pinning seems to make the problem harder to solve for GMRES+ILU  but TFQMR+ILU doesnt seem to have any problem.,2018,,
0508dd5,Refactoring PatchErrorEstimator,2018,,
06d6140,Use slightly more terse specpoly definition,2018,,
925acb2,Added anti-idiot test in create_submesh() to prevent passing in a reference to the same mesh.,2018,,
63fbf04,Added n_old_dofs() function,2018,,
5e1eb53,Added estimate_errors() function,2018,,
dc43eac,Added code for expanding element patches by point neighbors  not just face neighbors,2018,,
b3c3416,Removed temporary warning message,2018,,
8f0380e,Refactoring in estimate_error()  bugfixes in specpoly(),2018,,
3f7da89,Bugfix in find_point_neighbors(),2018,,
ebedbc2,Added basis patch recovery estimator support,2018,,
4cc74ae,Updated dependencies,2018,,
b87ab20,Split the XDR helper classes into their own files.  Makes it easier to maintain/modify the XdrIO class  but nothing else should have changed.,2018,,
547e65c,Fixed dependency/argument bug,2018,,
9396b93,More fine-grained profiling of patch-building functions,2018,,
b79fe8f,Use cheapest PatchRecovery compatible patch extension method by default,2018,,
2505f9f,"Fix ""too many warnings"" bug",2018,,
d7ec2a3,Fixed left/right_multiply_transpose(A) to work in the case where (this==&A).,2018,,
f548a2c,"Fixed another stupid bug in ""non-affine element second derivatives"" warning",2018,,
6619fb1,Made EquationSystems::solve() operate in numeric order  and be overridable.,2018,,
e3a4bb4,Added comment to delete_system docs,2018,,
5b84fde,Extending UniformRefinementEstimator to handle multiple Systems,2018,,
97b6b88,Refactored DiscontinuityMeasure to use JumpErrorEstimator framework,2018,,
87405af,Updated discontinuity_measure dependencies,2018,,
d2dac1d,Avoid using a hardcoded include path when generating .depend,2018,,
115b980,Updated dependencies,2018,,
115e549,Fix for NaN hierarchic shape functions on triangle vertices,2018,,
b5830da,Fix missing initializations bug,2018,,
138bd5a,Dependencies update,2018,,
e037c82,upped ascii precision from 12 to 16 digits,2018,,
9fe6de1,Initialize iterator outside for loop.,2018,,
44298ca,Correctly add sides to BoundaryInfo when calling build_square with TRI3/6 elements.,2018,,
e9df46b,Use zero exact solution by default,2018,,
8aca461,Add additional error indicator type  simplify config file,2018,,
7f1b897,Fixed stupid indexing bug in has_affine_map(),2018,,
155fe5f,Removed debugging error() call,2018,,
927e0a8,The people responsible for sacking the previous bug have just been sacked.,2018,,
661be24,Fix cut and paste bug in has_affine_map(),2018,,
2466d32,Fixed loss of precision in ASCII bug,2018,,
a79f2cd,This commit was manufactured by cvs2svn to create tag 'libmesh-0_6_0-rc1'.,2018,,
869d5ac,Add mesh elements in DofObject ID order  to avoid later bugs (e.g. when reading complex solutions),2018,,
cb331ff,Try to avoid O(n) delete_node() cost when possible,2018,,
8042693,This commit was manufactured by cvs2svn to create tag 'libmesh-0_6_0-rc2'.,2018,,
a0f74be,Localize (update) each system after an EquationSystems::read(),2018,,
8a48d01,"Attaching ""zero_solution"" functions to ExactSolution objects is now unnecessary",2018,,
b434549,Use existing parents map rather than redundant vector,2018,,
fac9e30,Add elements in ascending ID order when broadcasting mesh,2018,,
c42ee9b,Added operator==,2018,,
9554aab,Don't write out unrecognized system_type strings,2018,,
27c7327,Fix non-initialized variable warning.,2018,,
03da0ea,Make sure our point locators only return active elements,2018,,
de9e7b5,Our cached _element should start out NULL  not start out as a potentially inactive element!,2018,,
6b17262,Allow redundant add_system() calls,2018,,
3369394,Be tolerant of redundant add_variable  add_vector calls,2018,,
4ce9ade,Make clear() behavior more correct  make FEMSystem more resilliant to multiple init() calls,2018,,
c5a988f,Patch by M. Luthi: change line -> 3line,2018,,
32b922f,Added hessian calculation support to MeshFunction,2018,,
15e8073,"Fix for ""may delete uninitialized pointer"" bug",2018,,
a876cf9,Added attach_reference_solution() method,2018,,
d2e62f9,Modified Elem::build_side() to take a boolean flag (default true) which allows the user to obtain a proxy Side object (which just forwards most calls on to the parent) or a true Side object which can stand alone.,2018,,
2e6c210,Remember to initialize MeshFunction,2018,,
e4b150c,Changed order of include files for cxx version of mpich.,2018,,
fbb28df,"Martin's ""report bad element ID"" patch",2018,,
6a55270,Bugfix  set-aware optimizations for Patch growth,2018,,
ea0ad0b,New patch growth options  shorter matsize calculation,2018,,
ab265cd,Fixed overzealous assertion,2018,,
8c76c82,Get rid of annoying warning,2018,,
55b982f,Move sobolev_order option to base ErrorEstimator class  implement sobolev_order = 2 in PatchRecoveryErrorEstimator,2018,,
ee75704,"Removed ""_nonlinear_solution"" vector  changed code to solely use System::solution instead.",2018,,
f76b60e,Fix to make xdr_Real defined even when XDR support is disabled,2018,,
a5ef4a2,Initialize pointers to NULL to avoid uninitialized variable warning.,2018,,
b55044d,fixed for no second derivatives,2018,,
005acf9,Dependency updates,2018,,
0bd436c,Bugfix in has_ancestor_children,2018,,
0f5cb34,Use node iterators instead of looping over mesh nodes and do not move second-order vertices which are on the boundary.,2018,,
32f6f5c,Added the flatten() fuction which allows you to take a refined mesh and convert it into a flat mesh containing all level-0 elements.  Essentially deletes (in-place) all the inactive elements.,2018,,
8b3f8de,When node/element is deleted  also remove it from BoundaryInfo.,2018,,
a273976,Reimplemented build_sphere() for meshing circles and spheres.  Currently supports only Hexahedral elements in 3D  but could probably be extended to support Tets using the 24-split technique...,2018,,
3798cc7,Added has_system() method,2018,,
fed2b53,Added has_variable() method,2018,,
1b34828,Add configurable minimum_linear_tolerance option,2018,,
c0d0686,.bz2 compressed file support,2018,,
5b82073,Added missing include,2018,,
6bec5d3,Added AdaptiveTimeSolver class  necessary TimeSolver API changes,2018,,
12603dc,Reorder PETSc calls to fix problems with-pc_type hypre,2018,,
6ffbd39,Force file overwriting with bzip2/bunzip2  add MPI_Barrier where needed to keep processes in sync,2018,,
d26a9c6,Still debugging  developing AdaptiveTimeSolver class,2018,,
26a4fc2,Updated dependencies,2018,,
1b52c7d,Added calculate_norm() methods,2018,,
b208114,Added more sophisticated error norm options,2018,,
8a00d7c,time_solver->diff_solver() is now a function returning an AutoPtr.,2018,,
1c80e80,Return first order equivalent types even of first order elements,2018,,
cdb0b16,Fixes for more reliable coarsening behavior,2018,,
64b71d6,Fix relative_residual_tolerance read bug  undersolved adaptivity bug,2018,,
132c0a2,"Bugfix for ""drifting constraints"" problem",2018,,
968777b,added .fro file output format used by the ACDL at MIT for triangulated meshes,2018,,
208aefd,Moved minimum_linear_tolerance parameter to diff_solver.h,2018,,
5a4ef7a,Print post-Newton-step residuals when solver.quiet is off,2018,,
2789a2a,Obey max_h_level restriction in flag_by_error_tolerance,2018,,
2067e14,"flag_elements_by_nelem_target should now obey max_h_level and should avoid ""over-coarsening"" or ""over-refining"" when many elements have the same error value",2018,,
4f22ad6,Print out analytic and numeric jacobians when verify_analytic_jacobians fails,2018,,
aeb5d2a,Proceed (for now) when using different fe_family classes  since most use the same quadrature rule anyway.,2018,,
7af35e7,Fix FEType::operator<,2018,,
9855355,Make all_tri() handle hybrid meshes as well,2018,,
f8ab15a,Added optimization for project_vector(fptr etc) for simple elements  removed a different (potentially buggy) optimization,2018,,
f2b07c3,"Fix ""ignore parents with 0 error"" bug  and switch nelem_target return value to a (much) more stringent test.",2018,,
37337bf,"We can't implement an abstract operator=  so it should be ""pure virtual""  not ""silently fail"".   -)",2018,,
39d706b,"Use a global rather than a ""send list"" based solution  in case the fine grid is partitioned differently than the coarse grid.",2018,,
e260003,Remember to localize parallel vectors before taking their Hilbert norms.,2018,,
2cf158a,Properly localize projected solution vectors,2018,,
c96cece,Initialize dphi  d2phi pointers to NULL to avoid compiler warning.,2018,,
2ae1ae8,64-bit fixes,2018,,
3d9e6a9,Ugly solution for bug in parallel execution,2018,,
53fecd6,Fix bug in parallel runs with DEBUG defined,2018,,
66e081b,Don't complain about extra command line arguments - they may be PETSc options,2018,,
75622f6,Adding the Variational Smoother class.,2018,,
1c41f3d,Made example programs use LIBMESHRUN  LIBMESHOPTIONS environment variables.  Made ex15 start on a finer mesh in case we're running in parallel.,2018,,
345af9b,Avoid compiler warnings on instantiations where we need to downcast when normalizing,2018,,
2b6fd8e,Avoid compiler warning about int/unsigned int comparisons. I guess this fix should also help for when we add 2^32 sided elements.,2018,,
cac26a4,Added FEMSystem::extra_quadrature_order option,2018,,
5e25f07,OX v10.4.9 support with shared libraries  petsc  tecplot all working on Bens new macbook,2018,,
13342a5,clarify the role of total_weight,2018,,
5ed1f18,"Added default estimate_errors() implementation for ""simultaneously"" calculating multiple error vectors.",2018,,
aa1ae33,Specialized the new estimate_errors() version for more efficient use in UniformRefinementEstimator,2018,,
8dd9b5e,Fix Freudian slip in comments,2018,,
cc80f9a,updated for v10,2018,,
d01889f,"Bugfix for ""compute multiple errors"" case",2018,,
cccdf36,Fixed one more bug in simultaneous calculation of multiple errors,2018,,
799fe78,Updated dependencies (particularly for variational smoother code),2018,,
1d3ffb1,Give a C-style buffer enough space for the string-terminating null character that sprintf will add.,2018,,
832ccca,"Loop through example directories automatically  create the correct targets when asked to ""make link""",2018,,
0e52ea4,Lots of fixes for compiler warnings,2018,,
6a119ce,put the nodes in the proper place,2018,,
49447ea,"Reverting to fix ""programs won't link"" regression",2018,,
7d7b819,Add support for subdivide_second_order() == false in 3D,2018,,
816ee5c,Bugfix for 3D no-subdivision support,2018,,
5ee1cbb,Add proper sides to boundary info for prisms.,2018,,
9994bbf,"Make ""all_second_order"" return immediately on a second order mesh  Make ""all_tri"" preserve boundary info correctly on hybrid grids",2018,,
fe9f9ec,Added *_level_mismatch_limit options,2018,,
d1bedbd,Use new face_level_mismatch_limit API,2018,,
f022562,"Our new option variables now have snazzy modern features like ""defined accessor functions"" and ""initialization"".",2018,,
2f8dea7,Avoid using deprecated API calls,2018,,
89340b2,Deprecated DofMap::last_dof()  created DofMap::end_dof(),2018,,
f00d6d5,Constraining ancestor elements is sometimes necessary after all...,2018,,
ffe2281,fix for no ifems,2018,,
09bc248,Add process_recursive_constraints() functions,2018,,
1102be1,Added the option to solve a smoothly-forced cavity problem instead of just lid-driven.,2018,,
9606825,Avoid erroneous assert() in METHOD=devel,2018,,
d86bac5,Attempted fix for limit_level_mismatch_at_edge,2018,,
8c62a37,Add use_fixed_solution option to DiffSystem,2018,,
a62850d,Added elem_solution_derivative for use with use_fixed_solution option,2018,,
e720138,Added a routine to compare the current and old solutions in the TimeSolver class.  Added a max allowable deltat option to AdaptiveTimeSolver.  Added an extra option to compute stepsizes based on local truncation errors (though Roy thinks this is the wrong way to go :-).,2018,,
723c508,fixed_solution_derivative must take into account the theta scaling that the time solver does itself,2018,,
d539605,Added helper methods for use with elem_fixed_solution,2018,,
37e92e1,Remove warning about unused var.,2018,,
58ee998,Properly set up elem_fixed_subsolutions when requested,2018,,
c4d07ed,Factor out clear_*_ptrs functions to avoid unexpected side effects of calling clear() when initializing,2018,,
245279a,Correctly obey non-boolean component_scale values,2018,,
bc934d7,DiffSolver::solve() now returns int instead of void which can be used to figure out the result of the solve just completed.  Modified the Timesolver to have the option of decreasing the timestep after a failed solve in order to attempt the solve again.,2018,,
bca41b5,Disable AMR examples when ENABLE_AMR is off,2018,,
9d3b8ff,Fix compilation when ENABLE_AMR is off,2018,,
1dfd6c1,changes for complex numbers.,2018,,
3a98285,"Declare ""static const"" instead of ""const static"" to avoid compiler warnings",2018,,
b8432d3,More ENABLE_AMR fixes  beginning framework for constraint-based periodic BCs,2018,,
025cc96,Switched PointLocator classes to use MeshBase  made PointLocatorList slightly less broken  added warning to PointLocatorList constructor,2018,,
010efa6,Added side_with_boundary_id method,2018,,
b901bf4,"Avoid ""unused variable"" warning with ENABLE_AMR off",2018,,
03519f9,Beginning to add PeriodicBoundaries support,2018,,
b0bea0d,Use only forward declaration for PointLocatorBase,2018,,
3867e2a,I can't figure out how to stop AutoPtr from complaining about a forward declaration after all...,2018,,
61cd782,Let absolute_fuzzy_equal also return true if the difference between components is *exactly* equal to tol.,2018,,
5fd9fe1,Moved compute_proj_constraints to FEBase  added compute_periodic_constraints code,2018,,
f6e033e,Updated dependencies,2018,,
d1ef875,Enable periodic boundary constraints  bug fixes to periodic boundary constraints  silent weeping that periodic boundary constraints are still buggy,2018,,
2a3529f,Moved periodic BC stuff to dof_map_constraints.C  fixed one more bug. Periodic boundary conditions now work at least in simple tests,2018,,
eb86f00,Fix bug affecting interactions between multiple periodic boundaries (and/or periodic boundaries with hanging nodes),2018,,
7f941cd,Added some GMV file I/O API code (by Frank Ortega) under the contrib directory as well as associated configuration options.,2018,,
ec21941,You *should* now be able to read in a GMV mesh and start using it as a libmesh mesh.  No solution read-in capability yet.,2018,,
e33273b,include/mesh/mesh_base.h,2018,,
ed20938,Gave a better name to the optional flag which can be passed to prepare_for_use() to skip renumbering the nodes and elements.,2018,,
a796d9f,GMV mesh reader now skips variables  and Mesh::read() accepts GMV files as input.,2018,,
77b847e,Add Larisa's publications to the vsmoother header file... and some whitespace changes to the .C,2018,,
02aa4d1,fixed --disable-gmv,2018,,
b55e4bd,Warn about insufficiently tested periodic constraint code.,2018,,
154dce0,Added untested macro() at beginning of new GMVIO::read() function.,2018,,
6e3fab8,This commit was manufactured by cvs2svn to create tag 'libmesh-0_6_0'.,2018,,
c7ecdb7,A number of minor changes.,2018,,
a548d9c,cvs ignores for SGI,2018,,
99b2401,This commit was manufactured by cvs2svn to create tag 'libmesh-0_3_2'.,2018,,
e9678d9,Fixes for --disable-mpi builds.,2018,,
2d5c072,Fixes for --disable-amr builds.,2018,,
6d69175,Test linking against CppUnit at configure time,2018,,
eaa6b2c,Fix horrible bug in nodal unique_id() reading,2018,,
a938c54,Fixes for assorted odd build configurations,2018,,
2b14063,Minor change to configure due to running bootstrap.,2018,,
aeafb76,More odd-configuration-case fixes.,2018,,
1067011,Compute shape functions of base_fe as well.,2018,,
d671515,Fix BoundaryInfo documentation and boundary loops in examples.,2018,,
4533f7e,get_eigen*() should be indexed by dof_id_type,2018,,
a58827d,adjoints_ex3 seems to need PETSc to converge,2018,,
2146ff0,Don't try p refinement with floats,2018,,
ed82ab6,Fix example compilation with --enable-complex,2018,,
c672bc1,Call clone->init() in MeshFunction::clone().,2018,,
91ec8b1,Remove overzealous assert from set_p_level(),2018,,
fdb5dba,Remove overzealous asserts in FEMContext,2018,,
579b508,Trilinos fails to give the right values here,2018,,
fd8177d,Fixes for 64-bit indices builds with SLEPc enabled.,2018,,
89520de,Skip more examples in non-standard configurations.,2018,,
3479cf5,Update automake version number to 1.0.0-rc2.,2018,,
48f78a0,Run bootstrap.,2018,,
a18edc1,GCC 5.2.0 warned that is_eof might be used uninitialized.,2018,,
b7216f0,GCC 5.2.0 warned that normalize_rb_bound_in_greedy_in was used uninitialized.,2018,,
5e4499d,Don't use LIBMESH_OPTIONS in reduced basis ex5,2018,,
3afb43d,Suppress variadic template warnings in GCC.,2018,,
037d8c2,Fix warning generated while trying to ignore warnings.,2018,,
9560aef,Fix issues with writing Exodus files after deleting nodes.,2018,,
7145d63,Add missing ifdef wrapper,2018,,
99235f0,Add missing #include,2018,,
8ff1d03,Use __LIBMESH_DATE__ and __LIBMESH_TIME__ in auto_ptr.h,2018,,
b43a0e1,Update automake version number to 0.9.5-rc2.,2018,,
90496b0,Run bootstrap.,2018,,
af0be0a,Fix for upcoming MatGetSubMatrix name change in PETSc 3.8.,2018,,
8dde50e,Fix Tri3::contains_point().,2018,,
777890000000.0,fix for --disable-optional && make installcheck,2018,,
cadf917,Update automake version number to 1.2.0.,2018,,
d10f57d,Run bootstrap.,2018,,
e40cda7,adding vanilla unpacked 4.4.1.1,2018,,
a0c5cc2,disable network tests by default,2018,,
a80541c,remove derived files,2018,,
038a27a,disable testsets,2018,,
8bbbbd6,increase parameter sizes for exodus,2018,,
1b0e3fa,adding .gitignore,2018,,
0e35b08,bootstrap,2018,,
0e86de1,updated symlink,2018,,
633d900,require serial test suite for netcdf,2018,,
97deac3,remove old netcdf-4.3.1,2018,,
b9bd43f,distcheck fix,2018,,
ccdc1ad,Update NEWS file to include latest bug fixes.,2018,,
262c8c4,Guard all examples to avoid errors with --disable-optional.,2018,,
cbae660,Add empty LIBMESH_PARALLEL_FLOAT_OPS macro for --disable-mpi case.,2018,,
05b2827,64-bit build fix,2018,,
3b7a36d,Update automake version number to 1.2.1.,2018,,
375f26c,Run bootstrap.,2018,,
20a8690,Update NEWS file for 1.2.1 bugfix release.,2018,,
c3630ee,can now write a file in parallel -- the format is identical as existing files  but the node/element ordering is different,2018,,
609980d,updated compatible to new doxygen,2018,,
f6fc13b,Removed redundant #ifdefs,2018,,
86d9814,Add typedefs to fix compilation without MPI,2018,,
b246152,Comment out code unavailable with --disable-mpi,2018,,
e05286c,Use Parallel::sum for MPI_Allreduce(MPI_SUM),2018,,
b853e96,Fix Parallel::verify()  add --disable-mpi null implementations (or errors as appropriate) of send/recv functions,2018,,
f3f099a,Fixes for --disable-mpi  Using Parallel:: functions where convenient,2018,,
09dd179,Fix for Parallel::verify use Fixes for --disable-mpi,2018,,
0a02bfd,robustness -- do not dereference empty vectors  which can happen on all but root_id during Parallel::gather(),2018,,
eaf9a91,partition-independent parallel system write now works properly -- still need to test read.,2018,,
bcf2c33,assert the obvious when performing send_receive without MPI,2018,,
1a4b044,Build with newer autoconf/autoheader/etc,2018,,
57ba02c,Added oprof mode,2018,,
4dfc7cf,trade a single allreduce for many broadcasts,2018,,
51a31db,do not dereference empty objects,2018,,
ae0bf1d,Avoid compiler warning with --disable-mpi,2018,,
b289d71,Avoid compiler warnings without --enable-complex,2018,,
6c8e1d4,do not dereference empty objects,2018,,
e3ceb2f,cleanup,2018,,
d335806,assert the obvious,2018,,
1314385,broadcast a string,2018,,
5e9515a,log the systems update,2018,,
e1c50f8,can now read and write restart files in parallel.  the ordering is partition-agnostic so as to enable N->M restarting,2018,,
512dca5,changed default buffer size to 256000,2018,,
6bb3117,use LIBMESHRUN to run ex2,2018,,
a60c743,make ex2 more complicated to test coverage of multiple systems with multiple variable types,2018,,
45e3e21,libMultiScale & OctMesh,2018,,
50c8547,more package descriptions,2018,,
2227cdc,more package descriptions,2018,,
871af32,more package descriptions,2018,,
507abfe,changed LibMesh to libMesh  allow for additional information in developer profile section,2018,,
dbbd3fa,bio preprint,2018,,
2246284,can now read/write serialized or parallel restart files,2018,,
20d09fb,move current xdr stuff to a legacy format to make room for new parallel mesh io,2018,,
af69e62,cleaner test syntax,2018,,
a8b12df,placeholder for new XdrIO class,2018,,
bcc3ab5,working on parallel mesh io,2018,,
5c780c3,Don't let processors 1-N quit Mesh::write until processor 0 no longer needs them for MeshTools::n_levels.,2018,,
720779a,allow for an optional line-break counter to increase readability,2018,,
495315e,serialzed output of distributed nodes now works,2018,,
d23b608,Use proper type (signed int) for MPI tags,2018,,
dd0477f,Use petscconf PACKAGES_LIBS where available,2018,,
a669c09,Return an accurate count of nonlinear iterations  not just the final iteration number,2018,,
b5313e3,added a local_level_element_iterator(),2018,,
0ce5bf0,make the MeshTools::n_elem() operator take constant element iterators,2018,,
9817832,parallel xdr mesh output pretty much works  needs bc support  testing.  disabled by default,2018,,
2e26123,change the solver to use a MeshBase  consistent with the EquationSystems,2018,,
2b80e9d,created a static array mapping element type to the number of nodes in an element.  this is useful for reading in mesh files or when communicating elements as it allows you to properly size arrays without creating an Elem object,2018,,
29590a8,Use INVALID_ELEM rather than a magic number for the size of an array indexed by ElemType,2018,,
75a448d,Dependency updates,2018,,
6011f29,parallel read of nodes is OK  working on elements,2018,,
f51f93c,when adding a child assert that the child knows about its parent,2018,,
acf04dd,testing parallel read/write,2018,,
7725f42,parallel bc write started,2018,,
1825b4c,added data_stream<int>,2018,,
468f55f,do not implicitly add nodes to boundary_info,2018,,
bf546ad,Added missing implementation for --disable-mpi,2018,,
7a45d05,parallel XDR mesh I/O works  performing additional testing,2018,,
d2fc64b,added MeshTools::n_p_levels().  Use this to determine whether or not we will write element p levels to file.,2018,,
797d917,made Partitioner::set_node_processor_ids() a public & static member.  This allows a partitioning to be read from file and the node processor ids can get fixed without building a partitioner.,2018,,
94363b8,write p levels if needed,2018,,
6e42522,updated documentation,2018,,
bc5d064,removed stray -lz,2018,,
6b82007,allow MeshBase::add_point() to add points in non-sequential order,2018,,
f81feaf,moved the parallel test,2018,,
455cdba,test send  receive  and friends,2018,,
e8a3728,replaced MPI_Wait and MPI_Waitall calls with Parallel::wait wrappers,2018,,
a5f29ad,placeholder for quadrature tests,2018,,
04ea158,Added set_data methods,2018,,
f8bbe71,Reposition elem_subresiduals during postprocessing for code like John's that uses them.,2018,,
ba8bfeb,assert() to catch cases of non-parents who get put into parent error vector by mistake,2018,,
4774bc5,"Restore ""non-coarsenable elements flagged with -1"" behavior to create_parent_error_vector implementation",2018,,
38e15d9,The previous histogram function was just ... wrong ... in more ways than one.  Rewrote my initial bad code to make it actually work.  Also added the plot_histogram() function which allows you to write a very small Matlab/Octave script and quickly plot the histogram as a bar graph.,2018,,
4af3e65,Fixed a slight bug that sometimes prevented the last entry from being binned.  Generate the histograms in terms of Real's regardless of the datatype of the vector itself.  Also  the behavior is now correct for ErrorVectors too.,2018,,
7ac00e2,Ignore oprof output,2018,,
ea13090,Ignore oprof output,2018,,
ba90b0f,Resize and zero elem_residual before postprocessing,2018,,
c4a1258,Fixes for create_parent_error_vector in parallel,2018,,
19d78da,explicitly clear and close the objects,2018,,
6827afd,Use libmesh_norm(x) instead of x*x/std::norm(x) more widely Make NumericVector<T>::dot(v) have return type T Attempt to fix DistributedVector<std::complex<T> >::min/max,2018,,
65b3f40,Better fix for real vs complex DistributedVector::min/max,2018,,
e489f58,Fix cut-n-paste error,2018,,
6b29e49,More fixes  refactoring for --enable-complex,2018,,
cfdc428,Fixes for --enable-complex,2018,,
9cf8e4f,Fixes for std::complex<> use,2018,,
f2fb4f1,Utility class to compare two types and choose an appropriate return type for operations combining them.,2018,,
08464c6,Use Real instead of double where appropriate,2018,,
8cfbb85,Use CompareTypes<T T2> to allow TypeVector<T> objects to be operated on with T2-based objects,2018,,
90d9e49,Move enable_if  ScalarTraits to compare_types.h Further templatize copy constructor  assign(),2018,,
e4d491b,Further templatize add(),2018,,
9a5f92a,More templatization  more CompareTypes based return values,2018,,
69c485b,Fixed misleading comment,2018,,
79a0d69,Fixed misleading/typoed comment,2018,,
bfafba9,Fixed size_sq comments to be correct for complex numbers,2018,,
0029bcc,Add templated self friend classes so that Object<T1> can access Object<T2>'s protected constructor,2018,,
ebfddb8,"Fix norm calculation correctness for complex numbers  use size_sq and new CompareType operators to make ""#ifdef USE_COMPLEX_"" special cases unnecessary",2018,,
4426a10,support for std::complex<double> in data_stream.  Still need to figure out long double,2018,,
ff59350,David Knezevic's patch to fix an error with SerialMesh when reading files with lower dimensional boundary info elements,2018,,
b304b13,testing,2018,,
1a16593,Restoring ex18  i.e. application=0 as default,2018,,
6261bad,Move forward declarations to where they're actually needed,2018,,
21e7fee,Fix bug with active elements  elements in parallel not being properly marked uncoarsenable.,2018,,
0969f74,Factored out UnsteadySolver class  moved old solution vector from TimeSolver to get it out of SteadySolver class.,2018,,
50e832a,fixed regression in EquationSystems::read() which tried to read .bz2 files instead of their unzipped ASCII counterpart.,2018,,
5c8d182,Fixes for --disable-mpi,2018,,
c10b999,Updated dependencies for UnsteadySolver,2018,,
8680235,Minor fix in cut-n-pasted comment,2018,,
25d4205,Minor fix in cut-n-pasted comment,2018,,
1b39025,New NormType for compute_norm()  du()  etc.,2018,,
fc18c57,Support Intel icc v10.1 on Itanium,2018,,
5185452,Added SystemNorm class  switched appropriate APIs to use it,2018,,
3e2103a,Fixes for du() API change,2018,,
039d5bf,Updated dependencies for enum_norm_type.h and system_norm.h,2018,,
2ea1ee9,preliminary interface to the TBB template library for multithreading support.  MeshTools::total_weight() contains an example of a threaded reduction operation.,2018,,
fb0791e,Hand off du norm calculations to System::calculate_norm(),2018,,
625eadc,Minor bugfix,2018,,
78e7357,threaded part of the find global indices method,2018,,
5b82321,Override mass_residual to provide a better (Re-independent) nondimensionalization of time,2018,,
b8ffeb5,more threaded algorithms,2018,,
9cbfb5a,removed stray here,2018,,
1aebdf4,Fix reduce_deltat_on_diffsolver_failure bug from UnsteadySolver refactoring,2018,,
7f2cf36,Updated .depend for new threading,2018,,
bf2bb7c,Make sure dependency list is sorted for consistency  svn diff .depend can get ugly otherwise,2018,,
2c8b553,Compatibility updates for old code,2018,,
1fdcc84,threaded constraint computation,2018,,
d8db651,added atomic reference counting,2018,,
ecd4376,MeshTools::weight() fixed for parallel meshes,2018,,
a7b0910,include elem.h,2018,,
cb28af3,Using LegacyXdrIO,2018,,
35e43bd,"Build src/apps programs by default during ""make""",2018,,
c3510d2,Switch to LegacyXdrIO,2018,,
8a35332,fixed total_weight for non-parallel meshes.  This is needed to work right on processor 0 to broadcast the mesh,2018,,
77dfa64,the patch recovery error estimator is now multithreaded,2018,,
ed0165e,Fix for MeshTools::total_weight() on ParallelMesh,2018,,
0a6b707,Typo fix,2018,,
aa45a51,allow perflog to be disabled at runtime,2018,,
cf25fd2,multithreaded vector and solution projection,2018,,
6e32b94,Typo fix,2018,,
1ce30da,make perflog compatible with multithreading,2018,,
e80a0c8,"Added ""parameterize.pl""  a script for turning lines like",2018,,
0a7043e,Rename from NormType to FEMNormType to avoid name conflicts with PETSc,2018,,
7c78767,Compatibility between FEXYZ and ENABLE_SECOND_DERIVATIVES  second derivatives for 1D XYZ shapes.,2018,,
2c69b5f,Second derivative calculation support  arbitrary polynomial degree for discontinuous elements,2018,,
33b25da,Fix FE<MONOMIAL> support for p > 4,2018,,
771df5c,multithreaded sparsity pattern generation,2018,,
dd3f10f,default to 1 thread  make the user manually specify the number of threads to avoid mpi/thread contention,2018,,
2e27de6,default to 1 thread  make the user manually specify the number of threads to avoid mpi/thread contention,2018,,
adafefa,preallocation where possible,2018,,
2fdbc68,properly read legacy restart files without command-line hacks  warn for reading potentially incompatible restart files,2018,,
d158f26,updated XdrIO to properly handle Xdr  ASCII  gzipped  or bzip2 files transparently,2018,,
5819a94,mention TBB,2018,,
755ebee,compatiblity fix with gcc 3.2  3.4 and Intel 7.1  8.0  9.0  9.1,2018,,
7d2cc01,prevent double-freeing for the case when the user explicitly calls close() and then the destructor does too.,2018,,
88b352e,Intel 10.x,2018,,
7852b41,SunStudio 12 compatability,2018,,
970245d,reverted here() and friends -- the -library=stlport4 option to CC uses the STLPort implementation which has no name clashes,2018,,
c491148,reorder the partition flag position,2018,,
77ea9bd,do not pollute global namespace  use the new local_level_elements iterators,2018,,
536f495,make new xdr file format the default,2018,,
513bd8b,only processor 0 should open the file and read the header.  this caused a race when the underlying file was .bz2 and all processors attempted to uzip/unzip it.,2018,,
313fc16,do not partition into more pieces than we have active elements,2018,,
1074dd0,do not default to new xdr file just yet,2018,,
86ef9eb,Fixes for high p 3D monomial shape function calculations,2018,,
2953b7f,allow the user to get the global indexing without assigning it  do not forget unpartitioned nodes when creating the bounding box,2018,,
1cddb9f,allow the user to get the global indexing without assigning it  do not forget unpartitioned nodes when creating the bounding box,2018,,
b40ceed,Added swap() method to PetscMatrix/Vector,2018,,
e15c566,Adding PetscDiffSolver class (which still has runtime bugs),2018,,
159dc59,Fix for --disable-mpi,2018,,
016505a,added unpartitioned element iterators,2018,,
87c8d27,added unpartitioned element iterators,2018,,
349e462,added unpartitioned element iterators,2018,,
fea4a79,make it clear that the begin  end element iterators are unchanged when calling n_elem,2018,,
7dba52d,handle the degenerate case where for some reason we try to sort a single item in parallel,2018,,
ac14725,Close assembly output before returning it to PETSc,2018,,
ffff351,Typo fix in USE_COMPLEX_NUMBERS case,2018,,
32741b4,Update to new du() function signature,2018,,
6f4e09e,Don't include assembly time in PetscDiffSolver total,2018,,
2f9c8c7,Factor out line search from NewtonSolver  add brent_line_search option,2018,,
2b47b51,Make Brent's method the default,2018,,
4239c3e,added Elem::is_remote(),2018,,
8f45c53,refactored the parmetis partitioner to work on parallel meshes.  The assigning of parents to subdomains needs to be fixed still for the case of parallel meshes.  metis is still the default partitioner when mesh.is_serial()  otherwise parmetis is called.,2018,,
a7bd1a0,set parent processor ids properly when the mesh is parallelized,2018,,
2283946,Changes (based on Lorenzo Botti's) to fix bug with side integrations and adaptive p refinement.,2018,,
412995b,Parallel::alltoall()  beginnings of MeshCommunication::redistribute(),2018,,
acdc0e0,Parallel::Status class added.  Return status from blocking receives,2018,,
56c25a0,optimize Parallel::send_receive() for the case when the source and destination are both the local processor.,2018,,
239f3c7,reverted,2018,,
8f3b4bb,undo accidental checkin,2018,,
4c5ad8b,allow isend() and recv() with user-defined types,2018,,
78016e6,node redistribution (the easy part) works,2018,,
99206a3,Fix for MPI1 compatibility,2018,,
452b62a,Added libMesh exception-throwing  changed error() behavior to throw an exception  replaced libMesh::init() and libMesh::close() with a LibMeshInit object to ensure proper MPI_Abort behavior when an exception is uncaught.,2018,,
5a5d373,Space/tab reformatting  Switched to use LibMeshInit instead of libMesh::init()/::close()  removed unnecessary scoping braces,2018,,
fde1145,Fix for --disable-mpi,2018,,
9561c69,Corrected comments,2018,,
b9f0188,Change from libMesh::init()/close() to LibMeshInit,2018,,
b2e6d8b,Don't try to use DistributedVector<float>  unless Real == float we don't instantiate it.,2018,,
e94b137,Switched from libMesh::init()/close() to LibMeshInit,2018,,
3bfec7f,Run tests by default  don't just build them,2018,,
20e31c9,Add a suffix to test output file names to make it easy on svn:ignore,2018,,
2de4225,Ignore output files,2018,,
e8a2758,Run tests by default,2018,,
803540d,Ignore run_tests executable  dependency files,2018,,
96ed85a,fix for --implicit_neighbor_dofs from Lorenzo Botti,2018,,
ae67ffb,it is not deprecated to read an old file -- this was a hasty checkin,2018,,
5448891,not deprecated to read an old mesh format,2018,,
5f18692,fixed overzealous assert,2018,,
15adac7,fix for parallel solution IO.  the code requires objects be iterated in order of increasing id()  which is not always the case.  now we build an ordering to enforce this.,2018,,
4b353c5,Allow .bz2 support to be disabled at configure time.,2018,,
e1ef93a,allow the Status() struct to determine the size of the message received.,2018,,
a8e10ff,node and element redistribution seem to work  need to add bcs and all will be well.,2018,,
dc47324,Fix bug from recent commit,2018,,
93e717d,redistribution should now work  with BC support,2018,,
b91c721,initial checkin had way too small blocksize,2018,,
6c571f5,properly count the number of boundary conditions in parallel,2018,,
7461f0c,transfer node pid in redistribution,2018,,
0ba807d,optional constructor flag in MeshInput/MeshOutput for parallel formats,2018,,
4062db7,log the single_partition() member,2018,,
41738b4,do not assert valid processor id when reading processor id.,2018,,
d12fa41,cleanup  optimizations,2018,,
75299e8,log more operations,2018,,
a9ab1ad,log output,2018,,
15fcdb2,updated logging to use a stack,2018,,
ea56257,only disable logging in threaded functions when there is more than one thread,2018,,
6aee180,Added header for START_LOG/STOP_LOG declarations,2018,,
4f2d445,fix all library code to use new logging scheme,2018,,
2b7415b,no need to deprecate old interface -- that was a little agressive,2018,,
ba699e4,optimized find_global_indices() to only compute hilbert keys once,2018,,
cc057b0,gcc 4.3.0 fixes,2018,,
159cd58,fix for --disable-amr,2018,,
de2a894,do not copy old dof object before dofs are allocated -- this is a pointless waste of memory.,2018,,
233c380,manually complete the send when there is no MPI,2018,,
90c80c2,Fix for one more MPI-less Parallel::recv(),2018,,
b388e84,fix isend()/recv() pairing for --disable-mpi,2018,,
91fbd60,Replace inconvenient characters with underscores in directory names,2018,,
8290f06,initial trilinos configuration support,2018,,
42d3be9,Removed redundant mpi.h include,2018,,
f320183,Move mpi.h include to make conflicts with stdio.h slightly less likely,2018,,
493c2c3,Fix GCC configure tests,2018,,
ea8082d,First commit of completely broken ePetra vectors from Trilinos,2018,,
be18ebf,Comment (and #if) a bunch of stuff out of epetra_vector so it compiles,2018,,
1e7537a,Uncomment more of epetra_vector,2018,,
69dd399,Add configure option to disable exception throwing  Make PGI --no_exceptions command line option depend on it,2018,,
998a72d,Fix for PGI compilers,2018,,
227fa73,filled in more of epetra_vector,2018,,
e6e836e,epetra_vector.h finished,2018,,
f968428,Don't use Opteron-incompatible icc flags on Opterons,2018,,
a8de118,Don't use Opteron-incompatible icc flags on Opterons,2018,,
9877ebd,google search stuff,2018,,
818d99d,More work on epetra_vector,2018,,
37ca7a8,More work on epetra_vector,2018,,
ecafe86,More work on epetra_vector,2018,,
2e86ac4,mention trilinos  update ref for IJNMF CompNS paper,2018,,
8b9d60e,Reimplement is_child_on_face  the previous implementation fails with remote_elems around,2018,,
2202c9d,Fix bugs with ParallelMesh  add more debugging information in case of future bugs,2018,,
2b2b46b,Enable print_trace() to ostreams other than cerr,2018,,
92dd2f7,Added ancestor_elements  not_ancestor_elements iterators and supporting machinery,2018,,
e878c9b,Adding libmesh_assert() for more useful assert()s  implementation of ENABLE_TRACEFILES option,2018,,
ea83818,Added ./configure --enable-tracefiles option,2018,,
2977c19,link to the 12-month version of the statistics from the main page,2018,,
4574514,Bug fix in set_parent_processor_ids  turn off repartitioning until we've definitely got ParallelMesh working for AMR/C without repartitioning.,2018,,
6ef08c9,Changed error() to libmesh_error(),2018,,
2705a6e,Switch from assert() to libmesh_assert(),2018,,
f01de14,Replace assert() statements with libmesh_assert(),2018,,
5593a81,Try for more robust unordered_map  unordered_set includes,2018,,
fdcc0ef,Fix for non-tr1 unordered_map typedefs,2018,,
1191999,Only compile libmesh_assert_valid() tests if we're going to use them,2018,,
05f4cb0,Move assert_valid_neighbors() to MeshTools  add assert_valid_node_procids(),2018,,
9a7476e,Fix out of date comment,2018,,
cd2e6a4,Remove redundant synchronization from serial runpath  weaken potentially-overzealous DEBUG assertions,2018,,
c778761,Fixed mismatched perflog start/stop,2018,,
7514c3a,Enable stack trace files when --enable-everything is used,2018,,
7babae7,johns defensedoc/html/presentations.php,2018,,
b81102b,support for linear pyramids in ExodusII,2018,,
1552674,Include <unistd> for getpid(),2018,,
deb8307,Print here() messages on every processor,2018,,
78be00e,New parallel update function in MeshBase (for MeshRefinement use)  ParallelMesh/SerialMesh implementations,2018,,
a4754b8,More debug-mode sanity checks,2018,,
7be1f39,Better debug-mode checks,2018,,
84b7d18,Fix refine_by_error_fraction for parallel use  exit with errors when trying to use not-yet-fixed methods on parallel meshes.,2018,,
7d2915b,Fixes for ParallelMesh,2018,,
d7e9dc0,Fix inf_elem_builder behavior with ParallelMesh,2018,,
8444d1a,ParallelMesh is getting good enough to actually paralllelize it by default now...,2018,,
c982147,Typo fix,2018,,
7e7109c,Make parallel node id fixing code public,2018,,
c2a40c2,Don't attempt to write ParallelMesh solutions even in METHOD=opt,2018,,
9992531,warn about unsupported Mesh I/O but don't error out,2018,,
3008697,Removed debug mode test,2018,,
90a2f51,FIXME note on an O(n_elem) vector<bool>,2018,,
49da91f,Major refactoring  fixes for ParallelMesh synchronization code.,2018,,
4a8b487,Fixes for all_second_order() with ParallelMesh,2018,,
992fedc,Dependency updates for location_map.h  parallel_ghost_sync.h,2018,,
6b1ecc4,Removed unused variables,2018,,
d4d33c2,Fix for --disable-amr,2018,,
3fb1566,Switch libMesh::init to LibMeshInit  disable amr.cc cleanly when ENABLE_AMR is off,2018,,
eed303d,Moved MeshRefinement methods which better fit MeshTools or MeshCommunication  to fix --disable-amr case.,2018,,
a4c0bda,Typo fix,2018,,
fe27109,New dependencies from MeshRefinement->MeshCommunication/MeshTools refactoring,2018,,
79c92fb,Avoid warnings with --disable-amr,2018,,
ae1bbf9,New debug mode test,2018,,
98e506d,No need for libmesh_assert* method outside of DEBUG mode,2018,,
1e87d1c,More valid remote_elem tests,2018,,
31c8c45,Comment out potentially broken (but currently completely unnecessary) code in coarsening function,2018,,
d2a7ccd,Updated dependency for remote_elem debug tests,2018,,
9dd91b0,Turn partitioning of parallel meshes back on,2018,,
657a732,Make sure MeshBase::is_serial() is always defined before use,2018,,
57b1545,Fix bug with PerfLog use in refactored MeshRefinement::add_point(),2018,,
69fd350,Comment on parallelism issues in MeshFunction,2018,,
1d9412c,Specializations for Parallel::min/max(std::vector<bool>)  since official MPI standards don't support MIN/MAX ops for char/unsigned char,2018,,
e1c0c3b,Use vector<bool> even when we don't care about efficiency  now that Parallel::max/min support them (and now that we know max/min isn't always supported by MPI for char types),2018,,
8dc8816,Don't bother to serialize for I/O - the I/O classes should either write a distributed ParallelMesh correctly or refuse to write with a warning at this point.,2018,,
2810ab8,More perf_logging  removed unnecessary temp variables,2018,,
bd98240,more libmesh_assert_ debugging functions,2018,,
f219f56,Switch from is_neighbor to has_neighbor  bugfixes for ParallelMesh,2018,,
f76b6b0,find_neighbors fixes for ParallelMesh,2018,,
48ccc40,Include missing header,2018,,
16ea381,Don't include hilbert.h unless HAVE_LIBHILBERT,2018,,
51976c1,Dr. John W. Peterson,2018,,
2a004f0,Add option to disable variational smoother (which takes forever for some icc versions to compile),2018,,
726c226,Include libmesh's config file so we can see if VSMOOTHER is enabled or not.,2018,,
3ad5c36,Try to autodetect mpi compiler wrapper scripts,2018,,
2a870ce,Modified to use the grid directly rather than the VTK pointset in VTKIO::read()  this gave an error in a vtu tetmesh read,2018,,
99060cb,fixed broken d()/dzeta linear pyramid shape functions,2018,,
f28a41f,detect when implicit neighbor dofs is needed.,2018,,
eb2f186,add implicit neighbor dofs if requested or if all variables in the system are discontinuous,2018,,
cb86469,Don't miss any points because of epsilon differences in location,2018,,
882a52f,New paramvalue feature for parameters which are functions of other parameters  prefix reading for slightly more useful functions,2018,,
06ca187,Make exodus output only happen on processor 0 (for now)... this used to throw an error when running in parallel.,2018,,
704ebfb,Bugfix for commented out lines  lines with parameter prefixes,2018,,
3d964e5,Resize FEXYZ _map arrays correctly,2018,,
3d1428d,fixed to work with trilinos make install target,2018,,
6cfbdbe,remove gcc-4.3 warnings,2018,,
0b0d030,put trilinos stuff in trilinos_* files,2018,,
98eae89,moved,2018,,
3248f2e,moved,2018,,
b082dd4,updated config.guess  can build shared libraries on OSX 10.5,2018,,
1c0bf21,igore stuff in the contrib/lib,2018,,
b5f1ac4,instatiate an EpetraVector when Trilinos is available,2018,,
d30679a,placeholder support for AztecLinearSolver,2018,,
0c44e69,added initial Epetra sparse matrix implemetation,2018,,
e8b8c11,Make the executable linking stage quiet (do not echo the command to the screen.),2018,,
8c4c2f2,added error_estimation source subdirectory,2018,,
1811b0a,support for mat(i j),2018,,
0fa87c1,Added missing #include <vector>,2018,,
0a49e85,"Added missing #include ""elem.h""",2018,,
7b2ded2,Added #include <memory> for std::allocator,2018,,
eac4558,Added missing #include <vector>,2018,,
fcb9bfd,Added missing #includes,2018,,
0dba399,Comments  bugfix for unrefined islands tests,2018,,
94f2671,fix set(i j),2018,,
45f6333,Typo fix,2018,,
f1119e9,moved to Epetra_FEVector,2018,,
01f67d7,added Epetra_Vector test,2018,,
5ff4563,localize() works,2018,,
c5412c1,updated quadrature test coverage,2018,,
447efee,fixed a bug in 5th-order tetrahedral Gaussian Quadrature,2018,,
2c37a37,reorg,2018,,
673e18c,reorg,2018,,
dd8e669,reorg,2018,,
503f52f,"Use the ""do/while(0)"" macro trick in case we put these macros in if/else statements later",2018,,
6a8ac9d,Make sure rhs is ready for assembly,2018,,
9083014,Updates for moved error estimator headers,2018,,
56e83ef,Added allow_rules_with_negative_weights flag to QBase.  Default is true (which was the standard behavior) but you can set this to false to use more expensive (but potentially safer) quadrature rules instead.,2018,,
519e719,Finished adding Dunavant quadrature rules up through 19th order for TRIs. This is the highest order available which is suitable for use in FEM calculations. Above 19th-order you still get conical product rules up to 23rd.,2018,,
2051b3c,Use system.update() instead of localizing the global solution in the PetscNonlinearSolver,2018,,
a3ff51c,Added a few tet rules from Keast's 1986 paper.,2018,,
265679c,Make .e map to Exodus,2018,,
9f5632b,Update help message,2018,,
3c4b8db,do not repartition parallel meshes until redistribution is fully integrated,2018,,
54d6e0c,moved the Node serialization MPI methods from anonymous namespace to inside the Node class,2018,,
2ca8afa,factored out element packing/unpacking for MPI communication,2018,,
440015c,Added a new quadrature class for Tets  based on the 1978 paper by Grundmann and Moller.  These rules have negative weights but they are defined for all orders and have a lot less points than conical product rules.,2018,,
7d0a436,Removed big commented-out case statement.  This isn't needed for the GM rules...,2018,,
004d24a,Keyword substitution fixed for new files.,2018,,
658027d,Made the GM rules the default choice for high-order integration over tets when rules with negative weights are allowed.,2018,,
a2dfed3,reworked DofObject to store indices more efficiently,2018,,
dbd2898,Added some even-order quadrature rules for QUAD elements due to Wissmann  1986.  These rules have all positive weights inside the reference element and fewer points than equal-order tensor-product rules  therefore they appear to be superior in almost every way.  The degree-4 and degree-6 rules can even be shown to contain the minimum number of points required to achieve their respective accuracies.,2018,,
8d35a3c,Added Wandzura's 15th  20th  25th  and 30th-order quadrature rules for the triangle.  These rules have all positive weights  all points inside the region of integration  and fewer points than equivalent-order conical product rules.,2018,,
76ad8b2,Added extra cases for Wandzura rules.,2018,,
17344bc,Added write_timestep to ExodusII_IO,2018,,
a4b967c,Removed extra function qualifier.,2018,,
888239e,Timestep should have been an int,2018,,
f1d1b86,Make initialization in ctor match order of var declarations in class to avoid warning.,2018,,
c6eed16,Add iterator methods for iterating through the parameters from the outside  also made Parameter public,2018,,
7032e25,Fixes to remove 'unused variable' warnings when compiling in optimized mode with -Wall.,2018,,
dcb20ac,Fixes to remove 'unused variable' warnings when compiling in optimized mode with -Wall.,2018,,
97f3f87,Fixes to remove unused variables when compiling in optimized mode with -Wall.,2018,,
09d8a1f,Avoid declaring variables which are only used for asserts. This prevents a lot of unnecessary warnings when compiling with -Wall in optimized mode.,2018,,
fce116b,Avoid declaring variables which are only used for asserts.  This prevents a lot of unnecessary warnings when compiling with -Wall in optimized mode.,2018,,
56f8d00,Do not declare variables which are only used in asserts  unless asserts are active.,2018,,
0e336dd,Only declare certain variables if asserts are active.,2018,,
abc503f,Avoid declaring variables only used in assert statements.,2018,,
4cf5d10,Avoid declaring unused variables in when asserts are not active.,2018,,
896d760,Avoid declaring variables which are only used for asserts.  This prevents a lot of unnecessary warnings when compiling with -Wall in optimized mode.,2018,,
672318c,Moved the uniform error estimator to the new error_estimation directory.,2018,,
f3eface,Avoid declaring variables which are only used in assertions unless assertions are active.,2018,,
201a909,Added a degree=2  3-point rule for the quadrilateral. An equivalent tensor-product rule would have 4 points.,2018,,
c24f635,"Removed the Wissmann rules for QUADs.  They are not usable because our order P rules for QUADs must be able to integrate ""bi-pdic "" i.e. biquadratic  bicubic  etc. polynomials  which actually have terms up to order 2p but are not complete.",2018,,
b4d80ad,Fixed issue in DEBUG mode where variables were used but not declared.,2018,,
677ee2b,Changed debug -> dbg in list of valid METHOD options.,2018,,
850cfdd,Updated the documentation upload targets to reflect the fact that we now use SVN.  In order to rsync/upload files to the sourceforge.net servers  please set the LIBMESH_SVN_USER environment variable to your sourceforge username if your sf username differs from $USER.,2018,,
66cbd67,Added Nemesis to contrib.,2018,,
baa81df,Added the QMonomial quadrature class.  You can integrate monomial FE bases with fewer points (in general) than are required for Lagrage tensor product bases.  The QMonomial class implements these integration rules for QUAD and HEX elements when available  and falls back on tensor product rules when necessary.,2018,,
d9c1b73,Accidentally removed appbinfiles from all target. (oops) Replaced.,2018,,
3ec00e2,Updated dependencies for new and moved files.,2018,,
22b6b14,Added non tensor-product rules for QUADs through 17th-order.,2018,,
90b8ee0,Added 4th order rule for TRIs with 6 points and all positive weights.,2018,,
09302f9,Added a degree-7  12 point quadrature rule for TRIs with positive weights.,2018,,
eb38899,two of the three papers john found  need to add third,2018,,
e6cd90b,publications and presentations,2018,,
21c4651,publications and presentations,2018,,
1a37a4f,publications and presentations,2018,,
8e606a9,updated examples page,2018,,
3fe2702,weird query-replace syntax bug?,2018,,
9c0e700,recv methods should take a signed integer for processor id since MPI_ANY_SOURCE can be negative!,2018,,
7c0d891,better support for intel v10.1 compiler flags  allow --disable-unordered-containers,2018,,
4d126d1,Updated dependencies for moved uniform_error_estimator file.,2018,,
40d5629,Used multi-precision software (GMP/MPFR/GMPFRXX) to re-compute the Jacobi quadrature rules to higher precision  and extended them at high precision to 43rd order  the hightest order enumeration defined.,2018,,
0496da1,Fixed some formatting problems with the new rules.,2018,,
b02aa3b,Make the code compile with TRIPLE_PRECISION defined  aka when Real=long double.,2018,,
9c516b6,Recomputed 1D Gauss rules to 32 digits of precision using a multi-precision (GMP/MPRF/GMPRFXX) library.,2018,,
7bff58e,"Append ""L"" to all long double floating point literals.  This tells the compiler not to truncate the literal to a double (thereby losing precision) before assigning it to a long double.",2018,,
521bb99,"Added a 3rd-order accurate rule for triangles with all positive weights.  This replaces a 4 point rule which had a negative weight.  Also  added a few ""L"" tags to floating point literals to get the correct precision when compiling with Real==long double.",2018,,
149ce2a,Don't try to automatically instantiate something you've already explicitly instantiated.,2018,,
ed49347,Added a few explicit instantiations which Intel 9.1 complained about in devel mode.,2018,,
8f37059,Allow systems to be read which have added their own vectors already,2018,,
7e42f7e,"Wrote some configure tests which try compiling unordered_map/set in the std:: or std::tr1 namespaces  as well as hash_map/set in the __gnu_cxx:: namespace.  This was needed because just checking for the header files may be insufficient.  Intel compilers can ""see"" these headers but apparently they cannot always compile them.",2018,,
7eaf171,Skip a debug-only communication step when in opt mode,2018,,
f403872,Close parallel vectors after setting them from file data,2018,,
49f8bd1,syntax for SunStudio 12,2018,,
8dec158,Include guards.,2018,,
3170fd7,Fix from Adam Powell for --disable-exodus,2018,,
175cdb5,Fix to make vtk output writer work for parallel runs. Checked on modified equationsystems.write() for ex8 and ex14 using vtk 5.3.0 on debian unstable,2018,,
8d8f569,Capture exodus block_id as the subdomain_id of the element,2018,,
0af9698,Fix --disable-tracefiles,2018,,
513bd22,Simplify (and correct) configure test for GCC ABI name demangling,2018,,
53aa4dd,include cstdlib  std::free(),2018,,
803f90f,Fixed the Hex27 numbering issue.  Fixed a couple of leaked pointers.,2018,,
33adeaa,Fixed one of the more ridiculous uses of arrays of C-style strings.,2018,,
f5be8e0,Modified example to include option to export to VTK  the option is off by default,2018,,
67e5312,Added cstring include otherwise gcc-4.3 can't find strcpy,2018,,
ac42a2e,ex12 works again  additional UNVIO logging,2018,,
10092d8,Make write() print an error message until we get around to implementing it.,2018,,
b6c21f5,Fixes for --disable-amr,2018,,
151c830,Fixes for --enable-complex,2018,,
4ea39eb,fix for multithreaded full sparsity assembly,2018,,
0f6dcf3,fixed memory leak,2018,,
f576367,more logging,2018,,
0adc3e2,Tagged libmesh 0.6.3,2018,,
720065d,Removed  accidental tagging of 0.6.3,2018,,
a9b4da3,Tagged libmesh 0.6.3,2018,,
aa6a088,Close START_LOGs,2018,,
3c63d8b,Add logs to remaining Parallel::gather/broadcast methods,2018,,
265675f,Remove redundant null-setting,2018,,
81c0501,Found a regression in previously tagged 0.6.3,2018,,
4483633,Tagged libmesh 0.6.3,2018,,
9a33c02,Fix for seminorm calculations,2018,,
9392ea4,Don't try to use mpi compilers if we've disabled mpi,2018,,
d41e000,Retagging to get some last-minute updates to 0.6.3.,2018,,
afff19e,Tagged libmesh 0.6.3,2018,,
b046885,Updated list of changes for 1.0.0,2018,,
f4c6b6b,libHilbert regression fix gets more detail  CAPS,2018,,
020c51d,Incorporate John's suggestions,2018,,
f2309aa,A few more updates for stuff to be in 1.0,2018,,
3d9141b,Udating 0.9.3->1.0.0 changelog with recent changes.,2018,,
c1d1ad6,More updates to NEWS.,2018,,
5b9c330,Fix mis-cast int in NemesisIOHelper,2018,,
f610726,libMeshEnums namespace for backward compatibility,2018,,
f5e8f98,DenseVectorBase::empty()  const T & operator(),2018,,
63183fd,PetscVector<T>::insert specializations,2018,,
147c8cb,Refactor NumericVector::insert(),2018,,
2f91f3b,NumericVector::get refactoring,2018,,
12efe43,NumericVector::add_vector refactoring,2018,,
01c2ada,"Fix Clang warning about ""comparison of integers of different signs"" in assert.",2018,,
3cb94a6,PatchRecoveryEE bugfix from Manav Bhatia,2018,,
f6b3adc,Final changelog update for 0.9.4,2018,,
7c4f0b0,Merge branch 'changelog_update' into 0.9.4,2018,,
557a9fa,preparing for v0.9.4-rc2,2018,,
cf7bf9a,bootstrap for v0.9.4-rc2,2018,,
97db8f3,Nonblocking send/receive of packed ranges,2018,,
86c0b90,Remove deprecated classes.,2018,,
3c55043,Update Makefile.am's,2018,,
ee8a380,Run bootstrap.,2018,,
4fdd498,Clean up after removing deprecated headers/src.,2018,,
cdddbce,Update NEWS file for 0.9.5 -> 1.0.0 release.,2018,,
e3c6fbc,Fix warnings about overloaded virtual functions and hiding.,2018,,
2d49d37,Make sure all outputs of adaptivity_ex3 are cleaned.,2018,,
c4723ae,Run bootstrap.,2018,,
6eaacc6,Update citations.,2018,,
51162aa,Update citations.,2018,,
c9f79cf,Swap libmesh_final with final to work around issue in Emacs reindent script.,2018,,
faf2fcb,Fix a few indentation issues found with Emacs 25.1.50.,2018,,
6762fe1,Rework macros to be a bit more specific.,2018,,
fd5bc7d,Run reindent script in examples.,2018,,
cf3baa5,Merge branch 'indent_script',2018,,
7864a52,Put libmesh_version.C in src/base to match header.,2018,,
dfb2f68,Update libmesh_SOURCES.,2018,,
df1fe35,Run bootstrap.,2018,,
7f7611f,Remove unused preprocessor tokens from libmesh_version.h,2018,,
7c1ffb9,Add LIBMESH_VERSION_LESS_THAN macro.,2018,,
c017bdb,Bump the version of libmesh on master to 1.1.0-pre.,2018,,
9371bdf,Run bootstrap.,2018,,
9947d5c,Merge pull request #922 from jwpeterson/libmesh_version,2018,,
e033002,Update traffic.,2018,,
6ff5d54,Update citations.,2018,,
dc7aad5,Weaken assertion in non-PETSc solves,2018,,
628a503,Update citations.,2018,,
f53d8f9,Non-MPI parallel packed_range compatibility,2018,,
8b242f7,More assertions in packed_range methods,2018,,
90c0baa,Enable Parallel Node/Elem operations without MPI,2018,,
5d3bb3b,Fix serialized XDR/XDA writing without MPI,2018,,
5039b5a,embedding_matrix is only needed if AMR is enabled,2018,,
cb8a773,Tet4::key() is needed even when AMR is disabled,2018,,
cc6e792,Fix MeshCommunication in --disable-amr case,2018,,
c726319,ErrorVector: Only reset p elevation if AMR is enabled,2018,,
cee6aa3,ParallelElem should set p flags iff AMR enabled,2018,,
f9b5603,Comment out AMR code when AMR is disabled,2018,,
15ca1a7,FEMContext algebraic type OLD is only for AMR,2018,,
046cbc9,Better LIBMESH_ENABLE_AMR wrapping of examples,2018,,
bae518e,Merge pull request #924 from roystgnr/nompi_fixes,2018,,
7ec01f7,Merge pull request #925 from roystgnr/noamr_fixes,2018,,
9a343a8,Test linking against CppUnit at configure time,2018,,
d0e3227,Re-run bootstrap,2018,,
2fe9450,Merge pull request #928 from roystgnr/cppunit_link_test,2018,,
0ef879c,Serial->Replicated  Parallel->Distributed comments,2018,,
f82089c,Forward declarations use new mesh names,2018,,
b41bae1,Rename SerialMesh and ParallelMesh,2018,,
36cd9b9,Fix horrible bug in nodal unique_id() reading,2018,,
b9a8272,Heavier test coverage of unique_id() reads,2018,,
541d9e2,Merge pull request #929 from roystgnr/rename_meshes,2018,,
4b64ce4,Merge pull request #930 from roystgnr/fix_unique_id_reads,2018,,
fa5b68b,Update traffic.,2018,,
5539651,ifdef LIBMESH_ENABLE_PERIODIC in examples,2018,,
88dd558,ifdef LIBMESH_HAVE_EXODUS_API in examples,2018,,
6995afb,Disable optimization_ex1 when --disable-ghosted,2018,,
f134b73,converged_reason() support for Laspack  AztecOO,2018,,
62f8c7f,Update citations.,2018,,
0f5abaf,ParallelMesh and SerialMesh are structs now.,2018,,
a04c0c0,Minor change to configure due to running bootstrap.,2018,,
2fb11b9,Run contrib/bin/reindent on source.,2018,,
778abee,Add another missing ifdef EXODUS in examples,2018,,
d034c65,Another example ifdef EXODUS,2018,,
172c974,Use PetscViewerPushFormat() in PetscVector.,2018,,
50cd25f,Bugfix for LIBMESH_DIM==2,2018,,
0cb022e,Avoid shadowing libMesh::out in Parallel::,2018,,
0a51ec8,Use PetscViewerPushFormat() in PetscMatrix.,2018,,
e39e753,Merge branch 'petsc_3.7',2018,,
8d254b8,Make Serial/ParallelMesh shims classes.,2018,,
c971b7f,Make default unique_id size in help string match actual default.,2018,,
bc619b1,Run bootstrap.,2018,,
c72b4f1,Add hash-of-vector implementation for 16-bit data,2018,,
06ce5f8,Merge pull request #932 from roystgnr/barebones_fixes,2018,,
6e010ed,Merge pull request #935 from jwpeterson/unique_id_doc,2018,,
e90f999,Merge pull request #934 from jwpeterson/struct_class,2018,,
7b42378,Fix cache_elem_dims() when LIBMESH_DIM==1,2018,,
8e94cfb,Disable examples if Mesh dim > LIBMESH_DIM,2018,,
630fa6d,Add sanity check for DirichletBoundaries,2018,,
0086f3c,Update Tetgen website.,2018,,
81b4f6c,Fixes for --enable-single,2018,,
09de046,Add configure test for C++11 std::condition_variable.,2018,,
32c25cc,Don't enable Trilinos if we can't support it,2018,,
72d92d3,Re-run bootstrap,2018,,
2b8fd8b,Run bootstrap.,2018,,
697ebaf,Merge pull request #939 from roystgnr/barebones_fixes_2,2018,,
ab36fd4,Merge pull request #940 from roystgnr/trilinos_double_only,2018,,
46ca339,Merge pull request #936 from pbauman/check-dirichlet-bcids,2018,,
cf2a1f9,Compute shape functions of base_fe as well.,2018,,
8a8df2d,Added support for ExodusII's TRISHELL3 and SHELL4,2018,,
e0c164e,Merge pull request #941 from jwpeterson/cxx11_m4,2018,,
fdf1428,Update .mailmap,2018,,
a300214,Merge branch 'BalticPinguin/inf_elem_fix',2018,,
68e9f52,Clarify BoundaryInfo boundary id set definitions,2018,,
061bc8a,Fix Dirichlet ID sanity check on DistributedMesh,2018,,
338f2d9,Verify that we have a consistent DirichletBoundary,2018,,
3d7bd67,Boundary IDs need to be kept consistent,2018,,
c4b1dcb,Fix indentation.,2018,,
c398c85,Merge pull request #943 from roystgnr/global_dirichlet_id_check,2018,,
696b79e,Update traffic.,2018,,
2c3df28,Update LOC count for May 2016.,2018,,
fc901ec,get_eigen*() should be indexed by dof_id_type,2018,,
aaca9eb,Copy edge boundary conditions in all_first_order(),2018,,
7d57051,Added MeshTools::libmesh_assert_valid_boundary_ids,2018,,
7685652,Call libmesh_assert_valid_boundary_ids(),2018,,
e964ad0,Misc fixes suggested on the original PR.,2018,,
3a8424a,Move Tri3Shell to its own header file.,2018,,
dee224c,Move Quad4Shell to its own header file.,2018,,
4310f11,Include newly-created header files.,2018,,
b187aec,Update Makefile.am files.,2018,,
aef0762,Run bootstrap.,2018,,
276da62,Merge pull request #945 from roystgnr/eigenpair_dof_indexing,2018,,
7a3b770,Add QUADSHELL4/TRISHELL3 to various FE switch statements.,2018,,
ecd2823,Add QUADSHELL4/TRISHELL3 to quadrature switch statements.,2018,,
8602fdc,The 'no_author' commits from cvs2svn were probably created by Ben.,2018,,
74e222c,More historic CVS/SVN authorship.,2018,,
558191e,Derek made a commit as moosebuild.,2018,,
1e7e69b,Update citations.,2018,,
1c7bb91,Merge pull request #948 from jwpeterson/shell_elements,2018,,
5f5d897,adjoints_ex3 seems to need PETSc to converge,2018,,
643a311,Add BoundaryInfo::copy_boundary_ids(),2018,,
53825fd,Add --enable-cxx11-required configure option.,2018,,
7ce7261,Call C++11 test with the 'mandatory' flag if user passes --enable-cxx11-required.,2018,,
b619244,Run bootstrap.,2018,,
29fc162,Make sure to define LIBMESH_HAVE_CXX11 on the mandatory branch.,2018,,
7a7e3c1,Avoid writing trailing whitespace in XDA files.,2018,,
10d3028,Merge pull request #950 from roystgnr/adjoints_ex3_petsc_only,2018,,
1584446,Don't try p refinement with floats,2018,,
583b324,Merge pull request #952 from roystgnr/single_precision_sucks,2018,,
27ab179,Copy shellface boundary ids too,2018,,
ee90d5c,Fix multiple statements on single line.,2018,,
7616fc9,Fix example compilation with --enable-complex,2018,,
9b85b6d,Return a custom error code when C++11 is required and the test fails.,2018,,
374f961,Merge pull request #953 from jwpeterson/xda_trailing_whitespace,2018,,
e46c21b,Merge pull request #951 from jwpeterson/require_cxx11,2018,,
6ebb37d,Fix unused variable warning after changes merged in #948.,2018,,
3ca1edd,The const versions of Elem::node_{ptr ref} should return const values.,2018,,
9595015,Fixes to trishell3_edge_map and quadshell4_edge_map in ExodusII_IO_helper,2018,,
a7f46a9,Merge pull request #954 from roystgnr/complex_misc_ex12_fix,2018,,
4c9d69d,Use new Elem interfaces in library and examples.,2018,,
8b1a730,Use copy_boundary_ids() in all_*_order(),2018,,
d1f1bab,Make copy_boundary_ids API less confusing,2018,,
f0088a7,Fix const-correctness issue in MeshRefinement::add_node().,2018,,
ea44e8a,"reduced_basis_ex7 is a ""SKIP"" if not converged",2018,,
178a325,Handle shellface boundary IDs in ParallelElem,2018,,
7617e6b,Shells only have 2 faces,2018,,
b26f56d,Force reduced_basis_ex7 to use MUMPS LU,2018,,
12cf72e,Merge pull request #955 from roystgnr/reduced_basis_ex7_fix,2018,,
2b4298a,Update citations.,2018,,
7515003,Fix formatting,2018,,
aef9aec,Add Elem::child_ptr() const and non-const versions.,2018,,
ffc8781,Add all_first_order option to meshtool (#958),2018,,
265f448,using mesh with SHELL4 instead of QUAD4 elements for example misc12 + minor fixes,2018,,
6a585eb,Merge pull request #947 from roystgnr/copy_edge_bcids,2018,,
f41130a,Merge pull request #959 from dschwen/allfirstorder_958,2018,,
0fc7125,Add Elem::neighbor_ptr() const and non-const versions.,2018,,
8d4504a,Update to MeshFunction::clone(),2018,,
55dfa19,Merge pull request #957 from svallaghe/master,2018,,
c52f4ed,Merge pull request #960 from dknez/mesh_function_clone_init,2018,,
f6719ec,update PR,2018,,
9f2b79e,Use slightly smaller meshes in 3D examples,2018,,
d8a324e,reduced_basis_ex5 takes too long with Eigen,2018,,
048d128,1000 steps of Krylov should be enough for anybody!,2018,,
89618c9,Reduce adaptivity_ex3 max_r_steps for hp cases,2018,,
195859f,Add sizeof check for size_t (#962),2018,,
2008ac4,Rerun bootstrap (#962),2018,,
184276d,Build extra operators only if types differ (#962),2018,,
ffc14f3,Fix inconsistent tab/space indentation in Makefile.am.,2018,,
077d8e4,Remove overzealous assert from set_p_level(),2018,,
f54eeaa,Fix type_to_n_foo maps for new ElemTypes,2018,,
4af45e2,Don't forget to remove shellface ids,2018,,
4fd6253,Bugfix miscellaneous_ex12 in parallel,2018,,
594b475,Merge pull request #961 from roystgnr/speedup_make_check,2018,,
8bb987e,Merge pull request #956 from roystgnr/pack_shellface_bcids_2,2018,,
118e41d,Merge pull request #963 from roystgnr/overzealous_assert_p_coarsening,2018,,
c9485be,Merge pull request #964 from dschwen/sizet_962,2018,,
09efbbd,Update citations.,2018,,
ceb2300,Print error messages to libMesh::err,2018,,
b44c6a8,Prevent segfault when printing out error messages in fe_map.C.,2018,,
f57d677,Speed up stitch meshes by avoiding unnecessary PointLocator calls.,2018,,
d0ebf42,Merge pull request #967 from dknez/stitch_meshes_optimization,2018,,
a7bdb88,Switch while loop to for loop,2018,,
83aaa4d,Merge pull request #969 from roystgnr/infinite_loops_are_bad,2018,,
909784e,Skip optimization_ex2 when running in parallel,2018,,
7ff949f,Don't ignore LIBMESH_RUN in examples,2018,,
848d3f9,Merge pull request #966 from dknez/stderr_in_fe_map,2018,,
0b1ab7d,Merge pull request #970 from roystgnr/optimization_ex2_running,2018,,
c99c528,Remove overzealous asserts in FEMContext,2018,,
483a357,Updated XdrIO so that it supports edge and shell-face boundary IDs,2018,,
aef55ad,Merge pull request #972 from pbauman/femcontext-asserts,2018,,
936fb06,Added unit test for edge boundary IDs  including writing/reading with Xdr,2018,,
aaa2075,Renamed exceeds_version_* to version_at_least_* in XdrIO,2018,,
3130bfa,Merge pull request #973 from dknez/XdrIO_update,2018,,
0538a7e,Update traffic.,2018,,
76ff877,Delete trailing whitespace.,2018,,
201eaa9,We can't check whether an element is_semilocal() unless it is active().,2018,,
209742c,Update citations.,2018,,
8373228,Add configure test for std::make_unique().,2018,,
57eaa6d,Added convergence enum for KSP_DIVERGED_PCSETUP_FAILED (new in PETSc-3.7).,2018,,
b93d7ce,Run bootstrap.,2018,,
4fc4a88,Add configure test for C++11 std::make_unique<T> workaround.,2018,,
9df1aaf,Add libmesh_make_unique macro for different configurations.,2018,,
311a6ac,Trilinos fails to give the right values here,2018,,
27b0d79,Don't assert identical bcid orderings,2018,,
c4d7c9f,Use processor_id_type for processor ID type,2018,,
d7b87ad,Use numeric_index_type for numeric index type,2018,,
d8311f5,Use dof_id_type for DoF ID type,2018,,
f21f505,Add unit test of new libmesh_make_unique macro.,2018,,
263e029,Merge pull request #976 from dknez/convergence_enum_update,2018,,
059956c,Build MeshFunction from ReplicatedMesh,2018,,
001abe2,Assert shellface BCIDs are consistent,2018,,
ed591e6,Merge pull request #946 from roystgnr/assert_valid_boundary,2018,,
9ef52cf,Merge pull request #981 from roystgnr/mesh_function_from_replicated,2018,,
42bf76c,Merge pull request #979 from roystgnr/reduced_basis_bigids,2018,,
8343734,Merge pull request #978 from roystgnr/no_adjoints_ex5_for_trilinos,2018,,
f138cc0,Updated change_boundary_id to also change shellfaces.,2018,,
3038bf5,Merge pull request #980 from jwpeterson/make_unique,2018,,
1c6494b,Update statistics for May 2016.,2018,,
88e5f6b,Update citations.,2018,,
01790e7,Merge pull request #982 from dknez/change_boundary_id_update,2018,,
3bc01b1,Add MeshBase::active_semilocal_elements_begin()/end() accessors.,2018,,
dc1ffe0,Remove const from Elem::child_neighbor() returning non-const pointer.,2018,,
3554842,Merge pull request #975 from jwpeterson/semilocal_predicate,2018,,
6741d91,Merge pull request #984 from dknez/stitch_meshes_shellface,2018,,
8762ca6,mesh stitcher needs to copy shellface_boundary_ids,2018,,
ef5f9c9,Update citations.,2018,,
bce61d4,Fix const-correctness issue in BoundaryInfo.,2018,,
296730d,Fix const-correctness issue in InfFE::Base::build_elem().,2018,,
06f06a3,Fix const-correctness issue in UnstructuredMesh::all_second_order().,2018,,
a5c4e60,Add Elem::side_ptr() const and non-const versions.,2018,,
4dc6802,Add Elem::build_{side edge}_ptr() const and non-const versions.,2018,,
897a7a7,Merge pull request #933 from roystgnr/assorted_warnings_fixes,2018,,
7e858c7,Handle NULL elements in EquationSystems::get_solution().,2018,,
aeacbf3,Merge pull request #985 from jwpeterson/get_solution_fix,2018,,
9f9b402,Fix spacing issues.,2018,,
49d4848,Dereference once.,2018,,
15bf44e,Create a data structure to track which variables to output.,2018,,
af6121a,Single precision sucks,2018,,
14de9af,Skip reduced_basis_ex5 with Trilinos,2018,,
b9337bc,Merge pull request #987 from jwpeterson/get_solution_refactor,2018,,
d8ff1ec,Add configure test of C++11 noexcept.,2018,,
66237ae,Run bootstrap.,2018,,
b798de5,Add libmesh_noexcept macro.,2018,,
34edaea,Add contains_point specialization for tri3 (#990),2018,,
4df7415,Remove object-oriented C from misc_ex7.,2018,,
4ce44d5,Small optimization and dealing with degenerate triangles (#990),2018,,
3393e1a,Corrected edge boundary asserts in XdrIO.,2018,,
f674c98,Merge pull request #986 from jwpeterson/elem_interfaces,2018,,
574025a,Merge pull request #989 from jwpeterson/cxx11_noexcept,2018,,
7774650,Merge pull request #992 from jwpeterson/misc_ex7,2018,,
17aa0d1,Merge pull request #988 from roystgnr/examples_requires,2018,,
bbd9490,Small optimization in Hex8::volume().,2018,,
d5ad2c7,Report the error ID in RBConstruction::check_convergence().,2018,,
57c3168,Update traffic.,2018,,
292628d,Add TypeVector::cross_norm() and cross_norm_sq().,2018,,
927e1c1,Use cross_norm() in various 2D Elem::volume() implementations.,2018,,
b011753,Various optimizations in Tri6::volume().,2018,,
4b7780c,Merge pull request #995 from jwpeterson/volume_opt,2018,,
b6371b4,Add unit test (#990),2018,,
f3f3317,Rerun bootstrap (#990),2018,,
afdba0f,GCC 5.2.0 warned that is_eof might be used uninitialized.,2018,,
87c4e34,GCC 5.2.0 warned that normalize_rb_bound_in_greedy_in was used uninitialized.,2018,,
a1e89b8,Add specialization of Elem::contains_point() for Tet4.,2018,,
453bc83,Add unit test of new contains_point() routine.,2018,,
a01c98a,Merge pull request #993 from dschwen/contains_990,2018,,
0c50790,Add TypeTensor::solve().,2018,,
7334cf1,Replace inverse/multiply with solve() call in FE::inverse_map().,2018,,
0c724b0,Merge pull request #996 from jwpeterson/tet4_contains_point,2018,,
26f08a5,Replace inverse/multiply with solve() call in Tet4::contains_point().,2018,,
ecbc165,Throw an error in SolverConfiguration::respond_to_solve_failure,2018,,
ae81844,Merge pull request #997 from jwpeterson/tt_solve,2018,,
85759fd,Dirichlet BC for shellface boundaries,2018,,
e504394,removing C++11 syntax,2018,,
872d411,Add missing rehash call (#998),2018,,
51371ae,Merge pull request #999 from svallaghe/master,2018,,
4c4137e,Rename cache dir for derivatives (#998),2018,,
9ce9148,Add unit test for auto optimization (#998),2018,,
4601aa9,Added a unit test for shellface constraints.,2018,,
7fb002f,Merge pull request #1001 from dknez/shellface_constraints_test,2018,,
88352ad,Fix test for --enable-parmesh case,2018,,
e9dc085,Fix test for --enable-singleprecision case,2018,,
ffa22d5,Use lower tolerance testing single-precision SVD,2018,,
ab37d67,Merge pull request #1002 from roystgnr/test_fixes,2018,,
a8f3436,Merge pull request #1000 from dschwen/adbug_998,2018,,
0b73942,Update traffic.,2018,,
860c103,Call elem->centroid() instead of computing it manually.,2018,,
e13e53a,Can't use C++11 std::iota  can use Utility::iota().,2018,,
b56a71e,Update citations.,2018,,
3898051,Update traffic.,2018,,
92beb28,Update citations.,2018,,
e0f3925,Update citations.,2018,,
73f974d,Adding configure tests for Boost Move's unique_ptr,2018,,
25c1de1,Pass $BOOST_CPPFLAGS when compiling test program.,2018,,
df0f15b,Run bootstrap.,2018,,
6f0dd03,*Really* fix the shell boundary test,2018,,
733bc8f,Silence clang warnings.,2018,,
eb8786d,Fix small issue with Boost 1.57 unique_ptr,2018,,
c9e2f2e,Fix type mismatch pointed out by Boost 1.57 compiler in adjoints_ex3.,2018,,
f781f23,Fix related type mismatch in fem_system_ex3.,2018,,
c3958bf,Fix documentation for TypeVector::operator==,2018,,
7e6e789,Move loop variale declaration out one more layer.,2018,,
79d6576,Merge pull request #1005 from boyceg/fix_unique_ptr,2018,,
64ad187,Merge pull request #1007 from pbauman/fix-typevec-docs,2018,,
3f4c52c,Merge branch 'fix_unique_ptr',2018,,
4210108,Handle a DistributedMesh problem in test,2018,,
1a1ebf1,Old BoundaryInfo test now DistributedMesh-friendly,2018,,
f92f487,Modify Elems *before* we might delete them,2018,,
71c2b44,Merge pull request #1006 from roystgnr/better_parmesh_test_fix,2018,,
69210f1,Merge pull request #879 from friedmud/nonblocking_packed_range,2018,,
efdff82,Tweak documentation a bit more.,2018,,
75f3a54,fix detection of vtk 6.0,2018,,
bbe9e74,Update traffic.,2018,,
5e00851,Merge pull request #1010 from andreasbuhr/fix_vtk_6,2018,,
ec45361,changed default values to be more physical and added a warning.,2018,,
e257f1a,Modify point locator to locate points on faces belonging to multiple elements (#1011),2018,,
8e70531,Add methods to evaluate multivalued mesh functions at points  e.g. discontinuous FEM on faces (#1011),2018,,
d61bdde,Added missing TRISHELL3 cases in FE classes.,2018,,
5619b65,Update citations.,2018,,
0a31cf5,Update LOC count for June 2016.,2018,,
914472d,Add test for discontinuous value of mesh function at faces (#1011),2018,,
df72c99,Fixes in ignore/restore_warnings.h,2018,,
43ac7cc,Ignore deprecated-declarations warnings from CPPUnit macros.,2018,,
8fc6bbd,Merge pull request #1013 from jwpeterson/rm_deprecated,2018,,
3924549,Merge pull request #1014 from jwpeterson/deprecated_declarations,2018,,
6a7f28b,Update boost subset from 1.55 to 1.61.,2018,,
f02810a,Update the list of boost headers to install.,2018,,
dcfce20,Update test_boost.cc for boost >= 1.57.,2018,,
4f286fe,We no longer use the boost_copy.sh script.,2018,,
fc98a13,Update the README instructions for building Boost.,2018,,
a9cebf4,Run bootstrap.,2018,,
5008976,Bump the minimum required version of boost for libmesh.,2018,,
c0a9224,Update citations.,2018,,
c481ebd,Merge pull request #1015 from jwpeterson/boost_update,2018,,
cd9dacc,Only do asserts if variables are available.,2018,,
f40a283,Merge branch 'better_defaults',2018,,
cef6e67,Ignore warnings from clang about variadic macros.,2018,,
27dca2c,inserted check for second derivatives to account for respective option.,2018,,
aac88bf,Fix warning coming from METIS header file via PETSc.,2018,,
4d806b4,Merge branch 'fix_warning',2018,,
630889b,Merge pull request #1012 from snschune/mesh_function_disc_1011,2018,,
6ed2665,Add versions of System::point_{value gradient hessian}() taking an Elem *.,2018,,
b867d24,Add discontinuous_gradient and tests (#1011),2018,,
43337c3,added check to have infinite elements.,2018,,
56d54eb,"Reduced Basis change: Removed ""extra"" interpolation data from EIM.",2018,,
250baf8,Merge pull request #1018 from jwpeterson/point_value,2018,,
9e5547a,Merge pull request #1019 from dknez/EIM_simplification,2018,,
ead2942,Reduced Basis change: Add a mesh function tolerance in RBEIMConstruction.,2018,,
4b328a1,Update citations.,2018,,
95070ab,Update traffic.,2018,,
8aed402,Update statistics for June 2016.,2018,,
d76ae2e,Remove deprecated statistics plots.,2018,,
e0f5909,Regenerate statistics PDFs.,2018,,
a58bb96,Merge branch 'update_statistics',2018,,
896268d,Fix type in NetCDF4 source.,2018,,
9905983,Merge pull request #1020 from jwpeterson/netcdf4_fix,2018,,
a433f75,Ignore CPPUnit warnings from new unit test.,2018,,
f91b0d9,distcheck cleanup fix,2018,,
3180a15,Got DenseMatrix SVD working with --enable-complex and updated unit test.,2018,,
c9ec3c4,Merge pull request #1021 from dknez/svd_complex,2018,,
6d55dd6,Update traffic.,2018,,
b25f261,Update citations.,2018,,
2492289,Update .mailmap.,2018,,
e8fd5a0,Merge pull request #1025 from juan42/patch-1,2018,,
24a63d7,SNESSetFromOptions already calls KSPSetFromOptions.,2018,,
488543c,Fix typo in example,2018,,
73d8d23,Merge pull request #1026 from jwpeterson/petsc_set_from_options,2018,,
9052141,Add --ldflags to instructions for building libmesh apps by hand.,2018,,
41c5926,Update traffic.,2018,,
d2d11b0,Fix #if/#ifdef bug.,2018,,
ae45822,Call libmesh_convergence_failure() from TypeTensor::solve inverse().,2018,,
6762318,Handle exception thrown from TypeTensor::solve in FE::inverse_map().,2018,,
52610b1,Merge pull request #1029 from jwpeterson/fix_braindamage,2018,,
fca1799,Handle degenerate case in Tet4::contains_point().,2018,,
955da8c,Fix unused variable warnings.,2018,,
ce063db,Remove deprecated BoundaryInfo::boundary_id() call in build_cube().,2018,,
0431ff7,Remove deprecated boundary_id() call from meshbcid.C,2018,,
c7a630f,Remove deprecated BoundaryInfo::boundary_id() call from MeshTools::all_subdivision().,2018,,
45d85ee,Fix unused variable warnings in examples.,2018,,
ef95619,Fix unused variable warnings in ElemCutter.,2018,,
bf1ef23,Ignore deprecated-declarations warnings from misc_ex12.,2018,,
5da77e8,Ignore deprecated-declarations warnings from Laspack unit test.,2018,,
0791423,Remove PointLocatorList.,2018,,
02e5439,Update Makefile.ams.,2018,,
19bce48,Run bootstrap.,2018,,
e29c1e5,Stop GCC 6.1 screaming like a banshee,2018,,
c3e9b99,Merge pull request #1030 from jwpeterson/solve_except,2018,,
06fe812,Document BoundaryInfo behavior on DistributedMesh,2018,,
3e861fd,Fix more unused variable warnings in examples.,2018,,
b5ea7ec,Merge pull request #1033 from jwpeterson/rm_point_locator_list,2018,,
eb03b2d,Merge pull request #1032 from roystgnr/better_boundary_info_documentation,2018,,
4733b60,Merge pull request #1031 from roystgnr/cant_disable_pedantic,2018,,
b5a2d88,Fixes for --disable-exceptions.,2018,,
5755ce4,Add libmesh_try/catch macros.,2018,,
dcbdbb2,Merge pull request #1035 from jwpeterson/disable_except,2018,,
8dc842f,Fix Hypre check in petsc.m4.,2018,,
6c46645,Merge pull request #1036 from jwpeterson/hypre_lib,2018,,
6727728,Don't WRITE_PARALLEL_FILES xdr unless requested,2018,,
af49932,Update traffic.,2018,,
3159040,Update citations.,2018,,
6021c17,Update citations.,2018,,
7e91f3f,Use consistent type in ErrorEstimator::reduce_error().,2018,,
cf2278a,Use n_active_elem when flagging by elem fraction.,2018,,
793886d,Merge pull request #1040 from jwpeterson/junchao_zhang,2018,,
d1d0042,Merge pull request #1038 from roystgnr/avoid_parallel_xdr,2018,,
26629b3,Update to how we use _use_close_to_point_tol in PointLocatorTree.,2018,,
1646f38,Merge pull request #1041 from dknez/out_of_mesh_mode_change,2018,,
a1bc9c7,Update citations.,2018,,
d9914a8,Bug fix in complex-valued version of DenseMatrix<T>::_svd_helper.,2018,,
dbfd604,Merge pull request #1044 from dknez/complex_svd_fix,2018,,
834b85a,Update traffic.,2018,,
e94cb02,Fix missing variable name when SLEPc is enabled.,2018,,
2a846fb,Ignore unused variable warnings from SLEPc.,2018,,
e766d90,Ignore macro-redefined warnings from clang.,2018,,
e1814ed,Guard Trilinos headers with ignore/restore warnings.,2018,,
fe99fcc,Ignore more classes of warnings.,2018,,
db2df71,Merge pull request #1045 from jwpeterson/fix_warnings,2018,,
d13918b,Adding GhostingFunctor base class,2018,,
d271fda,Link and redistribute ghosting_functor.h,2018,,
3da3ef8,Keep a set of GhostingFunctors in MeshBase,2018,,
235aa16,GhostingFunctor::redistribute() in Mesh redist(),2018,,
7d09139,Weaken remote_elem neighbor assertion,2018,,
e9b5ed5,Weaken remote_elem children tests,2018,,
8a3b25c,Inactive local elements may have remote neighbors,2018,,
cc5baf2,Don't compute constraints next to remote_elem,2018,,
30a4361,Add active_unpartitioned_elements iterators,2018,,
8b5d4ee,Refactor ghosting policy,2018,,
da62a4c,Add some tests for manual indexing of dof indices,2018,,
112f642,Updates to systems_of_equations_ex8.,2018,,
21ef197,New ghosting when redistributing Mesh,2018,,
c8d0bfe,Check ghosting_functors during redistribute(),2018,,
092186b,Merge pull request #1051 from dknez/systems_of_equations_ex8,2018,,
24af230,Merge pull request #1052 from roystgnr/reduce_overghosting,2018,,
a9b01f6,query_ghosting_functors for redistribute+delete,2018,,
3ac5d38,Warn of future API changes,2018,,
5606beb,Add GhostPointNeighbors class,2018,,
d022f21,include set header,2018,,
28774c8,Compile GhostPointNeighbors code,2018,,
1961d15,Merge pull request #1049 from friedmud/dof_reorder,2018,,
eca4e2e,Run contrib/bin/reindent.sh on src.,2018,,
6900d1c,Make reindent.sh work on multiple files.,2018,,
282eda6,Run contrib/bin/reindent on include.,2018,,
28c9c6d,Run contrib/bin/reindent on examples.,2018,,
a2e055a,Merge branch 'reindent',2018,,
c439a31,Fixup dof indices test,2018,,
8406aac,Merge remote-tracking branch 'friedmud/dof_reorder',2018,,
0ef76b2,Add get_array() capability to PetscVector closes #1050,2018,,
d6484f3,Build default GhostingFunctor in MeshBase,2018,,
3a4d008,connect_families *after* ghosting functors,2018,,
55abfe6,Use ghosting_functors alone for MeshCommunication,2018,,
1ff3ff5,Inform ghosting_functors of delete_remote_elements,2018,,
a68a631,Merge pull request #1057 from roystgnr/ghosting_functors,2018,,
00bf409,Add coupling+algebraic ghosting functors to DofMap,2018,,
d87767d,Update traffic.,2018,,
e93e9bb,Set _initialize flag to false on clear(),2018,,
0ec8c7f,Merge pull request #1060 from dschwen/point_locator_initialized,2018,,
83c7712,Update statistics for July 2016.,2018,,
31fc07b,DenseMatrix::_evd_lapack() can use simpler dgeev() instead of dgeevx().,2018,,
ac17843,Merge pull request #1056 from friedmud/petsc_vector_array,2018,,
46e6501,Add unit tests of 3x3 eigenvalue calculations.,2018,,
867241f,Quiet down a noisy DofObject unit test.,2018,,
0550c4e,Merge pull request #1061 from jwpeterson/evd,2018,,
58ca287,Update citations.,2018,,
ae0b9c0,Move SparsityPattern code to sparsity_pattern.C,2018,,
0d50454,Give coupling functors to SparsityPattern::Build,2018,,
4cbe9a5,Implementing wrappers for MPI_Scatter operations,2018,,
6674810,Add DenseMatrix routines to compute left and right eigenvectors.,2018,,
1e205eb,Add unit test verifying left and right eigenvector calculation.,2018,,
2668f9e,We need const iterators for ghosting functors,2018,,
073e6d7,CouplingMatrix::operator&=,2018,,
53f6424,SparsityPattern::Build with user coupling functors,2018,,
b2ac23c,Add DefaultCoupling subclass of GhostingFunctor,2018,,
b74dc20,Build DefaultCoupling code,2018,,
bea14d5,Re-run autotools,2018,,
0a8b9ff,DefaultCoupling needs setters  but not a mesh,2018,,
5d60180,Add and use DefaultCoupling in DofMap,2018,,
89d06ac,Merge pull request #1063 from jwpeterson/evd_vectors,2018,,
42b772c,Merge pull request #1062 from permcody/MPI_scatter,2018,,
ecc97b4,Update traffic.,2018,,
fa43701,Update citations.,2018,,
d8545c4,Add --enable-petsc-required configure option.,2018,,
03263e7,Run bootstrap.,2018,,
a05ec34,Merge pull request #1065 from jwpeterson/enable_petsc_required,2018,,
5eefd2e,Change add/remove_ghosting/coupling_functor APIs,2018,,
dfcda4f,Bugfix for #1063,2018,,
a24df96,Store MeshBase& in DofMap,2018,,
f52ae7c,Unset _dof_coupling in DofMap::clear(),2018,,
870fa44,Reset ghosting functor status in DofMap::clear(),2018,,
693fcfc,Add default coupling functor to DofMap,2018,,
c7e0e5e,Remove now-redundant coupling code,2018,,
dfef43d,Handle empty vectors more elegantly,2018,,
28e9c08,Update bundled Eigen from 3.2.5 to 3.2.9.,2018,,
b9471d3,Merge pull request #1066 from jwpeterson/update_eigen,2018,,
48898f9,Never return remote_elem from DefaultCoupling,2018,,
c762f7a,We should never be asked to ghost remote_elem,2018,,
364a3c4,Add vector of vector scatter implementation Add unit tests,2018,,
8104ebc,Update traffic.,2018,,
fb38dae,Update citations.,2018,,
cfdf2f7,Don't get family trees of remote_elem,2018,,
cab76ad,Don't try to remove ghosting functors we don't have,2018,,
f8d9b02,Handle remote_elem neighbors higher up,2018,,
67d86aa,Factor out handle_vi_vj,2018,,
f36c301,Merge pull request #1067 from permcody/issue_1062,2018,,
ffc2022,Add merge_ghost_functor_outputs helper,2018,,
04728c6,Add DofMap ghosting functor results to send_list,2018,,
640e04d,Use merging helper function in SparsityPattern,2018,,
dc339c1,Add unit tests for Euler(2)Solver,2018,,
d3f083b,Add NewmarkSolver unit test,2018,,
767cd03,Add new tests to build system,2018,,
9d2f18e,bootstrap,2018,,
fe32f8b,Only call elem_fe_reinit in elem_reinit if there's mesh motion,2018,,
45744d0,Add initial reinit_func(1.) call in Euler2Solver,2018,,
0b40def,Add Euler2Solver unit test for second order,2018,,
13f6fcb,Add NewmarkSolver setters for beta  gamma,2018,,
48ecc26,Add reinit_func to NewmarkSolver  call in residual,2018,,
0657125,Rework NewmarkSolverTest a bit,2018,,
2dd3138,Add new NewmarkSolver unit test,2018,,
a51b5dd,Merge pull request #1068 from pbauman/scalar-time-solver-test,2018,,
ee4ad7c,Don't assume interior_parents() are always part of the same Mesh.,2018,,
cf98604,Add iterator typedefs to vectormap.,2018,,
bdbc506,Add vectormap::find() const and non-const versions.,2018,,
d7a5c0b,Use vectormap::find() to avoid extra lookup.,2018,,
a89907f,Make sure that every interior neighbor is actually in the same Mesh.,2018,,
b1af895,Remove memory churn in compute_affine_map  improving threading performance,2018,,
930ced7,Merge pull request #1071 from jwpeterson/metis_fix,2018,,
2e18cd8,Remove atavistic comment,2018,,
6301341,PerfLog in DefaultCoupling functor,2018,,
e4ead07,Add default algebraic coupling functor to DofMap,2018,,
2645335,Update citations.,2018,,
0879353,Merge pull request #1072 from friedmud/master,2018,,
46e29c1,Remove libmesh_parallel_only() from libMeshInit destructor.,2018,,
84577d0,Remove non-functor send_list code for neighbors,2018,,
d51ffe4,Simplifly local elements' send_list calculations,2018,,
cd30c06,Merge pull request #1074 from jwpeterson/remove_throw,2018,,
22a9f0b,Add support for --drop-cerr command line argument.,2018,,
dd02394,Fix race condition due to concurrent MPI file writes,2018,,
17e8803,Merge pull request #1069 from pbauman/time-solver-fixes,2018,,
1d44da7,Merge pull request #1075 from jwpeterson/drop_cerr,2018,,
8a49ea2,Better documentation for FEMContext::<elem side edge>_reinit,2018,,
dda659a,Merge pull request #1077 from pbauman/femcontext-doc-update,2018,,
111e82b,Merge pull request #1076 from dschwen/mpi_ad_cache_race,2018,,
596820f,Add BoundaryVolumeSolutionTransfer class.,2018,,
9294fca,Update Makefile.am's.,2018,,
4337505,Run boostrap.,2018,,
d651808,Merge pull request #1078 from jwpeterson/bvst,2018,,
b74f912,Remove no-longer-used variable,2018,,
58850ac,Add DofMap::is_evaluable(),2018,,
1f261dc,Update traffic.,2018,,
5484a37,More fine grained ParmetisPartitioner logging,2018,,
8c6caf3,Remove or optimize expensive asserts,2018,,
2f4db00,GhostingFunctor needs 2 reinit options,2018,,
3b9f576,DofMap::*functor APIs need not specify a MeshBase,2018,,
32bcac7,Call GhostingFunctor::*reinit() appropriately,2018,,
3968f59,Use GhostingFunctor interface in misc ex9,2018,,
fe89329,Bugfix for --enable-complex,2018,,
4c13997,Removed libmesh_experimental() from RBParameterized.,2018,,
67bd327,Handle crack lookup reinit on distributed meshes,2018,,
039230b,Reinit crack lookup maps after Mesh redistribute(),2018,,
8fec741,misc ex9 Mesh refinement if requested,2018,,
5b98cbd,Don't override user refinement settings,2018,,
ec8f3fb,Merge pull request #1080 from roystgnr/dont_relimit_refinement,2018,,
ad9ca43,connect_children in MeshCommunication,2018,,
ba3875b,Update statistics for Aug. 2016.,2018,,
4c97394,Add Predicates::evaluable,2018,,
056c682,Add Evaluable multi_predicate,2018,,
4dd4ac0,Add evaluable_elements_begin()/end(),2018,,
c8bf64f,Update citations.,2018,,
c5f1ee1,Merge pull request #1081 from roystgnr/connect_children,2018,,
5c16ded,Make new TimeSolver tests work on >1 processor,2018,,
5d00341,Fix loop range bug in new testScatter,2018,,
0f9c158,Add SiblingCoupling functor class,2018,,
86c0dbc,Tell autotools about SiblingCoupling source,2018,,
4b6e66c,Re-run autoreconf,2018,,
34d02be,Use SiblingCoupling with adaptive HP,2018,,
1bf9f54,Merge pull request #1082 from roystgnr/fix_tests,2018,,
74e4a15,Allow DefaultCoupling to handle PeriodicBoundaries,2018,,
d818a49,Do ghosting functor reinit after Mesh contract(),2018,,
ed63f16,has_topological_neighbor only needs const PBCs,2018,,
d4b0569,Wrap an if(foo) assert() in NDEBUG,2018,,
0bf9a23,Elem::active_family_tree_by_topological_neighbor,2018,,
b8b1350,Clear invalidated point locators everywhere,2018,,
087064d,clear_point_locator before GF::mesh_reinit(),2018,,
b83d88e,DefaultCoupling::delete_remote_elements,2018,,
72165d4,Use active_family_tree_by_topological_neighbor,2018,,
d89e9d3,Clarify comments,2018,,
2366405,check_periodic_bcs bool for efficiency,2018,,
825f0c9,Set mesh  periodic_boundaries for default functors,2018,,
630e5e6,Use write_discontinuous_exodusII to plot stress in systems_of_equations_ex6,2018,,
9ce7da7,Update LOC count for September 2016.,2018,,
ec39897,Update traffic.,2018,,
24ec220,Updated stress plotting in systems_of_equations_ex6.,2018,,
df987f2,complemented FEInterface::map to handle infinite elements as well,2018,,
d057c32,Delete trailing whitespace  fix formatting.,2018,,
2fe22cf,Merge branch 'ifem_map',2018,,
e608931,Remove single tab that snuck in to parallel_implementation.h,2018,,
d1d9fa0,Use non-deprecated Point::norm().,2018,,
b17f58f,Fix several more deprecated Point::size() calls.,2018,,
c4d03e6d,Make Abaqus reader more robust to different spacing schemes.,2018,,
1ee0388,Save a few lines by removing unnecessary switch statement.,2018,,
60b9177,Clean up unnecessary whitespace.,2018,,
e241f2a,Use C++ style comments.,2018,,
de9055e,Delete unnecessary curly braces.,2018,,
32b58b6,Use libmesh_warning() macro.,2018,,
07726ce,std::abs() already does the right thing for floats.,2018,,
1377fb2,Merge branch 'ifem_delete_interp',2018,,
831ff86,Elem::topological_neighbor improvements,2018,,
ce67b9d,removed the interpolated parameter form InfFE::inverse_map() and the interpolation scheme therein.,2018,,
8fd97d0,Added flagged predicate,2018,,
d698ff2,Add Flagged multi_predicate,2018,,
e036542,Add MeshBase::flagged_elements_begin()/end(),2018,,
623a41d,Update citations.,2018,,
94969cf,Update traffic.,2018,,
85eab11,Fix some remaining uses of deprecated Point::size() in ifem code.,2018,,
a06e5b7,Fix deprecated use of Point::size() in examples.,2018,,
d56fd5d,Remove variables which are now unused after updating algorithm.,2018,,
798f4e5,Merge branch 'ifem_point_size',2018,,
827bac3,Only call ex_update() on files opened for writing.,2018,,
e9b5f3e,libmesh_assert() the result of verify() calls,2018,,
98827a6,Use proper MPI type for 'unsigned long long' for MPI >= 2.0.,2018,,
b7bc03e,Merge pull request #1089 from roystgnr/assert_verify,2018,,
f12d0c3,Merge pull request #1090 from jwpeterson/nemesis_fix,2018,,
928dcba,Update citations.,2018,,
b39081c,pack_range should stop just *after* buffer_size,2018,,
4220b99,Add gather and allgather string overloads,2018,,
0eacbb1,Add unit tests for gather/allgather string overloads,2018,,
5d26547,Add identical_buffer_sizes code path,2018,,
8fa6d56,Merge pull request #1091 from roystgnr/pack_big_objects,2018,,
ecf0bec,Pass send buffer by const reference,2018,,
0cfee4c,Don't call ne_get_node_cmap() if there is nothing to get.,2018,,
5beeb8e,Merge pull request #1093 from jwpeterson/nemesis_fix2,2018,,
763c970,Merge pull request #1092 from dschwen/allgather_string_buffers,2018,,
66f311a,VTKIO isn't perfect  but I wouldn't consider it libmesh_experimental().,2018,,
d74a456,Fix logic bug in ParameterVector::clear().,2018,,
548240b,Avoid false MeshRefinement libmesh_deprecated(),2018,,
9551390,Avoid deprecated API in comment too,2018,,
d311344,Remove deprecated make_foo_compatible() argument,2018,,
fafe337,Avoid deprecated code in adjoints_ex2.,2018,,
640da95,assertion for the MPI1-with-32-bit-long case,2018,,
4ac71d1,Merge pull request #1096 from jwpeterson/rm_deprecated,2018,,
372c62e,Merge pull request #1097 from roystgnr/avoid_false_deprecation_warning,2018,,
f6357ad,Declare TransientEigenSystem,2018,,
bceb9f9,Use #ifdef for consistency elsewhere in the library.,2018,,
337fa42,Merge branch 'libmesh_eigen',2018,,
e388a03,Miscellaneous fixes/updates in Nemesis_IO_Helper.,2018,,
a3582a2,Merge pull request #1099 from jwpeterson/try_again,2018,,
0af2bfc,In verbose mode  write out sideset names to be sure we read them correctly.,2018,,
d2b366a,Add verbose print out of sideset names.,2018,,
248c7ab,Print current sideset name while iterating over global sideset ids.,2018,,
9425e7e,Write sideset names while writing Nemesis files.,2018,,
4d3d7c8,Add code to write nodeset ids from Nemesis.,2018,,
0fb9f20,Merge pull request #1101 from jwpeterson/nemesis_fix3,2018,,
5d5e9d4,Merge pull request #1098 from roystgnr/mpi1_ulonglong_assert,2018,,
7c6277d,Write Mesh block names to file from Nemesis.,2018,,
f78c561,Merge pull request #1102 from jwpeterson/nemesis_fix4,2018,,
ae60f36,Update traffic.,2018,,
29b7ab4,Update citations.,2018,,
9acb1cc,Add FlaggedPID multipredicate,2018,,
59d0f00,MeshBase::flagged_pid_elements_begin()/end(),2018,,
b39fe7e,gather_data() and act_on_data() can be const,2018,,
a772e9c,libmesh_assert_*_consistent_proc_ids(),2018,,
39bc458,Functor options for excluding from parallel sync,2018,,
3c416a6,MeshCommunication new_nodes methods,2018,,
528034c,New MeshTools::correct_node_proc_ids algorithm,2018,,
03ada0b,Start preparing adaptivity_ex5 for DistributedMesh,2018,,
af8c378,Use new_nodes method after refinement,2018,,
42bcf80,all_second_order: make only new nodes consistent,2018,,
6182b7d,redistribute option: only newly coarsened elements,2018,,
267cf71,Refactor DefaultCoupling to allow n_levels,2018,,
afcc34e,Accessors for DefaultCoupling members,2018,,
a43bf61,Generalize couple_neighbor_dofs -> n_levels,2018,,
a2e86dc,DefaultCoupling::n_levels() getter,2018,,
4f2be84,Never *shrink* DefaultCoupling::n_levels(),2018,,
88dd581,Unit tests for DefaultCoupling non-default options,2018,,
817cab0,Build and run DefaultCoupling tests,2018,,
4813964,Merge pull request #1064 from roystgnr/algebraic_functors,2018,,
1e4cd29,Fix trailing whitespace.,2018,,
cd48a51,Change spaces to tabs,2018,,
fa0a73b,More tabs -> spaces,2018,,
cf1cd22,Update traffic.,2018,,
e3f837f,Generalize/modernize systems_of_equations_ex2 3.,2018,,
7344ccf,Mark new functions libmesh_override.,2018,,
e731620,automake wants to add trailing whitespace to this file  so let it.,2018,,
df0649f,Rerun bootstrap after adding default_coupling_test.C,2018,,
b421875,Mark one more function libmesh_override.,2018,,
1a5fd17,Make new unit test actually compile.,2018,,
e1114f3,Update citations.,2018,,
15c43f8,Make new unit test run a bit faster.,2018,,
9191434,Merge pull request #1105 from jwpeterson/fix_unit_test,2018,,
527ae1a,Update citations.,2018,,
38b2814,Update traffic.,2018,,
b957fc1,Update citations.,2018,,
07f9dea,Update statistics for Sep 2016.,2018,,
cd573e1,Merge branch 'statistics',2018,,
d16c9de,Comments about DirichletBoundary variable ordering,2018,,
7e90978,Move DirichletBoundary methods to .C file,2018,,
59637c0,Re-bootstrap,2018,,
3ae8517,include function_base.h,2018,,
dccc250,Add new DirichletBoundary constructors,2018,,
aa8c038,Remove unnecessary includes,2018,,
ea66051,Add first 2017 paper using libmesh.,2018,,
550799b,Weaken asserts in System::point_*(),2018,,
1b092d9,Update System::point_value comment,2018,,
97f1fcc,More robust locator-based System::point_foo*(),2018,,
d9cbf8b,Build DirichletBoundary objects with new APIs,2018,,
09e337d,Merge pull request #1108 from roystgnr/better_point_value,2018,,
72f8aa7,Add VariableIndexing enum for DirichletBoundary,2018,,
20902f8,Use enum API for local-variable-order Dirichlet,2018,,
1feff40,Remove old local-variable-order constructors,2018,,
f241be1,Use smart pointer in test.,2018,,
25b44fb,Merge pull request #1109 from roystgnr/dirichlet_boundary_apis,2018,,
8dadaf1,Prefer UniquePtr to manual delete,2018,,
6b15f93,Fix recent unit tests with --enable-complex,2018,,
726ed84,scatter  specialized gather !HAVE_MPI cases,2018,,
744796a,Merge pull request #1113 from roystgnr/complex_test_fixes,2018,,
ddb9e17,Merge pull request #1112 from roystgnr/unique_ptr_in_examples,2018,,
592e325,Merge pull request #1111 from jwpeterson/unique_test,2018,,
1190d72,Merge pull request #1114 from roystgnr/no_mpi_fixes,2018,,
38b3fb7,Fix systems_of_equations_ex6 with --enable-complex,2018,,
5287f23,Merge pull request #1115 from jwpeterson/sys_ex_2_and_3,2018,,
6c9894a,Merge pull request #1116 from roystgnr/more_complex_fixes,2018,,
241f44f,Convert base_qrule to UniquePtr.,2018,,
8a085a6,Convert radial_qrule to UniquePtr.,2018,,
c8bbce8,Convert base_elem to UniquePtr.,2018,,
175c2b1,Convert base_fe to UniquePtr.,2018,,
7c2c4a6,The InfFE destructor is now empty.,2018,,
68b9138,Fix documentation typos.,2018,,
c922dba,Delete 'separator' lines from docs.,2018,,
a3755b7,Fix some spacing issues.,2018,,
ba77ca7,Fix 'should better' usage in docs.,2018,,
329a3a1,Merge branch 'inf_unique',2018,,
01a2569,Fixes for --disable-amr builds,2018,,
c25a5ba,Fixes for --disable-periodic builds,2018,,
4f2c62d,Fixes for sizeof(dof_id_type) < sizeof(int),2018,,
d15c44e,Use static_cast  not C-style casts,2018,,
ad378bb,Merge pull request #1117 from roystgnr/options_fixes,2018,,
1389b29,Update traffic.,2018,,
110f73a,Fix some spacing and indentation issues.,2018,,
09874f0,Fixed bug in InfFE::inverse_map() concerning v being out of range.,2018,,
a918fc5,Merge branch 'inf_fe_fix',2018,,
8a9b9ea,Update traffic.,2018,,
89f77a9,DofMap::gather_constraints() helper function,2018,,
063b365,Use gather_constraints in allgather_constraints,2018,,
e5900ea,Add an interface for passing the transpose nullspace to PETSc (#1121),2018,,
ec41aad,Update citations.,2018,,
ec6fc49,Update citations.,2018,,
6db9e37,Merge pull request #1120 from roystgnr/scatter_ghost_coupling_constraints,2018,,
18c7772,Fix MPI-1 compatibility of scatter/gather API,2018,,
89a2cc8,Make send values const,2018,,
6982579,Fix two send(set) overloads,2018,,
37a1c96,Compilation fixes for send/receive(set),2018,,
afc9caf,Disable non-blocking receive(set),2018,,
ffc3423,Unit test for set receive + non-blocking send,2018,,
c610216,Merge pull request #1123 from roystgnr/parallel_const_tweaks,2018,,
3d704c2,Fix 'first day' data bug in website traffic.,2018,,
f057e8c,Merge branch 'traffic',2018,,
0189185,Update citations.,2018,,
90240a5,trivial change to test new JSC buildbot,2018,,
341949c,Use a const_cast in one final MPI call,2018,,
2ab5a7a,Don't throw an exception in a destructor,2018,,
ed0f4ac,Bug (performance) fix for ghosting functor query,2018,,
b28a173,Merge pull request #1124 from roystgnr/mpi_const_workaround,2018,,
183d822,Merge pull request #1125 from roystgnr/options_fixes_2,2018,,
59914bf,Unit test framework for FE types,2018,,
f25589b,Build and run new unit tests,2018,,
34756bf,Add more Lagrange tests,2018,,
cae5ff7,Refactor fe_test.h  add second order tests,2018,,
a635148,BERNSTEIN can handle FIRST order on HEX8,2018,,
429bb34,Header function definition should be inline,2018,,
f9e3d0f,One more BERNSTEIN HEX8 fix,2018,,
1fcb658,More BERNSTEIN+FIRST+QUAD4 fixes,2018,,
3417f2a,Merge pull request #1122 from snschune/transpose_nullspace_interface_1121,2018,,
a8e1d2a,fix for --disable-amr,2018,,
8fe1dde,max_order() fix for BERNSTEIN elements,2018,,
32cdf01,max_order() fixes for SZABAB elements,2018,,
ced60b7,Support FIRST order BERNSTEIN on TRI3,2018,,
43650aa,Support FIRST order HIERARCHIC on TRI3,2018,,
fcc9c9a,Support FIRST order L2_HIERARCHIC on TRI3,2018,,
786198f,Support FIRST order SZABAB on TRI3 and QUAD4,2018,,
211445c,Support FIRST order SZABAB on TRI3 and QUAD4,2018,,
e9fa943,Bugfix for projections on C1 elements,2018,,
47438e2,Test PRISM18  not PRISM15  for LAGRANGE,2018,,
e19f322,XYZ elements always calculate_xyz in the map,2018,,
d659d22,Project with a gradient in unit test,2018,,
7c998fa,Weaken tolerance on gradient tests,2018,,
da6a8fa,Instantiate tests for all our other FE types,2018,,
f16f5fe,Build and run all FE unit tests,2018,,
496d665,Re-bootstrap,2018,,
8c9c76d,Fixes for bug in edge flipping,2018,,
3409e21,Add some more tests at higher orders,2018,,
fe62ed2,Unit test fixes for --enable-complex,2018,,
4400175,Add tests on serendipity elements,2018,,
b752e46,Use new whitespace standards,2018,,
ad7ca07,Sane error message in devel mode too,2018,,
dbacfa0,Disable caching in XYZ elements,2018,,
69f91f2,Merge pull request #1126 from roystgnr/fe_tests_and_fixes,2018,,
5faadd8,Remove all XYZ caching,2018,,
4ee1704,Re-enable XYZ on TET unit tests,2018,,
7cbf9f4,Test cache in Clough-Tocher code,2018,,
23b3945,Adaptivity ex4 should take command line parameters,2018,,
70797cf,Test 3rd order CLOUGH too with adaptivity ex4,2018,,
a7468bf,Small fix to discontinuous case in ExodusII_IO_Helper::write_elements,2018,,
444ce73,Merge pull request #1128 from dknez/discontinuous_exII,2018,,
fbb3690,Pass elem->dim() to eval_at_node(),2018,,
796c3e8,Add Elem::is_vertex_on_parent(),2018,,
52ff947,Bugfix for adaptive refinement of C1 elements,2018,,
f29b383,Update traffic.,2018,,
19d08c2,switch for tetgen-options added,2018,,
9cf1512,Fix trailing/other whitespace issues.,2018,,
e8cceaa,Merge branch 'tetgen_switches',2018,,
f35a4ce,Fix initialization order warning.,2018,,
752fa58,Fix unused variable warning.,2018,,
2e79612,Also test Lagrange pyramid FEs.,2018,,
9c03884,Ignore warnings from Cppunit header files.,2018,,
f308bd0,Merge pull request #1127 from roystgnr/xyz_tests_and_fix,2018,,
0206b46,Merge pull request #1131 from jwpeterson/test_pyramids,2018,,
4b5e9f6,Update NEWS file for 1.1.0 release.,2018,,
69c81d0,Update automake version number to 1.1.0-rc1.,2018,,
c6fda2d,Run bootstrap.,2018,,
bd49147,Treat empty _dof_coupling as full _dof_coupling,2018,,
51064b0,Leave _default_evaluating->_dof_coupling == NULL,2018,,
bfb6e5e,Avoid unused variable warning in some configs.,2018,,
660cd69,Bugfix merges of NULL+non-null CouplingMatrix,2018,,
6e5edf0,fix for distcheck,2018,,
202491a,MatSetTransposeNullSpace requires PETSc >= 3.6.,2018,,
c637943,fix for distcheck,2018,,
bd1f7d7,fix for --disable-optional,2018,,
01392fb,fix for --disable-amr,2018,,
b650cc1,Fix scripting atavism,2018,,
6d0821f,Fix unique_id setting in all_tri(),2018,,
fcc95b9,Fix heisenbug in all_tri(),2018,,
e6dfeb3,fix shim constructor for when fparser is not available,2018,,
18beb79,Use TOLERANCE in systems_of_equations_ex3,2018,,
db5de76,NonlinearImplicitSystem::ComputeVectorSubspace as an abstract class,2018,,
753bb83,"Fix ""maybe uninitialized"" warning from GCC 5.3.0.",2018,,
9702b3b,Avoid deprecated-declaration warnings in nanoflann examples.,2018,,
19c88a9,Don't try to run CLOUGH with threads,2018,,
f0d14b6,Update automake version number to 1.1.0-rc2.,2018,,
ddd2645,Run bootstrap.,2018,,
2d3f229,Prefix libMesh Parallel:: macros with LIBMESH_,2018,,
cb78b9d,Removed overzealous assert,2018,,
9ce81d4,Fix GetPot off-by-1 bug.,2018,,
e597141,Put renamed Mesh subclasses in renamed headers,2018,,
7e810a4,Add replicated/distributed headers to build system,2018,,
571a86d,Old headers are now shims for new headers,2018,,
0d0e9c4,Re-bootstrap,2018,,
d1925b6,Updated NEWS with new header names,2018,,
a1879af,Update libmesh version number to 1.1.0.,2018,,
941e959,Run bootstrap.,2018,,
88d14e5,add missing include,2018,,
2319686.0,Turn down the analytic Jacobian tolerances so they don't fail on single-precision tests,2018,,
a563f62,Fix for bug in weighted sensitivity solve code when assemble_before_solve was turned off,2018,,
f1ed15d,Fix example 28 for 1D,2018,,
44cc4a7,Work with separate libMesh namespace,2018,,
402b556,Fixes for separate libMesh namespace,2018,,
5c6b12d,Fix a comment typo  mistake,2018,,
2a17eac,More robust assertion code,2018,,
e564398,Let's verify that set_node_processor_ids worked,2018,,
e5d3a0d,Add missing initializer,2018,,
69cd4aa,Fix for the previous ParallelMesh::all_first_order fix.  plot_error and ex26 seem to be working with ParallelMesh now.,2018,,
b53114c,Disable blas/lapack use in non-double-precision cases  I'm seeing memory corruption when using this with triple-precision and threading.,2018,,
6965656.0,Fix error message formatting,2018,,
4db9134,The safe perturbation size we can take depends on floating point tolerance.  Of course it depends on solution scaling too  but nothing we can do about that outside user code...,2018,,
88b9490,Tweak the ex26/ex27 tolerances so that the numerical jacobians aren't too far off in single-precision mode,2018,,
92442d5,"Another ""32 bit floats suck"" change  ex27 now passes in single precision too.",2018,,
bd2a83f,In fact  let's just give users an example of turning off jacobian verification instead.,2018,,
88dda4e,Updated publications list for April 2011.,2018,,
9bd4f9c,change in RBSystem  do not read store_non_dirichlet_operators in from input file.,2018,,
cca0522,Adding gitignore to libmesh.,2018,,
7837dce,Adding (untested!) quadruple-precision support.,2018,,
17df42a,short circuit vector_mult for empty matrix,2018,,
0c524e3,add more functions to stub spin_mutex,2018,,
70e7f51,Optimize away transcendental (or even repeated plain arithmetic) FLOPs in PatchRecoveryErrorEstimator,2018,,
3636cb8,Fix status message grammar,2018,,
bafaff0,nemesis mesh output working,2018,,
6fb6661,working nemesis output,2018,,
43f0c9e,nemesis mesh output working,2018,,
8d07b78,remove some debugging print statements,2018,,
2a164ae,don't serialize mesh for parallel output formats,2018,,
08c7f2d,fix nemesis filename padding,2018,,
220c0a4,Fixed swapped meaning of global_elem_blk_ids and global_elem_blk_cnts.  Removing unused variable warnings.,2018,,
acf29ae,Write zero size blocks if certain partitions don't have any elements in them on a given processor.,2018,,
1f29efb,Refactoring: Moved sideset writing code to its own function.,2018,,
b711017,make nemesis output solutions,2018,,
8225486.0,1.) tecio.a support for latest OSX 2.) extended user-provided object support to the nonlinear system and solver interface.  this required creating abstract base classes inside the NonlinearImplicitSystem which the user can derive from to implement residual and jacobian computation.  additionally  the NonlinearSolver was extended to include pointers to user-provided objects of these types.,2018,,
c295a9b,Print error messages to std:err and give more descriptive error message when opening a file fails.,2018,,
782a229,Fix for --disable-exodus/nemesis,2018,,
a43f131,Support string<->enum conversion for NODEELEM,2018,,
af6b234,Added exodus files to git ignore list.,2018,,
07f643e,Patch from Vikram Garg: Create (and have ImplicitSystem use) LinearSolver::adjoint_solve Override PetscLinearSolver::adjoint_solve to use KSPSolveTranspose Add option to reuse preconditioners Test this option in ex26,2018,,
059bbd3,Call write_timestep only on processor 0 for exodusII,2018,,
990ea13,"Made all conversions take an additional argument for the inverse node map.  For all elements except hex27  the ""inverse"" node map is identical to the forward node map.",2018,,
7bf51e6,Ex4 5 11 13 14 15 18 19 22 25 28 now write out .e files instead of .exd,2018,,
2ae531f,Patch from Boyce Griffith to enable more flexible FE reinit options,2018,,
363502e,Fixes for segfault  possible caching bug,2018,,
7065b6d,Slightly more legible fix for caching,2018,,
2cbd66d,Fixes for FEXYZ,2018,,
b1b1baf,Updated publications for May 2011.,2018,,
c1e689a,Bugfix from Boyce Griffith for caching on new edge_reinit,2018,,
f2bb451,New patch (of elements) reuse option to PatchRecoveryErrorEstimator  based on a patch (of software) from Vikram Garg.  Turning this on by default since it's much faster and still gives decent results in our tests.,2018,,
4e68bbf,Set svn:ignore,2018,,
c601baa,"Added new utility header and (empty) source file for the ""hashword"" implementation by Bob Jenkins.",2018,,
65cf99b,Make patch_reuse a runtime option in example 26,2018,,
c13619e,Removing some debugging chatter,2018,,
8376a56,Avoid unused variables warning,2018,,
2201a45,Adding an Elem::print_info() method for debugging,2018,,
2462db8,Let's not forget to print element ids...,2018,,
63c6f16,Print lots of element info whenever we get an inverse map convergence failure  and even when we just see an anomously large Newton step,2018,,
4472bd1,Fix get_info/print_info for non-infinite elements,2018,,
be8370c,Removing redundant copy,2018,,
99e9477,Fix for non-on/off QoI weights,2018,,
e155b60,Add setter function for QoISet  more complete citation of idea,2018,,
5898d5c,Make our getter const  now that we've got a separate setter.,2018,,
530771f,Bug fixes for QoISet example,2018,,
5d0342f,Remove redundant extra error estimate at the end of the adaptive loop  we can put this back when we have an AdjointRefinement or something equally good to demonstrate instead.,2018,,
6267c27,It's apparently possible for Newton to step well outside the master element but then come back in and converge properly.  So let's not die or scream unless we have a real divergence.,2018,,
3a8454a,Restoring old qoi_set() setter API for compatibility,2018,,
704dc1e,Move print_trace() to a terminate_handler - that way it happens for all uncaught exceptions  not just libMesh errors.,2018,,
a805c60,modify system update to use ghosting,2018,,
bb3936e,restructured DofObject internal storage,2018,,
f8c2dfe,only set the old_dof_object if the current system has DOFs.  prevents the case of multiple systems being initialized successively - in the old implementation the first system would initialize and not set the old_dof_object.  then the second system would initialize and set the old_dof_object because the first system had added DOFs.  this fixes that erroneous behavior.,2018,,
14e6b63,LocationMap::key() changes,2018,,
910f49b,typedefed the storage to make it easier to play with other allocators later on,2018,,
d11affd,Fix for old off-by-one error in refinement flagging,2018,,
e998a49,Fix unused variable warning in fe_map.C,2018,,
e003e9f,Update the subset of boost we include in contrib.  Added the pool allocator  this looks great for helping reduce the storage overhead and time associated with allocating many small objects.  Also added the test_boost.C file to make sure we can use the subset of boost we actually want.,2018,,
d0317d0,look for boost  use contributed minimal one if not found,2018,,
72683f7,add boost include path,2018,,
f6bba15,Fix error messages  end unused vars warning,2018,,
801ab27,Some fixes (still woefully incomplete) for ParallelMesh adaptive coarsening  and a new Elem::total_family_tree utility function,2018,,
4f7731c,keyword expansion  added pooled allocator interface which is not used anywhere yet,2018,,
3197fb3,fast pool allocator,2018,,
2213982.0,Do some bounds checking in ExodusII Conversion class.,2018,,
f7de747,Reverted faulty assert logic.,2018,,
5a2c265,Bounds checking in ExodusII_IO_Helper::Conversion.,2018,,
f13d66b,add methods to allow copy construction of objects using PoolAllocator<>,2018,,
e8e11f0,Actually check against the array length  not the size of the array in bytes.,2018,,
13522f0,Make macro a little safer by adding parentheses.,2018,,
537911c,Updated developers list.,2018,,
7f22ad7,updated www.mit.edu URL,2018,,
09c9877,Added evaluate_RB_error_bound flag to RBEvaluation  allows us to turn off error bound calculation if it is not necessary (can save time in the Online stage).,2018,,
d7abcd0,Adding MeshTools::libmesh_assert_valid_elem_procids() test,2018,,
4bf8b3a,Fix for processor_id setting on subactive elements.  Adaptive coarsening on ParallelMesh still doesn't work (at the very least it needs DofObject communication) but it gets further now.,2018,,
1.2e+18,Fixed typos when !LIBMESH_HAVE_BOOST..,2018,,
0b4eff2,Fix MeshModification::distort() and MeshModification::scale() for ParallelMesh,2018,,
0449dd8,Marking a couple more functions parallel_only(),2018,,
7213cad,A couple more ParallelMesh fixes... these aren't actually distributed mesh specific  just corner cases I've never managed to trigger with a SerialMesh,2018,,
34320bd,BoundaryInfo::sync() works on any UnstructuredMesh  this should let apps choose between ParallelMesh and SerialMesh boundary meshes at runtime.,2018,,
f7c2f4c,Fix for --disable-amr,2018,,
ee3c4d0,Removed an assert which can be overzealous if triggered after coarsening but before partitioning,2018,,
fcebe4b,Support out-of-order and sparse add_elem on SerialMesh  this doesn't break anything and it's the easiest way to make some higher level code ParallelMesh/SerialMesh agnostic.,2018,,
6e503db,Fix for --disable-amr,2018,,
13d968c,New Parallel::StandardType<T> for more automatic generation and use of built-in and derived MPI types.,2018,,
f4d5d51,If Parallel:: functions expecting equal buffer sizes are passed inequal buffer sizes  in DEBUG mode we want to catch that with a nice libmesh_assert rather than relying on the mercy of the MPI stack for a comprehensible error message.,2018,,
7d3b9c8,Early return for a degenerate case,2018,,
29c2d43,Refactoring MeshOutputSerializer -> MeshSerializer,2018,,
b064cf8,Fixes for --disable-mpi,2018,,
308753b,Added inline libmesh_ignore() utility function.,2018,,
07cb552,A fix for an unlikely degenerate case  plus a similar fix for a just-introduced bug.,2018,,
0e9dd5a,Added MeshTools::libmesh_assert_valid_stuff_some_more to aid in ParallelMesh restart debugging,2018,,
db00647,libmesh_assert_valid_refinement_tree is no longer overzealous on a distributed mesh,2018,,
e2a25b1,A little more debugging for delete_remote_elements and MeshCommunication::redistribute.,2018,,
89d6b53,print system number,2018,,
eae024c,add a function to remap subdomain ids,2018,,
3d9a33a,Provide a way to support >65 534 processors,2018,,
c8a0864,Fix recalculate_n_partitions() to work with ParallelMesh,2018,,
325dafe,Make MeshSerializer default to true  for slightly cleaner syntax in non-MeshOutput uses.,2018,,
68e8286,Fix a buggy was-supposed-to-be-temporary mesh serialization by replacing it with MeshSerializer,2018,,
e7a5826,Fix typo in comment,2018,,
8ca215d,Parent processor ids need to be based on (and only on) their active descendants,2018,,
2d8097a,Fix for make_links_to_me_remote() with boundary elements,2018,,
126dc1f,Additional debugging in delete_remote_elements  and fixes for boundary meshes,2018,,
485ab95,Major rbOOmit change: Reorganized code so that RBEvaluation does not refer to RBSystem. RBBaseSystem and RBEvaluation both inherit from RBBase  which defines a parameter domain and stores an RBThetaExpansion object. Also  we now store data for a temporal discretization in a TemporalDiscretization object to avoid duplication between TransientRBSystem and TransientRBEvaluation.,2018,,
856e855,Add -Wextra warnings for gcc,2018,,
690aa92,Fix for one parallel.h unused variables warning  John is working on the fix for the other.,2018,,
27dc837,Keep the ParallelMesh max_*_id counts in sync after partitioning,2018,,
300e8c9,Fix new assertion,2018,,
9384c4c,Marking a parallel_only function,2018,,
49e83f6,rbOOmit change: Removed redundant call to build_temporal_discretization in transient_rb_system.C,2018,,
c964faa,Corrected comment in ex23.C,2018,,
1dbf11c,Removed unnecessary includes in rb_base.C,2018,,
975145c,allow for point value to optionally return 0 if the point is not found.  this is required for example when comparing TC stacks to an ablator problem where a TC eventually burns out and leaves the domain.,2018,,
9480bd9,Add insist_on_success option to System::point_gradient/hessian  too,2018,,
7ca0523,ex10 finally passed my tests with ParallelMesh  let's get that into regression tests now.,2018,,
75096c7,Make BoundaryInfo::sync() ParallelMesh-friendly  always keep boundary mesh partitioning to match interior mesh  and refactor multiple sync() variants to use one code path.,2018,,
5865213.0,We can return const references from const methods - that should be just as cheap for an inline function and it makes Parallel:: operations on these objects easier.,2018,,
0e59ffb,A few refactoring tweaks to StandardType  plus a change to catch compile-time errors using it.,2018,,
6e388bf,Add (and use) Parallel:: support for our 3-vectors and 3x3-tensors,2018,,
02bb036,rbOOmit change: Replaced function pointer parametrized_function_ptr by a functor class ParametrizedFunction in RBEIMSystem.,2018,,
14becd5,Support (and use) Parallel:: operations on Points,2018,,
fec7b23,Parallel::set_union works now  so we can use it for Nemesis,2018,,
adffc4f,Hilbert indices are *unsigned* ints.,2018,,
c4f78dd,rbOOmit change: Cleaned up recent changes a bit. RBThetaExpansion no longer stores a parameter reference  it is a more pure functor-like object now where parameters get passed in. In RBBase  rb_theta_expansion is now a raw pointer rather than AutoPtr since we may want to share the pointer (shared_ptr may ultimately be better). eval_theta_q functions are now in RBThetaExpansion  not in RBBase.,2018,,
618a987,Modified white space in rb_theta_expansion.C,2018,,
484090b,Cleaned up whitespace for consistency in transient_rb_theta_expansion.C,2018,,
3ab8711,rbOOmit change: Further improvements to the rbOOmit API  related to separation of Construction and Evaluation stages. We now only call RBSystem::initialize_RB_system if we need to do truth-dependent calculations  for Online (evaluation) calculations  we do not need RBSystem::initialize_RB_system  we just use an RBEvaluation instead.,2018,,
53061f4,more readable print_info(),2018,,
57ba14e,Let's just use Hilbert::inttype and not make assumptions about how it was configured.,2018,,
82dc070,"Remove static libraries before archiving objects into them - otherwise with ""ar rv"" the binary output of deleted source files never gets removed!",2018,,
c523e3b,rbOOmit change: rearranged headers a bit,2018,,
3d9b111,Fixes for --disable-mpi,2018,,
5f7e147,Avoid warnings in non-double-precision cases,2018,,
e8206f0,Fix for --disable-second,2018,,
be1cea7,Performance improvements for find_*_neighbors  and a new find_point_neighbors version for finding neighbors at just one point,2018,,
0b752eb,rbOOmit change: Got rid of initialize_mesh_dependent_data flag in RBSystem  it is no longer necessary now that RBEvaluation has been separated from RBSystem.,2018,,
ce8bbb7,rbOOmit change: Modified RBSystem so that by default it just has one pointer to an RBEvaluation  since this is the most relevant default case. Derive from RBSystem to use than one RBEvaluation.,2018,,
dc5a9b0,rbOOmit change: RBSystem no longer deletes rb_eval in the destructor.,2018,,
430fa9e,Changed reference to pointer in rb_system.C,2018,,
7feffe1,Cleaned up some commenting in rbOOmit,2018,,
1988415.0,Fixing sidesets on Prisms with adaptivity,2018,,
49d99da,Fix System::update() workaround.  This should still employ the fix that Derek put in for parallel->ghosted update()  it should fix any similar bug with other uses of localize()  and it should fix the Trilinos and noMPI regressions that the previous workaround had caused.,2018,,
1ceb9d3,rbOOmit change: Renamed RBSystem to RBConstruction. This name is much more appropriate because now the code is structured so that the Evaluation stage is encapsulated in RBEvaluation  and RBConstruction handles Construction of an RB space.,2018,,
dbc1254,"Fix for overzealous assert David Andrs caught  if processor 0 has no DoFs then it's ""last DoF index"" ends up being UINT_MAX.",2018,,
f850218,Removed redundant print statement,2018,,
2be893b,indenting fix,2018,,
7cf2311,make_dependencies should work for c files too,2018,,
7bc0131,Make it possible to instantiate a base System,2018,,
2a22077,TransientBaseSystem for Derek,2018,,
e819840,.depend should also include the .c files  and depends on every file it scans,2018,,
b3adbe9,Relying on GNU Make to auto-regenerate .depend based on its include line seems to work better than putting it in .PHONY  this seems to fix the problem where Make would update .depend every time but would use the pre-updated version.,2018,,
2533d1b,"Added ""ignore_warnings.h"" and ""restore_warnings.h""  so we can keep the libMesh warning levels cranked up even in the presence of less clean headers.  With my gcc 4.5 version this is at least enough to shut up ""unused variable"" warnings from the MPI headers  gcc 4.6 and later ought to be more useful still.",2018,,
55c21b3,No need for meshtool to abort just because we printed the usage message,2018,,
7a91079,More informative error message,2018,,
998c693,Intel compilers lie about being __GNUC__,2018,,
f2e4101,Minor bugfixes for Trilinos algebra.  This fixes the ex19 regression and make the trilinos nonlinear solver compatible with Ben's new function-object interface.,2018,,
25cf8ce,Added meshbcid utility,2018,,
155ce03,expose petsc callbacks and allow users the option to call SNESSetJacobian on their own,2018,,
25f6965,allow assignment between ghosted and serial petsc vectors,2018,,
ad52558,Ghosted solution has to be closed on System::update,2018,,
ac95f2c,New app to update element subdomain IDs  sideset IDs and nodeset IDs,2018,,
6201259.0,Close solution vectors before system update,2018,,
cb43805,Fixing shameful bug from previous commit.,2018,,
3a70760,Make sure examples/*/.depend get updated when necessary,2018,,
bb0131c,Moving close() of ghosted vectors from System::update() into PetscVector,2018,,
e9f1ebb,Adding Elem::opposite_node and Elem::opposite_side functions  useful for us benighted souls working on semi-structured grids.,2018,,
f4658dd,Fix slightly outdated ExodusII API where future patch will be applied,2018,,
81d0d29,Updated .gitignore.,2018,,
e7ab1a7,Updates to TetGenMeshInterface:,2018,,
8cbd144,Using MeshBase::sub_point_locator() can be much much cheaper than building a new tree from scratch.,2018,,
e328798,Avoid unused variable warning,2018,,
98e80ad,Add a PerfLog entry for PointLocatorTree - that can be awfully expensive sometimes...,2018,,
4f0dcca,Knowing when the tree fails and we're stuck with a linear search is useful for performance testing too,2018,,
3ee98f1,"Optimize Elem::contains_point for the ""often-false"" use case",2018,,
ae66e56,Disabling contains_point optimization for now - there's a false negative case possible.,2018,,
4cd36a8,Fixes (to commented out code...) for LIBMESH_DIM < 3,2018,,
984e3dd,Reenable contains_point() optimization  but only for first order elements,2018,,
6ac5ccd,Adding projection app,2018,,
97e06f4,Now Quad::opposite node returns correct values on *all four* sides! ...,2018,,
39c454f,"Need an explict include of ""libmesh_logging"" for some configurations",2018,,
89f7890,Don't try to allocate size zero arrays.,2018,,
1506ccf,Loop with node iterators rather than sequentially with integers.  This is the most general and correct way to loop over nodes.,2018,,
58047ab,Fix unused variable warning in DEBUG mode.,2018,,
f69c134,optimize DenseMatrix::zero(),2018,,
8832cd5,Fixes for LaplaceMeshSmoother.,2018,,
8459ee7,Include proper system headers for memset.,2018,,
9af3e1a,TriangleInterface updates.,2018,,
b4102a2,rbOOmit change: changed TransientRBConstruction and TransientRBEvaluation so they store a TemporalDiscretization (rather than a pointer to one). Renamed RBEvaluation::initialize to resize_data_structures. Moved parameter range out of RBBase  parameter ranges are now only in RBBaseConstruction since we train an RB space with a parameter domain in mind.,2018,,
bd3b0ec,Don't forget to calculate the extra derivative terms for 1D elements that aren't parallel to the x axis,2018,,
4df4cd7,Constructing bare System objects is more useful if we can load restart files with them  too...,2018,,
f72f59a,Adding ex29.,2018,,
0fbc14f,rbOOmit change: renamed RBBase to RBParametrizedObject  a more descriptive name... also renamed RBBaseConstruction to RBConstructionBase,2018,,
04ad459,rbOOmit change: commented out code for writing output data to a single file in RBEvaluation,2018,,
e3ee461,Small edit to RBConstruction::train_reduced_basis,2018,,
e68a510,It doesn't happen very often  but when we *do* change a contrib/ header we want to recompile the objects depending on it.,2018,,
bfee618,Disabling tetrahedralize_domain() until I can figure out why tetgen is infinite looping...,2018,,
c3cdaa4,"""BasicSystem"" -> ""Basic""  to be more consistent with the other system names.",2018,,
28fe193,BoundaryInfo can reset the mesh_dimension of the boundary mesh to keep it accurate.,2018,,
00cd2c7,rbOOmit change: Removed assert in RBParametrized object,2018,,
6f56718,Disable ex29 for --enable-1D-only,2018,,
6e96283,Removed redundant line in rb_construction.C,2018,,
1bf62f5,rbOOmit change: renamed RB_solve and initialize_RB_construction to all lower-case (to be more in line with standard naming practices). Also  initialize_rb_construction no longer takes an argument.,2018,,
0a5e484,Fixed comment in ex23,2018,,
172c015,Our triangle interface seems to fail with single or long double precision,2018,,
271b51d,Our triangle.c copy now includes libmesh_config.h to choose scalar precision.,2018,,
b7af34e,ex29 ought to work on non-double-precision libMesh now  let's try it.,2018,,
8e99cb1,Putting some notices up on the file we modified as well as on the README to better comport with the Triangle license.,2018,,
b8a721c,Adding -g  general flags to intel CFLAGS,2018,,
3fe7e61,configure built with new compiler.m4 changes,2018,,
1856082.0,Print a little more output,2018,,
c2fdeb0,Don't compile Triangle or Tetgen code when libMesh wasn't configured with Triangle/Tetgen enabled.,2018,,
33fa547,Differently-const versions of the same method shouldn't also be differently-protected.  That way lies madness.,2018,,
e620507,More assertions.  Yes  I wrote user code that would have tripped one of these.  No  I'm not proud.,2018,,
8371901.0,Disable gcc diagnostic pragmas for gcc 4.0 and 4.1  which don't support them.  These headers are supposed to be disabling warnings for 3rd party code  not adding warnings for our own code.,2018,,
62f9a67,Adding virtual destructor to Abstract Base Class,2018,,
e9ba7c2,whitespace fix,2018,,
346b134,On my Macbook we need template instantiation to follow all function definitions to prevent runtime dynamic linking failure,2018,,
1da0185,My Macbook's linker doesn't recognize one of those options and gives duplicate symbol errors with that object file.  Disabling them for gcc <= 4.0  which fixes things for me and hopefully shouldn't mess with the INL gcc 4.2 builds.,2018,,
6090a1f,libmesh_example_assert  ifdef  comment updates,2018,,
c3960a2,Fix VTK connectivity for TRI6.,2018,,
32de6c9,Fixes for writing VTK elements:,2018,,
67910d4,Add edge capabilities to FEMContext - the added cost should be trivial when edge_fe_reinit isn't called.,2018,,
995d2ea,Add proper dependences and inherit compiler flags for TetGen.,2018,,
2dc99cb,Add braces around empty body in while statement to pacify compiler.,2018,,
c8c888f,Added infinite loop detection and some simple bounds checking.,2018,,
5fdeb7f,Ignoring generated files in ex29.,2018,,
bec60a6,Fix warning about signed/unsigned comparison.,2018,,
b18069b,Added Makefile dependencies for contrib software:,2018,,
cb86fd6,Making comments more accurate - not all System assembly calls involve a matrix.,2018,,
02d2c00,switch around compiler options so users can override them,2018,,
095981f,"Fixes for the ""boundary id on internal sides"" case.",2018,,
e40ebc1,Added Eigen config stuff from David Knezevic.,2018,,
dd2a85a,rbOOmit change: added Parellel::barrier at start of basis function IO,2018,,
ff13bed,Look for Eigen headers in EIGEN_INC/Eigen rather than EIGEN_INC.  This makes more sense when #including them.,2018,,
bdd81e2,Fixed typo.,2018,,
876b8f9,Adding READ_BASIC_ONLY option to EquationSystems::read().  This is only a big win for projection.C  whose costs are still dominated by PointLocator's inverse_map tests  but getting rid of unnecessary sparse matrix allocation and sparsity pattern calculation shaves 80% off the runtime of some more app-specific utility programs I've got.,2018,,
9da0005,Removed redundant success status message from Eigen.,2018,,
2b5ae15,Working on a system for generating and using constraint data that's indexed by nodes  not just by dof indices.,2018,,
b82da0a,Try to print the *correct* average constraint length...,2018,,
377d3b8,Print Node constraints too,2018,,
86120f1,compute_node_constraints bugfix,2018,,
1ce9782,Computing NodeConstraints (except for periodic cases) now.,2018,,
f03bbf5,rbOOmit change: renamed low_memory_mode flag to more descriptive name: single_matrix_mode,2018,,
50755000000000.0,Try to compute node constraints in the periodic boundary case too.,2018,,
ac89740,Fix for nodal constraint construction on periodic BCs,2018,,
3fa0e85,Making NodeConstraints a configure-time option  default disabled,2018,,
fbe5090,Merged changes from trunk,2018,,
363bbc8,Merged in new NodeConstraints option from branch,2018,,
41e3043,Shut up unused variable warnings when !LIBMESH_ENABLE_NODE_CONSTRAINTS.,2018,,
e7aa1ba,Creating branch to work on changes to DiffContext/DiffSystem for use with Discontinuous Galerkin methods.,2018,,
38299fa,Get rid of some unnecessary code in NodeConstraints calculations,2018,,
1489bed,allgather with an empty r used to trigger a GLIBCXX_DEBUG assertion failure,2018,,
550caf5,point_* methods should accept a const Point.,2018,,
6774d2f,Tweak code for clarity,2018,,
4973867.0,NodeConstraints bugfix,2018,,
4995624.0,Commenting out overzealous asserts - non-processor-0 nodes are going to want to read and write zipped files in the parallel i/o cases.,2018,,
2c441bc,Make sure parallel-read-in vectors are closed after reading,2018,,
504529a,First cut at adding access to neighbor values to DifferentialSystem framework. This will come in handy for Discontinuous Galerkin simulations. I still need to debug and also add fixed* implementation.,2018,,
d1e00ed,If we make Parallel::verify() a no-op when called for types T that don't have MPI_MIN/MPI_MAX defined  then we can use it even in generic calls that aren't always instantiated with verifiable T.,2018,,
4f7b6cc,When we've got a non-serial Mesh  we should default to non-serial I/O unless the user says otherwise.,2018,,
e1538bf,Fixed a memory access out of range error that showed up when trying to access neighbors on the boundary. Also implemented DiffSystem constructing DiffContext with compute_neighbor_values.,2018,,
90728c2,First cut at adding neighbor information to DiffSystem/DiffContext for Discontinuos Galerkin simulations.,2018,,
270f009,Adding an extra flag to help oprofile,2018,,
23ad00e,rbOOmit change: pulled printing out from process_parameters_file and put it in a new function  print_info,2018,,
72352000000000.0,rbOOmit change: Renamed load_RB_solution to load_rb_solution (for consistency of function names...),2018,,
e829432,rbOOmit change: rb_solve now returns a non-normalized (i.e. absolute) error bound. Renamed flag return_rel_error_bound to use_relative_bound_in_greedy  and this is only used inside RBConstruction now  not passed to RBEvaluation.,2018,,
62d509d,rbOOmit change: Need to set compute_RB_inner_product = true in TransientRBEvaluation ctor,2018,,
e2c4783,Modifications to ex29 to get it working under Linux.,2018,,
fc5c9f7,Split TetGenWrapper class into its own header file.,2018,,
756ef4f,Moved MeshSerializer class to its own file.,2018,,
24e6a01,Split out the TriangleInterface::Hole classes into a separate file.,2018,,
3ecb0ff,ExodusII update that enables writting out zero IDs to the output file,2018,,
1832eb6,Added Makefile dependencies for new ExodusII files.,2018,,
47213ce,rbOOmit change: removed impose_internal_dirichlet_BCs and impose_internal_fluxes from the set of parameters that are read in from input file in process_parameter_file. These parameters should be set programmatically in a class since they effect the assembly behavior significantly.,2018,,
3c1d5d8,get rid of include/mesh/mesh_generation.h:133:8: warning: extra tokens at end of #endif directive,2018,,
c2e4cf7,My Macbook's linker doesn't recognize one of those options and gives duplicate symbol errors with that object file.  Disabling them for gcc <= 4.0  which fixes things for me and hopefully shouldn't mess with the INL gcc 4.2 builds.,2018,,
6a715d2,libmesh_example_assert  ifdef  comment updates,2018,,
7587718.0,Fix VTK connectivity for TRI6.,2018,,
42ead08,Fixes for writing VTK elements:,2018,,
9ce94a1,Add edge capabilities to FEMContext - the added cost should be trivial when edge_fe_reinit isn't called.,2018,,
ad1a399,Add proper dependences and inherit compiler flags for TetGen.,2018,,
38a5dfa,Add braces around empty body in while statement to pacify compiler.,2018,,
5c35452,Added infinite loop detection and some simple bounds checking.,2018,,
4a7a3ae,Fix warning about signed/unsigned comparison.,2018,,
812474b,Added Makefile dependencies for contrib software:,2018,,
7a3eda3,Making comments more accurate - not all System assembly calls involve a matrix.,2018,,
ccbcd0f,switch around compiler options so users can override them,2018,,
7f6c3ac,"Fixes for the ""boundary id on internal sides"" case.",2018,,
1ddfd76,Added Eigen config stuff from David Knezevic.,2018,,
da47e90,rbOOmit change: added Parellel::barrier at start of basis function IO,2018,,
a50ee42,Look for Eigen headers in EIGEN_INC/Eigen rather than EIGEN_INC.  This makes more sense when #including them.,2018,,
53d4a78,Fixed typo.,2018,,
4368497.0,Adding READ_BASIC_ONLY option to EquationSystems::read().  This is only a big win for projection.C  whose costs are still dominated by PointLocator's inverse_map tests  but getting rid of unnecessary sparse matrix allocation and sparsity pattern calculation shaves 80% off the runtime of some more app-specific utility programs I've got.,2018,,
87b72ee,Removed redundant success status message from Eigen.,2018,,
e3a8ace,Try to print the *correct* average constraint length...,2018,,
8d78f72,rbOOmit change: renamed low_memory_mode flag to more descriptive name: single_matrix_mode,2018,,
c2576c2,Merged in new NodeConstraints option from branch,2018,,
364c501,Shut up unused variable warnings when !LIBMESH_ENABLE_NODE_CONSTRAINTS.,2018,,
340761b,Get rid of some unnecessary code in NodeConstraints calculations,2018,,
680fcb2,allgather with an empty r used to trigger a GLIBCXX_DEBUG assertion failure,2018,,
24cdb40,point_* methods should accept a const Point.,2018,,
5bf2f5a,Tweak code for clarity,2018,,
adeef00,NodeConstraints bugfix,2018,,
0b67a69,Commenting out overzealous asserts - non-processor-0 nodes are going to want to read and write zipped files in the parallel i/o cases.,2018,,
5b3b31f,Make sure parallel-read-in vectors are closed after reading,2018,,
9d5212c,First cut at adding access to neighbor values to DifferentialSystem framework. This will come in handy for Discontinuous Galerkin simulations. I still need to debug and also add fixed* implementation.,2018,,
ef6c330,If we make Parallel::verify() a no-op when called for types T that don't have MPI_MIN/MPI_MAX defined  then we can use it even in generic calls that aren't always instantiated with verifiable T.,2018,,
ce6df11,When we've got a non-serial Mesh  we should default to non-serial I/O unless the user says otherwise.,2018,,
e99b60e,Adding an extra flag to help oprofile,2018,,
a9e2a05,rbOOmit change: pulled printing out from process_parameters_file and put it in a new function  print_info,2018,,
ac252b4,rbOOmit change: Renamed load_RB_solution to load_rb_solution (for consistency of function names...),2018,,
de581aa,rbOOmit change: rb_solve now returns a non-normalized (i.e. absolute) error bound. Renamed flag return_rel_error_bound to use_relative_bound_in_greedy  and this is only used inside RBConstruction now  not passed to RBEvaluation.,2018,,
b7dc89e,rbOOmit change: Need to set compute_RB_inner_product = true in TransientRBEvaluation ctor,2018,,
9aa57d2,Modifications to ex29 to get it working under Linux.,2018,,
81f20d8,Continuing to implement compute_neighbor_values in DiffSystem framework. Worked on constructors for DiffContext/FEMContext and added neighbor code to FEMSystem::assembly. Cleaned up some dirty formatting.,2018,,
d04dced,Removing mucked up branch,2018,,
221379.0,Removing mucked up branch,2018,,
bb5640b,Creating branch to work on Discontinuous Galerkin in DiffSystem framework,2018,,
a563b6d,Worked on FEMSystem::assembly to add neighbor calculations. Also added a reference to System in DiffContext. Several other changes to implement compute_neighbor_values.,2018,,
f853767,Added element-neighbor cross-terms in jacobian for compute_neighbor_value in DiffSystem.,2018,,
e70475d,edited developers.php,2018,,
8dd9207,Updated djk.jpg,2018,,
f0bd09a,Added neigh-elem jacobian contributions to fem_system.C for use in DG problems.,2018,,
6.789e+81,Renamed some neighbor_ variables to be more consistent.,2018,,
b0c37bf,Create branch master,2018,,
0e3a085,deleted extra branch,2018,,
cf0185c,asserts and const-correctness in NodeConstraints code  disabling an allgather in that code which currently fails badly on ParallelMesh,2018,,
a520054,No need to specify non-basic node iterators,2018,,
a0f9d72,Exposing parallel_n_{elem nodes} to MeshBase users,2018,,
5fd0841,Removing empty/typoed header,2018,,
e2ad2f1,We ought to be able to write Nemesis files from SerialMesh data structures too eventually  if only for testing purposes.,2018,,
c3461ad,"Fix for ""no sidesets"" case",2018,,
12073b7,If we try to write out a hybrid subdomain using Exodus/Nemesis IO that still doesn't support that  we ought to die at an assert which explains that.,2018,,
4afc5a8,Nemesis IO: Handle some empty-vector-producing corner cases,2018,,
61b072a,Implemented some more changes for DG. Notably worked on numerical_jacobians in FEMSystem.,2018,,
ac5c0ec,"Some fixes (but not enough yet  is this even possible with Nemesis?) for the ""writing out Nemesis when you have processors containing no elements"" corner case.",2018,,
4cdb851,That new assertion needs to be less zealous unless we want to forbid Exodus/Nemesis output with infinite elements,2018,,
5a223eb,We need to support separate-file parallel xdr/xda meshes eventually  and here's the API I'd like to use for deciding when to write in parallel vs serial.  Going to have to put implementation on the back burner for a little while  though...,2018,,
56d6720,Added neighbor norm calculations to verify_jacobians. Also added code to constrain neighbor residuals and jacobians (this code may be incorrect  it definitely needs to be double-checked). It appears that the numeric jacobian is not calculation elem-neighbor cross terms. Need to fix this.,2018,,
442af60,Working on fixing numerical jacobian element-neighbor cross-terms. Still needs work.,2018,,
5792cf9,Documentation fix.,2018,,
0b9c6f1,Fixed some issues with numerical_jacobian and neighbor-element cross-terms.,2018,,
21e9b52,Cleaned up some TODOs,2018,,
26b2ce0,"Dispatch to NemesisIO if UnstructuredMesh is asked to read/write a "".n"" or "".nem"" file",2018,,
c9db6d6,Pre-test for all files' existence in the case of parallel mesh files.,2018,,
2ebc4f4,Updated publications for July 2011.,2018,,
f920a9c,EquationSystems::read() modifies only systems in the XDA file,2018,,
6516f1c,allow resticting which variables get output from Exodus,2018,,
d964132,rbOOmit change: Added method to attach a full affine expansion to a RBConstruction object,2018,,
743940000.0,rbOOmit change: cleaned up RBConstruction::attach_affine_expansion,2018,,
2640df3,rbOOmit change: removed RBConstruction::initialize_rb_eval  since it was too focused on the case in which we define an RBThetaExpansion in the RBConstruction and pass it to an RBEvaluation. We often want to go the opposite direction.,2018,,
11177f9,White space in these comment diagrams made vim syntax highlighting think there was an error...,2018,,
ab389a6,Avoid warning about unsigned/int comparison.,2018,,
36e3bc4,Patch from Jed Brown: * Use public Local-to-global mapping APIs,2018,,
89aa9e7,Patch from Jed Brown: * Update for the new XXDestroy() API coming in PETSc 3.2,2018,,
4628991.0,rbOOmit change: Added RBAssemblyExpansion class  analogous to RBThetaExpansion class.,2018,,
c326da8,Patch  mostly from Lorenzo Botti  to allow for FE calculations on sides without using inverse_map in the common cases.,2018,,
4e64b13,ex23 chanage: Cleaned up main function by defining custom RBThetaExpansion and RBAssembly expansion classes.,2018,,
eac2d61,Starting over with DG implementation.,2018,,
8f43264,Removing dg2 branch,2018,,
0720c73,Starting work on DPGSystem and DPGContext.,2018,,
1f93da0,Removed some old work with DiffSystem/DiffContext for DG stuff. The plan is to refactor this into a DGSystem/DGContext eventually.,2018,,
7585ce6,rbOOmit change: changed RBConstruction gram-schmidt to modified gram-schmidt (thanks to A. Gerner),2018,,
7163940.0,Cast to int for comparison with enums so compiler doesn't complain.,2018,,
771cf4a,Read and store node and elem attributes in TetGenIO.,2018,,
d4e22e1,Fixed some minor indentation issues.,2018,,
1caafff,Updated google analytics info.,2018,,
2.6e+107,"Make QoISet::add_index/remove_index behavior consistent with ""indices all start set to true"" behavior",2018,,
9ac5851,Added discontinuous hierarchical finite element: L2_HIERARCHIC.,2018,,
2a95a3b,Utility to renumber blocks/sidesets/nodesets in exodus meshes,2018,,
185360000.0,ExodusII_IO/Nemesis_IO patch for zero IDs,2018,,
8cba54e,Subdomain_id_size is configurable: 1  2  or 4 bytes (default = 2),2018,,
8dc02f3,Disable ex10 and ex24 with parmesh until we've got better parallel xdr I/O added.,2018,,
16ffce0,Changes to GMVIO: * Made GMVIO work with ParallelMesh input via MeshSerializer. * Factored out a bunch of cut-n-paste code into a single function. * Fixed bug in eletypes definition for TET4 writing. * Properly read in elements using node maps.,2018,,
8bed96f,Patch from Boyce Griffith for clean opt-mode compiles if the user has extra warnings enabled.,2018,,
31042a4,Requesting ILU/LU in parallel on the PetscPreconditioner now sets block Jacobi parallel preconditioner + ILU/LU sub-preconditioner.,2018,,
b438ffc,Ignoring generated files.,2018,,
2a10aed,meshid guts don't compile without --enable-exodus,2018,,
e63ccba,Added test_variable functions to dpg_system.,2018,,
f2a8c4d,Documentation update.,2018,,
3867aa1,Print slightly more information when a NetCDF error is raised.,2018,,
bac8fb9,The meshid application can now be used to change the dimension on an Exodus file with e.g.,2018,,
c9c7daf,Fix for --enable-single,2018,,
4f686ab,Flag Fix for Implicit warnings in C++ DBG/DVL compiles,2018,,
6a2d4cc,Removing debug warnings,2018,,
6f4713b,Fix to PHP files  hopefully detect Linux+Chromium browsers.,2018,,
825c1e9,Updated .gitignore for documentation.,2018,,
fd647a1,Do some logging of output functions,2018,,
14fb37a,Minor attempts at optimization,2018,,
23a76f1,A little more perf logging,2018,,
c10aeba,Added entries for examples 28 and 29 to navigation menu.,2018,,
750830000.0,"Adding a user defined hook in Petsc_nonlinear_solver right before ""solve"". This is necessary for setting the ""post check line search"" option and perhaps others in Petsc 3.1",2018,,
d6aa0c2,Adding extra content div's in the header and footer seems to fix the Classes/Namespaces/Files pages and not hurt anything else too bad.,2018,,
85db425,Deleting old trumanellis branch.,2018,,
e20baa8,People might want a user_presolve for non-PETSc-specific tasks too,2018,,
909e8d2,System::point_* should be const.  Also  in debug mode they ought to verify that they're called with the same point on each system.,2018,,
e9addd4,Added L2_HIERARCHIC finite element as a discontinuous HIERARCHIC.,2018,,
dc02a33,Forgot to add header files for new L2_HIERARCHIC finite elements.,2018,,
133351c,Added L2_HIERARCHIC to string_to_enum. Sorry for the partial broken commits  everything should be working now.,2018,,
e6e826a,Avoid unused variable warnings in debug mode.,2018,,
bf8529e,Enable SVN keyword expansion in all files.,2018,,
747a26e,Fix for disabling second derivatives,2018,,
e4aa718,Reverted accidental expanded RCS keyword check-in.,2018,,
34510ea,Fixing Parallel:broadcast of std::set,2018,,
1b8a673,Storing subdomain ids in and XDA solution file,2018,,
3571682.0,Removed old code from previous attempt at building DG into FEMSystem. A better approach would be to inherit to DGSystem. Everything should be clean now.,2018,,
f44eda1,Do not use assign() on std::set - it does not exist,2018,,
86b72cd,Updating Fortran flags for PIC code (shared libraries),2018,,
6a4fc2c,Avoid signed/unsigned comparsion warning  string::find() returns string::size_type.,2018,,
f27a29b,Patch from Vijay Mahadevan updating SLEPc to new XXXDestroy syntax.,2018,,
32e9003,Patch from Vijay Mahadevan adding paths for SLEPc include files.,2018,,
9f0b396,Fix cut and paste bug in SLEPc section of Make.common.in.,2018,,
76a36a6,Don't let arbitrary default values make it into Make.common.,2018,,
442a3c9,Fixing footer/header for doxygen generated docs,2018,,
3bba2f0,Fix regression on SLEPc 3.1.0,2018,,
c2dc2fd,Don't override slepc_common_variables SLEPC_LIB  or linking against SLEPc breaks,2018,,
03efdea,Autodetecting SLEPc on Ubuntu was a feature.  Features are good. Regressions are bad.,2018,,
51d50d2,Unset SLEPC_DIR if default is not found to avoid arbitrary defaults in Make.common.,2018,,
c54d32e,Fixing bug in writing zero-length vectors in XDA,2018,,
228b367,Fixing test for HYPRE in Petsc 3.0 for environments with $PETSC_ARCH set,2018,,
0058b82,Adding support for Trilinos 10.6.4,2018,,
2f1a0a7,updated configure for intel 12.1 - it was being detected as gcc,2018,,
b4bb8f4,fixed broken link,2018,,
e65bfd2,added callback to allow sparsity pattern modification,2018,,
9fbbc83,add ability to get number of linear iterations out of petsc nonlinear solver,2018,,
b95e252,Git rid of Metis warnings,2018,,
c127484,Take CFLAGS from environment  not just CXXFLAGS/CPPFLAGS,2018,,
94ba114,We need to filter-*out* -Wimplicit.  Filtering out everything else instead breaks some configurations when we lose -fPIC.,2018,,
12d53d2,Improving AztecOO solver capabilities,2018,,
257713f,Improving capability of NOX solver wrapper,2018,,
e3513f2,Adding support for Trilinos ML package,2018,,
97bbfb9,Do not try configure with Trilinos 9 if Trilinos 10 found,2018,,
e3ca76a,Implementing get_total_linear_iterations() in Trilinos nonlinear solver,2018,,
87e5cf4,Fix NodeConstraints std::allocator use (and the resulting compilation bug on my MacBook),2018,,
978d9ee,Patch from Paul Bauman for 1D ExodusII output,2018,,
9009394.0,Fix overzealous assert in extract_local_vector,2018,,
bccf707,More debugging output when we try to request a non-ghosted DoF from a ghosted vector,2018,,
a966429,Patch to fix ExodusII error from Paul,2018,,
c6bbc3a,Make it possible to System::init() on an existing system (useful if you want to keep structure but not data) multiple times without ending up with PETSc errors afterward.,2018,,
b078e5f,Added missing header (thanks to Paul Bauman),2018,,
dcb8e17,Avoid signed/unsigned comparison warning,2018,,
c7ccf47,Fix a slight leakage of encapsulation,2018,,
02ed2e7,Use subclass member arrays rather than base class dynamically-allocated arrays for _nodes  _neighbors  and _parent links.,2018,,
b114d16,Support a real interior_parent() pointer on lower-dimensional Elems,2018,,
09d12b1,BoundaryInfo::sync() should build a refined (even adaptively refined) boundary mesh when appropriate.,2018,,
8db5567,Added Elem::which_side_am_i utility method,2018,,
1c2f7f2,Fixes for BoundaryInfo::sync() to refined boundary,2018,,
739472f,Adding Elem::is_semilocal(),2018,,
61f5cbf,Adding semilocal-only Patch construction options,2018,,
bba2ab8,Adding the ability to build side lists from node lists,2018,,
1f779c0,More explicit template instantiation added to fe_map.C and another instantiation added to fe_macro.h,2018,,
2b92fbd,"Adding ""-r"" switch to remove the conftest directory during configure - this is causing errors in OS X 10.7",2018,,
302eb87,Removing trailing semi-colon from explicit template instantiation,2018,,
5d2c2ce,Added comment for GmshIO::read() suggested by Matteo Semplice.,2018,,
ee152b4,Make numerical jacobian utility methods public instead of protected. They're needed by the TBB functor classes I'm about to put in fem_system.C  and there's really no need to restrict them from use by anything else.,2018,,
5748aee,Adding multithreading support to FEMSystem,2018,,
feaec0a,Output better info about parallelism from MeshBase (although we ought to move this elsewhere eventually...),2018,,
355f319,Bandwidth printing should be less misleading when we're calculating bandwidth upper bounds,2018,,
e63271d,Use full precision for FEMSystem::print_* debugging  avoid redundant parallel synchronization,2018,,
53092ba,Access to the global perflog needs to be mutex'ed to be thread-safe.,2018,,
8f6cb20,Add missing header - we weren't building properly with barebones config,2018,,
4a10414,Fix constructor order warning,2018,,
16465d8,Locking libMesh::perflog isn't enough to stop bugs from out-of-order log start/stop commands when multithreading.  Nothing to do for now but turn off the perflog when we're running more than one thread.,2018,,
65b3772,Better fix for PerfLog/Threads interaction.  We were already doing the right thing most of the time  but when the user manually disabled logging we shouldn't have been reenabling it again.,2018,,
cfbed58,Updated publications.,2018,,
9ccd13e,vector::iterator::difference_type doesn't seem to be in Stroustrop  but vector::difference_type is and Portland Group C++ likes that better.,2018,,
61236f7,We can't use -Wno-deprecated unless the compiler supports it. Portland Group C++  in particular  screams and dies if it sees an unrecognized command line option.,2018,,
b805544,Patch from Vijay for SLEPc 3.2 support,2018,,
af2b5fd,Added Abaqus reader.,2018,,
ac3f24d,Use -eps_type lapack for the example SLEPc program  for some reason arnoldi doesn't like our generalized eigen problem when it's complex-valued?,2018,,
475db35,Added <cstddef> to include/parallel/threads_allocators.h. Also  rbOOmit change: Replaced RBSCMSystem with RBSCMConstruction and RBSCMEvaluation classes.,2018,,
ca81171,"Removing unused ""using"" declarations",2018,,
7a61973,- Adding a function to allow for variations on CLI options - Accepting both --n_threads and --n-threads,2018,,
9afe652,Allow Utility::pow<>() to operate on non-Real values too.,2018,,
81dc766,test first time with writing access,2018,,
eefaa3e,Updated ignores.,2018,,
84c4785,Refactoring fe_lagrange.C functions to use specialization instead of instantiation.,2018,,
439168f,Refactoring fe_monomial.C functions to use specialization instead of instantiation.,2018,,
68ebfb8,Refactoring fe_xyz.C functions to use specialization instead of instantiation.,2018,,
487af95,Refactoring fe_hermite.C functions to use specialization instead of instantiation.,2018,,
a8c3d57,Refactoring fe_hierarchic.C functions to use specialization instead of instantiation.,2018,,
023bcbb,Refactoring fe_l2_hierarchic.C functions to use specialization instead of instantiation.,2018,,
9b69759,Refactoring fe_clough.C functions to use specialization instead of instantiation.,2018,,
70c04de,Refactoring fe_bernstein.C functions to use specialization instead of instantiation.,2018,,
2c686b9,Refactoring fe_scalar.C functions to use specialization instead of instantiation.,2018,,
bd7c630,Refactoring fe_szabab.C functions to use specialization instead of instantiation.,2018,,
e71f282,The INSTANTIATE_MBRF macro is no longer necessary  after the FE specialization refactoring.,2018,,
7960b91,Added Abaqus to UnstructuredMesh::read().,2018,,
0c60d61,rbOOmit change: allow training_parameters_random_seed to be read in from file in rb_scm_construction,2018,,
6731a80,Make ex6 write out .e files instead of .exd to be consistent with other examples.,2018,,
cb36398,Refactoring inf_fe_jacobi_20_00_eval.C functions to use specialization instead of instantiation.,2018,,
c5ca15d,Refactoring inf_fe_jacobi_30_00_eval.C functions to use specialization instead of instantiation.,2018,,
057af77,Refactoring inf_fe_lagrange_eval.C functions to use specialization instead of instantiation.,2018,,
5dca71c,Refactoring inf_fe_legendre_eval.C functions to use specialization instead of instantiation.,2018,,
cc372d8,Removed redundant const from protected InfFE::eval() and InfFE::eval_deriv() interfaces.,2018,,
cb95f34,Refactoring inf_fe_map_eval.C functions to use specialization instead of instantiation.,2018,,
769007a,rbOOmit change: updated ex23,2018,,
8ae5a57,rbOOmit: small changes to RBSCMConstruction,2018,,
9dbf061,Fixing memory leak when merging existing parameters,2018,,
d381fe2,Turn on keyword expansion in various new files.,2018,,
e4909a4,Fixing really old bug which always caused 4 distribution factors to be written out for sidesets.  This was crashing some versions of Paraview.,2018,,
24ffa41,Enabling keyword expansion in examples and fixing incorrect hard-coded date strings.,2018,,
5b8494a,Enable keyword expansion in m4 files and fix hard-coded one.,2018,,
c82aea8,SVN Keyword expansion cleanup,2018,,
67c098c,Turned on keyword expansion for .c files as well.,2018,,
7d38ff5,Fixed keyword expansion in example Makefiles.,2018,,
f9d6c15,Macros to make compare_types.h a little more terse,2018,,
b3b5601,Let the user specify that he wants to write Exodus files with mesh.mesh_dimension() rather than mesh.spatial_dimension().  This can be useful e.g. if you know that your 2D mesh lies in the z=0 plane.,2018,,
15958c3,Added Elem::is_linear(),2018,,
e73cdbe,That optimization is allowable for linear shape functions only  not for any affine element!,2018,,
67b28c0,created new directories  include/reduced_basis and src/reduced_basis  and moved all the rbOOmit code into there,2018,,
ef0228c,rbOOmit change: removed build_rb_evaluation from RBEIMConstruction,2018,,
9f5a403,The Laplace mesh smoother does not currently work with parallel meshes.,2018,,
6855093.0,Fix bug with L2_HIERARCHIC on non-simplices,2018,,
1d23ee1,Use ExodusII instead of GMV for DG example,2018,,
7698aeb,Fixed bugs in L2_HIERARCHIC.,2018,,
c627ec2,Reverting Truman's fix  it was redundant after mine,2018,,
6e3914e,Fix based on Boyce Griffith's patch for boundary calculations with shape-dependent quadrature rules or user-specified point sets,2018,,
33ff1ec,Tagged libMesh 0.7.2-rc1,2018,,
48a67e4,Updated CHANGES for 0.7.2,2018,,
9a31fd3,Use sub_point_locator()  not deprecated point_locator(),2018,,
c7dd5e4,Tiny optimization,2018,,
30030fd,Added support for PRISM6/15 and TET10 elements to Abaqus reader.,2018,,
1b955a2,Fix for discontinuous ExodusII output in parallel,2018,,
b280f3c,Fix missing header includes,2018,,
07f0684,"If a ""test_headers.sh"" includes any failures  return a failure code. ""make test_headers"" should now actually fail now when it fails",2018,,
07809bb,Patch from Lorenzo Botti: Avoid unnecessary inverse_map() to get node locations,2018,,
749d109,Tagging libMesh 0.7.2,2018,,
109cc37,Fix libmesh-0.7.2 organization  add libmesh_tests,2018,,
079b2d3,Use one fewer refinements by default for a quick test,2018,,
dd62111,Fix new examples for --enable-complex,2018,,
9e49ab3,Generalize PETSc-specific example code,2018,,
8160c22,Generalize PETSc-specific comments,2018,,
c8f2acc,Some more cleanup of the new examples,2018,,
629852e,The new examples require 2D support,2018,,
08e2bd9,Include header for numeric_limits directly,2018,,
3884f44,If someone tries to load a mesh of unsupported dimension  a sensible error at read time is better than a nasty error during postprocessing,2018,,
7277c9d,Removing DiffContext::request_jacobian - DiffSystem never got around to making it non-redundant or even using it  and the other systems might never want to use it.,2018,,
1eb54e9,Fixing bugs in Exodus writer/Iterators must be used if elements are deleted in the mesh,2018,,
d28e1c4,A few more iterator updates in the Exodus interface,2018,,
ca48d5c,Fixes from Roman Vetter for data imprecision  bugs in VTK output,2018,,
f8d729e,Remove excess chatter from VTK output,2018,,
1f35f72,Added ex28: Subdomain-Restricted Variables  from Ben,2018,,
94cd042,Checking in a major revision to rbOOmit. 1) Added RBEvaluation (and subclasses)  which factors out the parts of RBSystem needed to perform an RB_Solve. 2) Added RBComponent and related classes which allows us to connect RB models together using a substructuring approach.,2018,,
469c37f,small fix for complex number support,2018,,
76ff3125,these rbOOmit classes need some more work first...,2018,,
6c7e250,updated config.guess and support for gcc-4.6,2018,,
951fab2,Fix compilation failures in no-slepc  no-glpk cases,2018,,
4eaedcb,Copy associated BoundaryInfo when copying any Mesh,2018,,
a8d14ca,Changed initialize_calN_dependent_data to initialize_mesh_dependent_data  a more descriptive name. Also  small change to argument list for constructors in (QN)TransientRBEvaluation.,2018,,
8eb53c8,Fix for Tet10::has_affine_map() based on patch from Johannes Huber,2018,,
83d7f94,Patch from Roman Vetter for (serial) VTK output of parallel data.,2018,,
8b4bc0a,Patch based on Vikram Garg's work to enable patch recovery of seminorm errors based on individual gradient components,2018,,
82d895c,Don't let virtual functions get called indirectly from non-leaf constructor.,2018,,
dcbb990,Switch a couple non-adaptive examples to VTKIO now that that works in parallel.,2018,,
7b0273a,Fix for uses of topological_neighbor() that could break down on some partitionings.,2018,,
817d7dd,Checking in David Andrs' changes to PetscVector for detecting whether the type is ghosted or MPI.,2018,,
284c2f6,VTKIO fix for LIBMESH_DIM < 3,2018,,
b420237,PetscVector changes compilation fix,2018,,
f8260e5,"Support PETSc 2.x.x where VecType was #define'd to ""const char*"". This changed in 3.0.0 to be char*.",2018,,
58c9342,Moving some const initializations to headers  and where appropriate changing external to internal linkages - there's no reason not to let compilers do a little better job optimizing here.,2018,,
891da81,Needed to include string.h for gcc version 4.4.3,2018,,
667cb30,Make sure the square of the residual dual norm is non-negative,2018,,
39db53d,Added LAPACK-based svd to DenseMatrix,2018,,
e47886c,PETSc convergence reasons patch from Roman Vetter,2018,,
83755bb,Patch from Roman Vetter (and comments from myself) allowing System::project_vector to handle new element creation,2018,,
8e587c0,Get rid of a magic number  sign conversion warning,2018,,
01e4298,Compilation fix for --enable-complex,2018,,
bf7e16b,In PETSc versions less than 3  don't name input parameter to avoid unused parameter warnings from compiler.,2018,,
ea9f975,We're using std::set in periodic_boundaries.h now,2018,,
56b2826,Make these headers pass the test_headers.sh script.,2018,,
c2e2c8a,Fixed shell coloring for Mac systems  may have been using a linux-specific syntax before?,2018,,
7bc78ba,This class must be #ifdef'd out if SLEPC and GLPK are not available  since it depends on QNTransientRBSystem  which is also #ifdef'd out if those classes are not available.,2018,,
3ddb2e3,Added CondensedEigenSystem  which solves eigenvalue problems with specified dofs removed. This is convenient for solving eigenvalue problems with Dirichlet boundary conditions  for example.,2018,,
3c27f82,Added transpose matvec function to DenseMatrix  with BLAS support.,2018,,
485ecb0,Removed non_dirichlet_dofs_vector from RBSystem  it's now stored in CondensedEigenSystem. Cleaned up CondensedEigenSystem::solve(). Also  we now loop over local dofs in CondensedEigenSystem::initialize_condensed_dofs in order to set up the list of non condensed dofs.,2018,,
4ad02b7,NewtonSolver can exit line search early if it's only looking for finite residuals and it's already got one.,2018,,
bf79775,Fix for iteration count reporting when maximum iteration count is reached,2018,,
5201a8f,Added n_global_non_condensed_dofs() to CondensedEigenSystem.,2018,,
b69bee7,Replaced this->clear() call at end of solve().,2018,,
e79e812,Reverting recent projection change - it was skipping newly added elements  but it was also skipping other elements it shouldn't have.,2018,,
79ea7dc,David added exodus flush commands in several places.,2018,,
908bd0b,Throw an error if the output directory hasn't already been created in RBSystem::write_output_data_to_files,2018,,
4c23b91,clean up compiler warnings based on buildbot feedback,2018,,
51fb57f,clean up compiler warnings based on buildbot feedback,2018,,
5c6ebad,PetscMatrix::print_personal now prints to file when requested (rather than just cout).  The implementation is not particularly efficient (since print_personal gets passed an ostream) but it does work.  And how efficient do you need to be if you are printing out matrices anyway?,2018,,
b32df14,Adjoints examples : Removed some now-redundant casts,2018,,
95e0bd9,Replacing dynamic_cast with libmesh_cast where appropriate - depending on the error checking replaced this will either lead to slightly more efficient NDEBUG runs or slightly more run-time checking in debug mode runs.,2018,,
d17a3ef,Refactoring examples slightly,2018,,
705d65c,Moving libmesh_assert_valid_parallel_ids() to MeshBase - in the long run we might want a SerialMesh implementation of this too  in the short run it makes ParallelMesh testing code less convoluted.,2018,,
ea12407,Use an actual defined FEMNormType in comment...,2018,,
e81014b,fixed colors,2018,,
4467f0f,renamed user-provided function pointers to include _function on the end for clarity,2018,,
0c2f38f,gcc-4.6 syntax clarification suggestion,2018,,
6b7c0ad,svn keyword expansion,2018,,
b72baeb,64-bit tecplot API library,2018,,
65bd8b4,svn keyword expansion,2018,,
5403ce6,Make sure libmesh_cast_ptr() has been defined,2018,,
a6f26a4,Specifying libMesh namespace  we can't guarantee a using statement will precede this file.,2018,,
79271f8,Adding missing namespace libMesh,2018,,
bf80d2c,"Add a ""using namespace libMesh"" to apps for when it's disabled in headers",2018,,
967e4b7,Print more informative messages about which includes are being removed  and use a more consistent/correct method to test-compile the files.,2018,,
3216b91,Get away with only a forward declaration of Partitioner in mesh_base.h.,2018,,
e86f48c,Build debug-only virtual functions even in non-DEBUG modes  or Boyce & John see messed up vtables and strange errors when DEBUG and non-DEBUG object files are mixed.,2018,,
2fc68d0,Use libmesh_CPPFLAGS when building example object files too,2018,,
e16f43d,Fixing Petsc 3.1.0 logic error in libMesh,2018,,
491ea73,"Examples can now be built in parallel with ""make -jN examples"".",2018,,
83eb98c,Added non_dirichlet_inner_product_matrix and an accessor in RBSystem,2018,,
8a21dbc,SparseMatrix::print() can now optionally print in a sparse format.,2018,,
efe9906,Added code to read in the boolean initialize_mesh_dependent_data from file,2018,,
c5c80db,Fix for overzealous assertion that could be triggered on some BoundaryMesh elements,2018,,
08abbad,Re-bootstrapped with newer autotools  so that change won't obscure real changes to follow,2018,,
3269855.0,Added a test for xz compression,2018,,
fd8216a,Support for xz file compression,2018,,
98bc8b0,Provide access to raw SNESConvergedReason from PetscNonlinearSolver.,2018,,
4bbb1b9,Using a virtual method instead of a dynamic cast,2018,,
e2b5765,Use a virtual function rather than a dynamic cast for fix_broken_numbering calls,2018,,
3368add,Elem::side() can return an Elem pointer  since it never produces a DofObject.  This means we don't need a virtual operator== in DofObject since we never need to compare a Node to an Elem.,2018,,
6411f5d,libMesh can now work even when configured with -fno-rtti,2018,,
a944de0,Reverting until John can track down some regressions in INL's tests,2018,,
9033b00,Reinstating Friday's changes  but with the Parameters::have_parameter behavior (in a HAVE_RTTI context) restored to prevent MOOSE regressions,2018,,
31ae4dd,Added fix suggested by Vetter Roman.,2018,,
e93e737,Added a utility for comparing two restart files,2018,,
5d3d53e,Modified the write_offline_data_to_files and read_offline_data_from_files methods in rbOOmit. They now take an extra argument (with default value ALL_DATA) that indicates whether we should write out all the data  or just the basis function (in)dependent subset. Also  the greedy_params vector has been moved from RBSystem to RBEvaluation since each basis is generated with a different set of greedy parameters in general.,2018,,
97fdefa,Separators in ASCII Xdr::data(vector) output,2018,,
ae83615,Semicolons are our friends.,2018,,
12dc3e0,Fixed missing STOP_LOGs in some of the RB classes.,2018,,
403dac9,Added add_vector_transpose to NumericVector  which computes A^T * v,2018,,
65beeb5,Made attach_output virtual in RBSystem.,2018,,
493ef16,Added Jed Brown's patch fixing MatZeroRows for PETSc 3.1.1+,2018,,
bee399b,Jed Brown's updated ISCreateLibMesh patch.,2018,,
33965a5,Forward Partitioner declaration was causing some compiler warnings,2018,,
822ddbc,Fix for error message,2018,,
9ec6f96,Added a short-circuit for RBSystem::compute_output_dual_norms when we don't have any outputs,2018,,
97bad34,Fixing VTKIO memory leak/memory corruption bugs  moving an unnecessarily heap'ed array to the stack.,2018,,
cb8127c,Bugfixes for ParallelMesh  plus a more general correction to the last VTKIO fix,2018,,
0297e9f,object-based assembly etc...,2018,,
8b562b7,Use standard C++ string conversion and parsing instead of the sort-of-standard C functions that were giving Cygwin trouble,2018,,
5a54840,support for object-based QOI functions and derivatives,2018,,
38d9796,still need stdarg.h for variable-length arguments,2018,,
e10d35a,string.h needed for strcmp  strncmp  strlen  strncpy,2018,,
7750ef6,Changed default output data format for RB output vectors  they are now written to a single file outputs.dat by default  rather than to multiple files. The boolean multiple_files_for_outputs in RBEvaluation controls whether we write to a single file or multiple files.,2018,,
bfcfd77,Do parallel_only verification on libMeshInit,2018,,
dece5d1,Revert to strtok_r for now,2018,,
bb601ea,An fopen failure isn't an internal problem to assert away  it's something to always test and potentially throw a file error exception for.,2018,,
059e3ac,setting CC_TRY_LIST and then overwriting it is not a good idea...,2018,,
2b7e018,Replaced usage of strtok_r with std::string operations.  strtok_r is deprecated on some systems and is not available on some flavors of Cygwin.,2018,,
2a8e2de,include <time.h>  this error was discovered on cygwin.,2018,,
48ab641,Some small changes to the RB classes. In particular  made residual_scaling_denom return alpha_LB rather than sqrt alpha_LB  since that is the appropriate default for a coercive problem.,2018,,
1a5ae00,Remember to read comments off of the end of vector<complex> data,2018,,
3f10167,Detect Intel v12 compilers,2018,,
53a64c4,Changed add_new_rb_evaluation_object so that it returns a pointer to the newly added RBEvaluation object.,2018,,
8bc3d84,Disable example VTKIO(ParallelMesh) output until we can get that working,2018,,
ee637d6,Disable adaptive coarsening examples when --enable-parmesh is on until that bug is fixed,2018,,
a75d28a,Bug fixes and workarounds for serial output of ParallelMesh.  We no longer require the user to allgather() by hand  so now ParallelMesh users can use serializing I/O safely and will benefit when it gets more parallelized under the hood.,2018,,
fd15305,MeshData is now libmesh_deprecated(),2018,,
7dc88e4,Bug fix for ambiguous var name,2018,,
9b553c3,Added Parallel::barrier() to synchronize before creating an Xdr object to avoid errors in parallel.,2018,,
a06d489,Fixes for compiler warnings,2018,,
7ea67da,Fixed incorrect if-statement in boundary_id() and boundary_ids() functions.,2018,,
93e75b7,Removed the QNTransient classes from rbOOmit. These classes are too specific to live in libMesh  they should be viewed more as an rbOOmit-based application code. Also  wrapped F_q  A_q and M_q representor initializations in if-tests to prevent potential memory leaks.,2018,,
7cd6c0e,rbOOmit change: Pulled the basis dependent Riesz representors out of RBSystem and subclasses  and moved them into RBEvaluation and subclasses.,2018,,
4d0879d,Cleaned up the code for clearing RB systems. It can mostly now be done by clearing the associated RBEvaluation object  do not need the complicated clear_basis_dependent_data etc any more.,2018,,
4f1d850,Added clear_riesz_representors() to RBEvaluation to clear the Riesz representor vectors used in computing the residual in the RB method. This can allow us to save memory when we train many bases.,2018,,
e0e5e4c,rbOOmit change: Moved Fq_representor_norms from RBEvaluation into RBSystem  since they are not basis dependent,2018,,
582a57b,add callback for extra send_list entries,2018,,
7ca0720,cleanup refinement flags on init and read,2018,,
e1b893b,rbOOmit change: Changed DerivedRBEvaluation so that clear resets residual_type_flag to RESIDUAL_WRT_UBER. This can be important in hp calculations  for example.,2018,,
1da8fb6,Use LibMeshInit,2018,,
a039a2a,System::print_info now outputs some DofMap information about sparsity and constraints,2018,,
f0d00d8,Changed some DenseMatrix methods so they behave with empty matrices. rbOOmit change: Modified the train_reduced_basis method so that it starts with N=0  also had to change RB_solve so it works for N=0  changed default error bound mode to absolute rather than relative.,2018,,
ae0f470,rbOOmit change: added resize_RB_data in RBEvaluation  which clears and resizes all the data that depends on the reduced basis space. This allows us to change the amount of data a given RBEvaluation can hold.,2018,,
9b8ca55,fix newline warning,2018,,
cfbe357,return value warning on gcc-4.1 fixed.,2018,,
2e4be07,If we read system data from a file that has fewer variables than our current system  let's remap that data onto our own variables of the same name.  This enables physics-upgrading restarts.,2018,,
23ff717,Major rbOOmit revision: removed the function-pointer based assembly and replaced it with object-based assembly via RBTheta and ElemAssembly. This approach is much more flexible. Made corresponding changes in ex23.,2018,,
6bde4db,Nemesis reader now reads sidesets.,2018,,
eb2b119,Don't call ex_get_side_set unless there are sidesets to get  otherwise Exodus prints an annoying warning.,2018,,
4fd7960,Fixed overzealous assert.,2018,,
46a0746,Need to also read and write header information in order to do correct basis function IO in RBEvaluation.,2018,,
01fa209,Nemesis now reads nodesets.,2018,,
4c648c4,Only check for PETSC_ARCH (and disable PETSc if not present) in PETSc 2.x builds.,2018,,
ec5cca0,Increment reference counter if the copy constructor is called,2018,,
cc162e2,Call base class copy constructor  otherwise compiler warns in dbg mode...,2018,,
f6a6c0e,Fix for false negatives in Tet::is_child_on_side,2018,,
0e3bc0a,"Exodus files also call Quad4's ""quad4"" in addition to QUAD  QUAD4  and quad.",2018,,
ec81c50,Made the compile line more modular.,2018,,
95a2a09,Nemesis no longer trusts the input file to tell it the mesh dimension... instead it determines that from the dimensions of all the elements it actually reads in.,2018,,
a5c4515,Fix memory leak reported by valgrind.,2018,,
83a87df,avoid cast warning on gcc-4.1,2018,,
330cf38,Derek's fixes for ParallelMesh stuff.,2018,,
dff2f9e,We need to call is_child_on_side() from the parent for it to be correct on tets  due to the diagonal selection trick.,2018,,
c9a868e,Use the correct configure result for xz support,2018,,
bf81bbe,Better (and race-condition-free when two apps read the same zipped file at once...) xz/bzip2 support,2018,,
7e2e6ca,Tagging 0.7.1-rc1,2018,,
1a40b4e,Left pad filenames with zeroes to match nemesis behavior.,2018,,
f7f4054,avoid divide by 0 for explicit sytems,2018,,
1f8f0da,Derek's fixes for --disable-amr.,2018,,
d62bf67,Changes log from 0.7.0->0.7.1,2018,,
3c955a0,Changed plotting from GMV to ExodusII.,2018,,
6b8356e,Revert accidental turning on of verbose mode in Nemesis_IO.,2018,,
6044fd0,Fix for --disable-amr --disable-periodic,2018,,
2a5805c,.) Implemented partitioning for ParallelMesh.,2018,,
8f105bb,UnstructuredMesh does not need to redefine partition() if it does not extend it.,2018,,
f796d95,add ability to insert extra ghosted dofs,2018,,
d2ac2c2,allow for turning off partitioning,2018,,
6.421e+54,We want to use LIBMESH_OPTIONS everywhere - start_in_debugger is nice...,2018,,
a29c0c8,Fix for now-overzealous assertion: we can read_additional_data even on systems with already-initialized vectors.,2018,,
2e05bbd,Disable some AMR-only examples when --disable-amr is used,2018,,
f7ef34d,Fix for inefficient send_list bug with --disable-amr,2018,,
16dd5e2,Some more flexible quiet/verbose options for DiffSolver,2018,,
88914de,remove debug printing,2018,,
d379d19,actually implement BoundingBox::intersect(),2018,,
50a0d9a,Fix for PointLocatorTree application to non-planar 2D meshes,2018,,
657f732,Don't call redistribute  etc. if this is actually a serial mesh but libmesh was configured with --enable-parmesh.,2018,,
9da87ec,Fix global Parallel::set_union() implementation,2018,,
33d27cc,Fix for how-the-hell-did-this-compile-for-me error in global Parallel::set_union,2018,,
92f5e64,Handle repartitioning of fewer-elements-than-processors non-serial meshes,2018,,
b25ee68,Need to disable ParallelMesh non-serial repartitioning for 0.7.1  it'll need a lot of work before it works with refinement.,2018,,
24dfff7,Fix test for std::hash,2018,,
d6c1f84,Don't catch exceptions in ex26/ex27  we don't expect convergence failures but we do expect possible logic bugs when developing,2018,,
867d856,Make sure parallel_only() failures occur at a libmesh_assert() which gives us a nice stack trace  not at a weird internal MPI buffer size mismatch error.,2018,,
9525ee6,Adding Elem::replace_child  to make ParallelMesh modification code easier,2018,,
60053b0,Partitioner::partition is parallel_only(),2018,,
aae76ee,prepare_for_use() is parallel_only,2018,,
cb91480,Copy constructor bugfix  extra assertions for ParallelMesh,2018,,
bdd8aed,Bugfixes for ParallelMesh copy constructor,2018,,
f2f70f7,Fix for SerialMesh::delete_node(),2018,,
1b89174,Fixes for ParallelMesh::all_first_order().  Not good enough to make plot_error() work with a non-serial ParallelMesh  but we're getting closer...,2018,,
3867ee6,Update libmesh_example_asserts for PETSc-only code,2018,,
75b9641,TypeVector with LIBMESH_DIM < 3 no longer mollycoddles weak code.,2018,,
908c9f7,Many library changes to optimize  and conform to new stricter --enable-2D-only TypeVector behavior,2018,,
5951497.0,really fix BoundingBox::intersect(),2018,,
2b6db26,Fix that BoundingBox::intersect test for LIBMESH_DIM < 3,2018,,
405c172,"Make ex1 -o option more robust  actually test it in ""make run"".",2018,,
66ea92c,add BoundingBox::contains_point... taking into account Roy's changes to intersect,2018,,
ad7944e,Cleaned up and clarified a few comments,2018,,
a540f5b,Add some comments to remind us about a thread safety gotcha when we multithread these loops,2018,,
6ae8bd3,Fix and API change to make MeshBase::point_locator() thread-safe,2018,,
f803303,We can't always link examples until the library's been built,2018,,
711c299,Efficiency improvements (and a few const-correctness improvements) for periodic boundaries code,2018,,
148bcd2,A slightly lower tolerance still gives good default results,2018,,
3a490e4,Restoring (deprecated) point_locator() for backwards compatibility  new thread safe function is now sub_point_locator(),2018,,
a4f4b9f,Tagging libMesh 0.7.1 (hopefully final),2018,,
a1d1750,changed all PETSc CHKERRQ calls to CHKERRABORT.  This solves the problem of returning from void functions.  CHKERRABORT also calls MPI_Abort after printing a diagnostic error.  Consequently  all PETSc errors are treated as fatal.  This was the original intent  but CHKERRQ was the only documented function  so that is what I used.,2018,,
ab5cec7,It seems that the HP-UX compiler needs the full name (Base::...).,2018,,
7788809,added the XYZ finite element type.  This is similar to the monomials  except the shape functions are defined in terms of physical coordinates.  This requires a slightly different approach for reinitialization  so the class has some additional specialization.  The FEBase/FE relationship is growing complex  however  and will likely change in the future.,2018,,
5adf203,Added Daniel's and my project pages to the applications.,2018,,
8a84a1e,Added a cholesky factorization routine to the DenseMatrix class. For SPD matrices  Cholesky factorization is supposed to be faster than straight LU.,2018,,
2d3a7d9,changes from the laptop I forgot to check in...,2018,,
142b1a2,compatibility fixes for gcc-3.0,2018,,
96486e5,Made the A(i i) > 0 check in _cholesky_decompose ifdef to build the library when option complex is enabled. Take care when using this with complex numbers.,2018,,
5740992,Changed two lines which made and returned a std::pair to instead use std::make_pair.,2018,,
b6f7791,fixed a typo in a comment :-),2018,,
e02ed32,factorization must be recomputed after a matrix is zeroed or resized  so the factorization flag must be reset.  Ideally  the flag would get re-set after any non-const write access  but that would cause unnecessary overhead.,2018,,
057016c,OK  now elements and nodes get numbered in a rational way when there was no mesh refinement.  This will correspond to their original position in these vectors  without messing with any trimming,2018,,
3033687,Changes for HP.,2018,,
4de153b,Changes for HP.,2018,,
4816e20,added a rhs to the ExplicitSystem,2018,,
7de9cee,Fixed DenseMatrix::zero.,2018,,
e94d9e0,moved rhs from the ImplicitSystem to the ExplicitSystem  now the ImplicitSystem is derived from the ExplicitSystem,2018,,
a5e5078,modified xdrIO to accept id and title strings longer than 80 characters,2018,,
29b56ee,Added an iteration count and final linear residual value tothe implicit system class.,2018,,
050e2b8,configure fixes  do not build parmetis without a valid MPI installation,2018,,
8ce82cf,configure fixes for Solaris.  Need to use different linking options,2018,,
f6b4dd2,configure fixes for Solaris.  Need to use different linking options,2018,,
df95f14,it is not sufficient to check for the existance of rpc/rpc.h and then infer XDR support.  We now check for the availability of xdrsdtio_create  which should be sufficient.,2018,,
0b677c4,forgot this...,2018,,
3123367,syntax error caught on the SGI,2018,,
0c66a9b,Fixes for compatibility with the Sun ONE Studio compiler,2018,,
60ed03d,added optimize flags for Sun C++,2018,,
950b40e,upgraded Metis and ParMetis to v3.1  which was released in August 2003.,2018,,
efb0d1e,removed an inline that caused problems for Solaris,2018,,
d1e7ded,added Sun compiler to supported list,2018,,
31907c8,change the Laspack interface to call the solvers with a 0 initial guess.  this is necessary in the case of exampe 13 to keep the solver from exiting in 0 iterations.  WHY??  This should be fixed...  I have looked at the code but do not see an obvious problem...,2018,,
e07c147,fixed min for complex,2018,,
ac84756,Removed some unnecessary headers and used std::make_pair instead of building a pair and returning it in two separate lines.,2018,,
cb4c9e1,Used std::make_pair in return statement and fixed a documentation bug.,2018,,
232d129,Changed dynamic casts of references to be dynamic casts to pointers.  This allows simple error checking by comparing the resulting pointer against NULL.  When casting references fails  a std::bad_cast exception is thrown  however  all exceptions are in general ignored by the library.,2018,,
522b527,Changed several of the MeshBase::write_* and Mesh::write_* methods to be const.  Having some difficulty with the xdr and unv formats since they are implemented in terms of the FooInterface objects which expect to be able to read OR write.  Thinking about whether or not its worth messing with.,2018,,
0e5fc6f,Made the write_diva methods const by changing BoundaryInfo::sync() to a const method.,2018,,
28297b7,Fixed mainly documentation typos.  Also decided that  although BoundaryInfo::sync() can technically be made const  it is not strictly a const function since it *does modify* the mesh which contains it. Specifically  it sets the subdomain_id for some elements on the boundary. The result is that write_diva() back to non-const for now.,2018,,
5c4b2ea,Minor cosmetic changes to the predicated_iterator class.,2018,,
9072a20,added the MeshIO class to encapsulate mesh/soln read/write operations and get them out of the Mesh class.  I have already converted UNV  UCD  and Tecplot I/O to this new format and will continue with others incrimentally.  All should feel free to convert any existing format they might want to...,2018,,
beb6141,removed cvshtml,2018,,
ee4ec5f,Ported the Diva writing code to the new MeshIO format.  Does this even work anymore?  I bet she has long since changed her format!.,2018,,
4e4029a,added GMVIO  changed all the examples to use it.  Still need to roll in write_discontinuous_gmv,2018,,
c76468c,fixed the const_elem_iterator  const_node_iterator and friends to have the intended behavior (i.e. treat the returned Elem and Node as const),2018,,
ce692dd,fixed the const_elem_iterator  const_node_iterator and friends to have the intended behavior (i.e. treat the returned Elem and Node as const),2018,,
71d51a2,fixed the const_elem_iterator  const_node_iterator and friends to have the intended behavior (i.e. treat the returned Elem and Node as const),2018,,
d2f42e7,removed stray here()s,2018,,
151c9c8,xlC fix,2018,,
70e63f7,more fixes for the iterators,2018,,
0cb82fa,Made a few methods in MeshCommunication const and introduced the first use of the mutable keyword in the library to allow the operator() method of the point_locator_* classes to be const. If mutable causes a difficulty for your compiler  please let me know and I will undo the change!,2018,,
419771e,fix for for ex12,2018,,
67ae721,Added a non-const const_elements_begin() function to the MeshBase class.  The reasoning behind this is you may want to enforce const iteration over the elements of a non-const Mesh.  Changed a few places in the code to use this new function.,2018,,
ebcef0b,cleaned up the trees a bit and added an option to create a tree from the elements directly  bypassing the nodes.  The obvious extension (that I have not made yet) will use the trees (and PointLocators) to find not only elements but also nodes.  Incidentally  the motivation for this was reading a structured surface mesh with a singular axis that contained a number of points at the same physical location in space.  When the target bin size for the tree was less than the number of coincident points an infinite loop was created...  Charming.,2018,,
e3a6962,Created a MatlabIO object to handle reading meshes generated in the pdetool program  and removed the previous read_matlab() routines from the MeshBase class.  Also removed the generic read() and write() routines from the MeshBase class since they were not being used and consisted of error messages only.,2018,,
780a9c2,Added an OFFIO class for reading standard OFF OOGL format.  Removed corresponding functions from the MeshBase interface.,2018,,
321ad52,Added the ShaneeIO class for reading old school shanee meshes from the precursor of libmesh.  Removed corresponding functions from MeshBase and removed the file mesh_misc_support.C,2018,,
0f04816,Updated dependencies and removed some unnecessary includes.  I did not test extensively on many systems  so sorry if it breaks something for you :(,2018,,
4c0d0cf,Fixing more unnecessary header file dependencies.,2018,,
3700fac,Tried to remove a lot of unnecessary header files. For some reason math.h was included in many places but as far as I can tell you only need it for sqrt  fabs  and maybe pow.  If that is not the case  I can fix it.  Also started commenting the reason for inclusion of standard header files  e.g. #include <algorithm> // for std::sort and the like.  Not including C++ header files speeds up compilation times a bit.,2018,,
a7c416c,Added a doxygen update run before the main documentation making command.  Have not tested.,2018,,
9f37a30,The build process now checks to be sure $PETSC_ARCH has been set as well as $PETSC_DIR.  If PETSC_ARCH is empty then PETSC is configured off and a message to that affect is printed.,2018,,
6ba43e1,Made the BoundaryMesh a subclass of the Mesh instead of MeshBase  so that it can have write functionality.,2018,,
b11e48d,changed the MeshIO class to be templated on the type of mesh to write.  Previously it expected a Mesh  but this precludes writing a BoundaryMesh since it is not of type Mesh. Writing the boundary mesh now works again in meshtool,2018,,
ef9c3c7,Changes for complex.,2018,,
9c2aa41,updated compiler flags for Itanium (ecc),2018,,
6b089fa,changed configure to work with libmpi.so on the Altix,2018,,
3378303,Some changes to make the PointLocater work more safe. Also changed some asserts to match with tolerances given in some methods.,2018,,
bde3932,Added ifdefs for infinite element calls.,2018,,
e4739a0,fixes for PETSc 2.2.0.  SLES has been removed from PETSc  the functionality has all been rolled into KSP.  I guess we should support 2.1.x and 2.2.x for about a year and then drop 2.1.x.,2018,,
3b5cc78,Added operator << functions to all the classes which had print_info() members.  Now you can do: Mesh mesh(2)  std::cout << mesh << std::endl  That is equivalent to: Mesh mesh(2)  mesh.print_info() ,2018,,
a8cca45,Rebuilt the ex1 program documentation.,2018,,
7f74afe,Added a script which creates all the examples documentation at once.,2018,,
5aa2259,Updated the example documentation (excepts examples 6 and 7) since I did not have a build available with complex numbers or infinite elements.,2018,,
342d0d3,Fixed bug with program2html.pl which prevented some include files from showing up in the docs.,2018,,
489c7d5,Fixed small documentation bug which caused some header files not to show up properly.,2018,,
a297549,fixed GMVIO for the Altix,2018,,
038048d,made MeshBase::prepare_for_use() public.  This is useful for creating a mesh directly with add_point() & add_elem(),2018,,
59e50f2,added operator() to the tree.,2018,,
001413e,only print warning message about curious point location if in secure mode,2018,,
fea6606,updated support information for the Altix,2018,,
6749923,added a link for the NASA/JSC seminar presentation,2018,,
775f3cc,fixed for PETSc 2.1.x configuration,2018,,
6ed3f23,PGI compiler flag fixes,2018,,
bd468d0,Fixed UNVIO for some 3D elements.,2018,,
ce286df,Fixes for GCC 3.4.0.  The biggest thing is that when a class B is derived from a partial specialization of class A then data from A will not be visible in B without using this->.  Also  no longer try & build a partitioner factory in the lib  portability is a nightmare.,2018,,
d0cc62e,Added my old USNCCM VII presentation.,2018,,
6971cee,Added a presentation on scraper flow to the presentation page.,2018,,
01d0d2d,Added the Albuquerque Academy presentation.,2018,,
2b0278e,Added support for some methods of TetGen 1.3 library. To make use of the functionality added  the environment variable TETGEN_DIR must be defined and libMesh must be configured with option --enable-tetgen. Note that the support is for version 1.3 which should be available soon. Also added ASCII output for medit file viewer (www-rocq1.inria.fr/gamma/medit).,2018,,
73fe256,Fixed a few bugs in assert() statements and removed some unused variables.,2018,,
bb595dc,fixed a typo,2018,,
d2d8896,added some comments on TetGen routines,2018,,
0efbaea,The partitioners now set a new variable in the Mesh called _n_parts.  This variable was needed since n_subdomains does not map directly to the number of partitions created when using partitioners  and neither does n_processors() since you may partition a mesh on one processor if you wish.  Therefore the partitioners all set the new variable _n_parts in the mesh to allow for this possibility.  The GMV routine now allows you to plot (without error messages) the different partitions of the grid.,2018,,
daa58e7,added optimizations for computing edge data in the case of XYZ finite elements,2018,,
e86b734,Fixed a small bug where if no linear solver packages were defined  there was a compilation error.  This was due to auto_ptr.h not being included properly in that case.,2018,,
bea2e72,Changed stokes_system.solution to stokes_system.current_local_solution.,2018,,
34745a1,Changes for complex variable compatibility.,2018,,
6ac0563,Fixed bug in error_vector.C where it returned 1e+30 for a vector of all zeros.,2018,,
2f6f440,Minor changes to get rid of some warnings.,2018,,
8f4f565,Removed tetgen triangulate methods from MeshBase. Use e.g. TetGenMeshInterface tegen (mesh) tegen.triangulate ... to make use of the respective functionality.,2018,,
9609499,Ups  removed changes I accidently committed a few minutes ago.,2018,,
fe6d847,Parmetis got commented out?,2018,,
7fc55c4,FEXYZ shapes do not need reinitialization at each ::reinit() step,2018,,
c07abb2,Comitted some changes from Florian.,2018,,
4b62c08,Made the ErrorEstimator class a base class for the specific KelleyErrorEstimator implementation.  This allows us to derive future ErrorEstimators from a common base class.,2018,,
10d6909,Added Example 14.,2018,,
79abd10,Updated the examples Makefile to include example 14.,2018,,
7b743a6,Updated the dependencies for ex14.,2018,,
bbafc00,"Fixed a name resolution issue in the error estimator classes which was caused by attempting to overload a pure virtual function and call the overloaded version from a subclass.  Wolfgang told me about the ""using"" directive.",2018,,
d92ad9a,Updated the keywords generation script for emacs.,2018,,
316966c,Updated the example documentation on the web.,2018,,
2cd27cd,Fixed misspelling everywhere of Kelley -> Kelly.  I blame this on a presentation by Mike Anderson where he misspelled it!,2018,,
33b05d5,Added example 14 documentation and updated ignore file.,2018,,
c899dbb,Added QUAD9 support  scalar output,2018,,
9f256cf,Changed string to std::string in one place.,2018,,
abd5531,Checked in the beginning of the ExactSolution class.,2018,,
ca83880,Added ex14 to its ignore list.,2018,,
fc61523,Ignore tecplot .lay files.,2018,,
6e36e97,Updated ex14 to compute the error between the approximate and exact solutions.,2018,,
5af79ce,Working on the ExactSolution class.  It appears to be somewhat functional  though it is not yet working in parallel I dont think.,2018,,
e3e5ea5,Removed a stray code fragment.,2018,,
855649d,Modified the 14th example a bit more. It is now possible to investigate both adaptive and uniform refinement within the same code  simply by changing the input file.  The adaptive scheme achieves better error reduction in general than the uniform refinement scheme  but both have strange rates  possibly due to the singularity in the solution derivative.  Note: still need,2018,,
55c9c73,Some changes for complex number support. libMesh now compiles with --enable-complex  but I still have to check ExactSolution for complex numbers a little more carefully.,2018,,
c9ae0df,Added a comment to the system projection code which explains how to skip non-LAGRANGE elements but does not change the existing code.,2018,,
194a2bc,Updated ex14 to have more options user-selectable from the input file.,2018,,
45a3847,Updated the EquationSystems and System classes to be able to return the number of active dofs  which is defined as the total number of dofs minus the number of constrained dofs.  Also parallelized the exact solution class.,2018,,
3672669,added initial support for the patch recovery error estimator,2018,,
feeacce,syntax,2018,,
bfbcc42,Added a function to remove certain elements from a mesh. We needed something like this to get rid of some face elements after generating 3d meshes with e.g. TetGen.,2018,,
a3c20a8,changes for complex.,2018,,
85d47b0,moved all gmv support into GMVIO  added proper coupling between discontinuous basis functions in the DOF map.  Note that this will over-allocate memory for the Q2P-1 LBB stable element which has no inter-element coupling for the discontinuous pressure,2018,,
8a03a6d,Adjustments to TetGen 1.3 release.,2018,,
4458578,Added a virtual destructor.,2018,,
ccf40ad,GCC 3.4.1 complained that almost all the variables from the FEBase class which are used in this file were undefined.  Adding this-> seemed to clear up the problem  which did not exist for any other files.,2018,,
4601367,Change for GCC 3.4.1 debug mode.,2018,,
7bf9640,Changed ex4 to allow the setting of the problem size on the command line.,2018,,
7f45f5a,Added option for non-glx gmv.,2018,,
244d5f7,Preliminary support (2D only  read only) for GMSH file format added.,2018,,
4859f74,Reworked the tecplot_connectivity() and vtk_connectivity() functionality in the Elem class and all subclasses.  They have been combined into one function called connectivity() which should be extensible for new IO packages such as GMSH and DB Explorer without changing the interface of the Elem class. Sorry for the wicked recompile.,2018,,
60b8fdf,Added enumeration file for IO software packages like Tecplot  GMV  etc.,2018,,
a69c50d,More changes for the connectivity routines in the Elem class. Now there are no longer separate functions for write_ucd_connectivity and write_tecplot_connectivity. They have been combined in the more generic write_connectivity routine.,2018,,
28fb3bf,Fixed some old code where instead of references to vectors  we were passing actual vectors.,2018,,
21befbf,Minor changes to documentation only.,2018,,
8a93dfb,Working on removing unnecessary #includes to reduce compilation dependency..,2018,,
0f51ebb,Needed read access to some derivatives.,2018,,
b101c65,"added #include \""libmesh_common.h\"" for assert",2018,,
894414d,replaced find with std::find  added #include <algorithm>.  How has that not been caught before?,2018,,
12964cd,This commit was manufactured by cvs2svn to create tag 'libmesh-0_4_3-rc1'.,2018,,
521380d,Changed the tegen configuration slightly to be like the rest of the libraries in aclocal.m4.  Also removed dependency on stdio.h.,2018,,
f76bd6a,Removing unnecessary includes of <stdio.h> as well as documenting why it is necessary in cases where it is.,2018,,
82bd273,Improving the binary functionality for GMV so that it is more portable and less ugly.,2018,,
5eed4a1,Fix for GCC3.4.1 not liking zero element array access for empty arrays.src/utils/xdr_cxx.C,2018,,
0d41218,Apparently it was possible to remove the <iostream> inclusion from libmesh_common.h.  This should result in a little less unnecessary inclusions of the standard header files.,2018,,
400fe5c,Added #include <assert.h> in several places where it was originally not needed since <stdlib.h> was already included.  Library compiles under AIX 5.2.0.0.,2018,,
6d1d50e,Updated the .depend file for the library.,2018,,
303663f,added the script create_libmesh_release to facilitate creating & tagging CVS snapshots for release,2018,,
2c00626,added #include <assert.h> to libmesh_common.h  removed it from others,2018,,
0facff4,Added new USER_PRECOND type,2018,,
057e458,Added some additional documentation to the solve member.,2018,,
e601d54,Added matlab printing capabilities (for PetscVectors) in the NumericVector class.  Also the create_subvector routine was added.,2018,,
c47015e,Generalized the PetscInterface solve member  to allow it to take different matrices for the system matrix and the preconditioner.  Does not affect existing code.,2018,,
0a062b8,Added additional constructor for building PetscMatrix objects from existing PETSc Mats  also added the _get_submatrix() routine which uses PETScs MatGetSubMatrix() function to extract submatrices.,2018,,
3c20731,Added the create_ and reinit_submatrix() functions to the sparse matrix base class  as well as an error function if this functionality is attempted to be called from the base class.  There may be something similar for Laspack  I dont know.,2018,,
0aae1a3,Added additional constructor which takes a PETSc Vec object  as well as the create_subvector functionality.,2018,,
c619015,Added virtual destructor  this class may be derived from in the future.,2018,,
0c50ba4,updated documentation for Sun,2018,,
42a990a,Fixed op= bug which should never have compiled.,2018,,
b11a3d9,work-around for compilers (like Intel icc v8.x) that pretend to be gcc,2018,,
9ba63c5,changed outdated comments,2018,,
d52efb6,Changed header of xdr files to write 0 for the number of additional vectors when write_additional_data is false.,2018,,
6cf09c3,Added ibm to ignore list.,2018,,
f63181d,Added a make target to link the examples (no run). Also  the PCMAT preconditioner was apparently not available in Petsc 2.1.1  so I added preprocessor macros to prevent compilation in this case.,2018,,
919998c,Final reworking of the System IO stuff.  Problem should be solved with the addition of one more boolean flag to the system class.,2018,,
aa0fdb6,fix for PETSc 2.2.1 courtesy of Martin Luthi,2018,,
c0ab3b2,configure option --enable-mgf-workaround is deprecated.  use runtime  command-line option --enable-mgf-workaround instead.,2018,,
a4f8bea,added Bills perl script to convert an XDA mesh to an MGF/ASCII mesh,2018,,
c21332d,added CVS tags and emacs local variables to force perl mode,2018,,
4424e3d,patches from Bill for writing MGF-style xdr meshes,2018,,
4c9ff01,fix for ex8 run-time problem  but will not pre-allocate enough matrix storage for discontinuous elements,2018,,
ca9a09a,compile fixes for Solaris,2018,,
7506826,added PltLoader class to read Tecplot .plt files,2018,,
e862833,allow users read-only access to the data vector,2018,,
8126d6b,made the DenseMatrix.condense() member more generic and extended it to the DenseSubMatrix,2018,,
0effe18,allow the preconditioning matrix to be different than the system matrix,2018,,
029c3a1,Apparently it is more correct to use ios::sync_with_stdio() than ios_base::sync_with_stdio() since that function wasnt always in the base class.,2018,,
ee6c3b3,For some reason  GCC 3.2.3 requires std::ios::scientific instead of std::scientific.,2018,,
ec8a556,Fixed the link target for the examples.,2018,,
3d12c1c,Added const qualifier to one of the add vector routines (add the product of a sparse matrix and a NumericVector to a distributed vector.),2018,,
45cb166,Added the shell preconditioner type  only makes sense for PETSc.,2018,,
1f094f7,fixes for the Altix with Intel/icc v8.1,2018,,
81c72ca,further propagation of the const SparseMatrix<> change in the add_vector() member,2018,,
2dff477,allow for user-specified TetGen installation,2018,,
0a5307d,avoid hiding inherited vars,2018,,
be12067,added missing return value,2018,,
16bf883,added missing include,2018,,
a40f928,Made unnecsseary change due to accidently compiling with gcc2.96. doh.,2018,,
6531331,Oops  should have checked this in along with the header file.,2018,,
f58c8a8,Changed error message to print the entire thing to std::cerr,2018,,
069fa64,64-bit fix,2018,,
c042c77,fix for PETSc 2.2.1,2018,,
d8dbdef,Made op() code backward compatible for PETSc 2.1.X versions.,2018,,
4fd19fa,Removed extra commas  which are errors if you are in pedantic mode.,2018,,
a511a26,various PETSc  64-bit fixes.  updated config.{guess sub},2018,,
d97ee7b,replaced std::endl with \n in all file IO and stringstreams.  std::endl forces a flush  which kills performance on some machines,2018,,
4e75ad1,The print() function is now generalized to take an arbitrary stream instead of just std::cout by default.,2018,,
b7748e4,Added <iostream> header file.,2018,,
4190380,Making print() functions more general by allowing them to work on arbitrary streams instead of just std::cout,2018,,
2817c80,Oops  forgot to check in PetscInterface header file.,2018,,
8af9d77,MIPSpro config updates,2018,,
715095c,MIPSpro config updates,2018,,
e3b354c,fixes for IRIX 6.5/MIPSPro 7.4,2018,,
d1d44a7,Added a forward declaration and some strange syntax to fix up template member friend function.,2018,,
aeff93c,fixed for MIPSPro,2018,,
911a8fc,fixed an error in the Laspack csr implementation  no longer zero the system matrix before it is closed in the NewmarkSystem,2018,,
5bedeff,GCC complained about using a possibly uninitialized variable.,2018,,
1144f52,Added MPI_Abort to the error() macro.,2018,,
353f7f9,Fixed bug in HEX27 embedding matrix.,2018,,
2b1647c,added -ftz for Itanium2,2018,,
64e61b7,removed the side_children_matrix stuff since it is no longer used,2018,,
1d438f9,This commit was manufactured by cvs2svn to create tag 'libmesh-0_4_3_rc2'.,2018,,
08682e5,Generalizing more print functions to print to any stream rather than just std::cout.,2018,,
94883ad,You have to sync_with_stdio _before_ redirecting std::cout to NULL in parallel cases.  Otherwise  you will get np copies of every message.,2018,,
fe1bec6,Removed the MeshData class from the MeshBase class.,2018,,
a99f13d,fixed the Factory<> class.,2018,,
f97cb43,fixed the Factory<> class.,2018,,
d799f57,fixed the Factory<> class.,2018,,
8ac9bd7,added Tecplot API for Linux on Itanium chips,2018,,
53d47ae,removed the print-only-once logic from the ReferenceCounter,2018,,
5bf0b87,should fix Debian complaint,2018,,
5286cb6,fixed a couple of broken links  fixed the TetGenInterface to handle MeshData external to the Mesh class,2018,,
b441b0c,fixed a couple of broken links  fixed the TetGenInterface to handle MeshData external to the Mesh class,2018,,
cb4c42c,changed the static Elem::build and Node::build members to return an AutoPtr<> instead of a naked pointer.  This way the methods can be public and someone *really* has to try to leak memory,2018,,
ce47c40,removed unnecessary xlC AutoPtr<> ap  return ap  workaround since the current xlC on longhorn is OK with this,2018,,
76cc56a,scratch that xlC change...,2018,,
d144690,include mesh.h instead of mesh_base.h,2018,,
60c4255,added another option for distributing DOFs.  This is a placeholder for now,2018,,
7b08e35,Currently no deed for a MeshData in the tetgen interface.,2018,,
20fd155,added a command-line option to change the way degrees of freedom are numbered  fixed the Adaptive<> solver to work with the new ErrorEstimator class structure,2018,,
bcaa60c,cleaned up the DOF constraints code a little bit.,2018,,
ef160c1,changed DofMap::build_constraint_matrix to be more efficient in the (usual) case that the element has no constraints.  Also fixed for the case that an element has constraints in terms of its *own* dofs  (not others),2018,,
a857ecb,final changes to enable mgf mesh output,2018,,
b0060b9,commented out offending lines broken by somebody elses recent changes,2018,,
f0f9978,Added a MeshData pointer to EquationSystems.,2018,,
a872441,Fixed one line for proper .xda output.,2018,,
f7c7dc7,Reworked the element and node iterators used in the mesh class.  Many files changed  see devel mailing list for description of changes.,2018,,
9332526,Added source code file for the mesh iterators.,2018,,
a51d467,Added license information to new files.,2018,,
48d90b2,Fixes for FrequencySystem.,2018,,
6909240,Fully qualified class names as required by Sun C++ v5.5,2018,,
d6b51ba,formatting changes,2018,,
40e6d62,updated .depends,2018,,
7eb108a,more fixes for first (broken :-) fixes for the Sun,2018,,
1f72530,final fix for the Sun  I hope...,2018,,
8803ffb,In the delete_elem function  removed the line which called erase on the iterator to avoid invalidating iterators. Also explicitly NULL the iterator which has been deleted so we know to skip over it during future iterations!,2018,,
ede6def,Rewrote most of the TetGenMeshInterface.  It is no longer a friend of MeshBase  and should generate more useful meshes (Elems have valid ids) now as well.,2018,,
f215abb,Removed dangerous strdup command (memory leak!) and made several functions take const arguments.,2018,,
10c9bfd,Updated the examples.,2018,,
c822b79,Moved the ExodusII and XDR I/O implementation into ExodusII_IO and XdrIO  respectively.  These classes conform to the MeshIO<> interface.  All the I/O implementation should now be separated out of the Mesh/MeshBase classes.,2018,,
602f07d,Moved the build_inf_elem functionality to a separate class of its own.  Now if you want to build infinite elements on top of your mesh  you must construct a InfElemBuilder object  and call the same functionality as before.  See ex6 for details.,2018,,
eed73e0,fixed XdrIO for the case of complex data.,2018,,
e19f874,fixed XdrIO for complex data,2018,,
2fc70c5,fixed configuration flags for Intel ICC v8.1,2018,,
4a62b8f,libMesh now works with gcc 4.0 (latest CVS),2018,,
36e8d33,fix for solaris,2018,,
9543707,Also reset number of partitions to zero upon call to mesh.clear().,2018,,
c089c62,Removed elem.h dependency from mesh_base.h by making the delete_elem function not inline. Now we can get away with forward declaration.,2018,,
a1c70ad,Forgot one place where #include elem.h was needed.,2018,,
9dce1a7,merged new GMVIO implementation.  right now the old implementation is used.,2018,,
b22ae29,Moved an #ifdef.,2018,,
44b9a39,added the MeshTools namespace  starting to implement the Side<> class,2018,,
9d6041d,added the MeshTools namespace  starting to implement the Side<> class,2018,,
82ee4cc,Commented out unused variables.,2018,,
c9c9471,split the MeshIO functionality into MeshInput and MeshOutput,2018,,
8af5846,fixed perf_log call,2018,,
0c49c6e,fixed perflog for real this time...,2018,,
52ae433,added --enable-everything  fixed another perflog issue  started the Parameters class  but needs work.  configure no longer aborts when it does not recognize the compiler  but rather issues a warning that the user will need to manually set the compiler flags in Make.common,2018,,
9a0967e,recognize the Cray C++ compiler,2018,,
54d361c,recognize the Cray C++ compiler,2018,,
43387ab,Moved the all_tri() function to the MeshTools::Modification namespace. Also added the SideIter class as nested class of the Elem to allow for iteration over the sides of an element.  This code is not extensively tested yet  and is not used anywhere yet.  More to come soon.,2018,,
be70d67,fixed warning on some platforms about comparing a negative constant to an unsigned variable,2018,,
24acb1f,Added exact coefficients for moderate degree triangle quadrature  numerical coefficients for high degree quadrature,2018,,
fb415b4,added NumericVector<>.insert() methods,2018,,
cb91d3e,Now using element ids instead of element memory addresses to test cache validity,2018,,
e90a18e,Fixed 6/7th degree triangle quadrature rule weights,2018,,
3dc4421,Clarify floating point vs. integer arithmetic,2018,,
1e47b27,Fixed a bug in getpot.h when evaluating an division string.  The first argument in the denominator was skipped.  Also changed the location of some comment blocks  hopefully doxygen will now document nested namespaces,2018,,
29e93da,added ability to check for the existance of the variable in an input file,2018,,
5abd279,Fixed a bug which prevented coarsening in the mean_stddev flagging routine.,2018,,
97ceeb8,improved the Parameters class,2018,,
ef7a4bb,removed the DataMap object  replaced with the Parameters class.  Simplified parameter handling in the EquationSystems class,2018,,
a33a616,removed extraneous fe_face,2018,,
19a5e15,fixed a bug which incorrectly warned that a DOF was constrained when in fact it was not,2018,,
476198b,Added long-overdue implementation of the rotate method  fixed typos.  Thanks  Martin.,2018,,
1b3f092,fixed TypeVector typos (thanks  Martin).  Provide access to the components of the physical-to-local coordinate transformation matrix in FEBase.  This is useful in computing the shock-capturing parameter of Tezduyar et al.,2018,,
884be74,renamed the LinearSolverInterface class LinearSolver  will shortly add NonlinearSolver.  The PETSc interface will support the PETSc matrix-free approach for solving nonlinear systems.,2018,,
29e8d3e,fix in MeshTools::Modification::distort thanks to Martin,2018,,
dbfe70d,support for solving nonlinear systems with PETSc in work,2018,,
206c2b9,put ierr where it belongs,2018,,
42a3155,initial nonlinear support in PETSc.  Interface still needs some work.,2018,,
1c340df,it would help to call SNESSolve,2018,,
3dc67a6,Compatibility changes for SNES in petsc-2.1.x  also need to link against -lpetscsnes in the Makefile.,2018,,
ab3966b,fix for PETSc 2.2.0,2018,,
009593c,added LinearImplicitSystem.  will be adding NonlinearImplicitSystem shortly,2018,,
6010f9c,Fixes for infinite elements.,2018,,
dbcf6a9,Made System::project_vector use L2 projection for non-Lagrange elements instead of giving up,2018,,
a3ab5c3,Added Clough-Tocher finite element family and quadrature rule  Made invalid quadrature rule enum a fixed value in case we ever want more binary compatibility between libMesh versions,2018,,
19a7822,Added --enable-second-derivatives configure option,2018,,
4061f8f,Changed partial ordering to strict ordering for TypeVector::operator<,2018,,
147642a,Added small tensor classes (for function hessians  primarily),2018,,
b04bd5d,Dependencies updated for new second derivatives code,2018,,
ccaa86e,Added Clough-Tocher macroelement and uniform grid quadrature rules,2018,,
717bed0,Added Clough-Tocher macroelement and uniform grid quadrature rules,2018,,
4e07fbe,Added optional support for second derivative calculations for fourth-order problems  including FE base calculations  shape function second derivatives in some FE derived classes  and shape function second derivative stub/warning functions in all other derived classes,2018,,
0b023b7,Added Clough-Tocher C1 triangular elements  C1 cubic 1D elements  and stubs for C1 3D elements.,2018,,
fbfd0b4,Added Biharmonic example problem,2018,,
2c99e9d,Make ex15 too,2018,,
b17af48,changed ImplicitSystem references to LinearImplicitSystem,2018,,
ba93710,prevent compiler warning message,2018,,
5f6e1b7,added .cvsigore,2018,,
37695d2,added documentation for ex15,2018,,
0fd68e6,"Fixed ""overwriting with zeros"" bug",2018,,
392306f,Added missing scalar * vector/tensor operators  tensor*tensor->scalar contraction function  made tensor a friend class to fix tensor*vector->vector multiplication,2018,,
9bdccef,added an if test in DEBUG mode to make the LAGRANGE dof constraint computations more clear,2018,,
5881eed,fixes for PETSc nonlinear systems with matrix-free solvers,2018,,
cd2bfd2,trivial changes for IBM xlC on lonestar,2018,,
09c875a,turn on second derivatives with --enable-everything,2018,,
a9b212c,Use the Side<> class as a proxy when building element sides.  This eliminates the need for allocating and deallocating connectivity storage arrays when building sides  thus making the Elem::build_side() member more efficient.  Note that this has not been implemented yet in the case of infinite elements  however it would be easy to add.  Assuming there are many more interior elements than infinite elements there is also probably little performance impact.,2018,,
85f905a,changed #include <foo.h> to #include <cfoo> where appropriate,2018,,
947cc1e,disable a tail-padding warning for ICC v8.1 on the Itanium,2018,,
b97201e,added ex15 to the examples,2018,,
1f6e8a4,gotta destroy the SNES  otherwise there is a memory leak!,2018,,
e712c21,added some latex documentation,2018,,
acedfda,added some latex documentation,2018,,
2851044,added a single function to compute both the Jacobian and residual to the nonlinear equation system,2018,,
9f279bd,code cleanup,2018,,
e6c0cb9,learning how to build RPMS,2018,,
4326048,Added a new option to the build_cube and build_square mesh generation routines which builds meshes graded into the boundary layers.  The inspiration comes from the Gauss- Lobatto grid points which are commonly used in spectral methods since the Chebyshev polynomials of arbitrary order reduce to cosine evaluations at the G-L points.  Tested in 2D and 3D.,2018,,
a6b4de3,documentation changes  minor optimizations in EquationSystems,2018,,
6ce6784,documentation changes  minor optimizations in EquationSystems,2018,,
b90c1a1,Added is_vertex  is_edge  is_face functions,2018,,
7f2d944,Added is_vertex  is_edge  is_face functions,2018,,
8a465c0,Added templated max()  min() inline functions,2018,,
c7783b5,fixed make distclean target  moved maxmin.h into include/utils,2018,,
f4831fa,Added include guards and license.,2018,,
5dbdf24,Copyright notice updated for 2005.,2018,,
702b12a,"Added ""extra_hanging_dofs"" characteristic to help enable non-Lagrange element hanging node support",2018,,
d776a16,Getting rid of overzealous gcc warnings when HAVE_MPI isn't defined,2018,,
f1c09a6,Starting on C1 compute_constraints,2018,,
874e8c7,Backtracked in-progress compute_constraints to be temporarily compatible with current interface... oops,2018,,
ec91f5d,"Picked more useful definition of ""vertex""  ""edge""  and ""face"" nodes for infinite elements",2018,,
c65d5b3,Fixed missing argument name bug... sorry,2018,,
d9cd8a8,Removing redundant functions,2018,,
f3f885e,fixed Hex27::is_face() to properly account for the center node (node 26),2018,,
5da1010,Added side_nodes_map[][] for infinite elements  is_node_on_side() function for all elements.,2018,,
fe58620,fixed meshtool,2018,,
7a89c45,DofMap now adds additional hanging node DOFs for finite element types which require it  compute_constraints now takes more useful arguments and is implemented for Clough elements.,2018,,
89eed7b,"Fixed ""looking up indices from first variable"" bug",2018,,
8d1a4b0,"Fixed ""get dof indices from first variable"" bug in compute_constraints",2018,,
2222658,Moved projection-based compute_constraints functions into FE base class  added compatibility with Hierarchic elements  fixed the bugs that revealed in the new DofMap functions,2018,,
4192d17,do not assert (_nodes != NULL) in some cases for edges and faces  this is perfectly valid now with the Side<> class.  also removed commented-out old implementation of Elem::tecplot_output and friends,2018,,
048a484,Changed float to double in DofConstraints  made DofConstraints a class instead of typedef.,2018,,
ac40f8b,Switched types to use new DofConstraints class,2018,,
d88b918,Don't panic in debug mode when dof_indices is called for a Lagrange side element,2018,,
1fe14c8,fixed a bug in the Tri6 implementation,2018,,
ac62102,fixed a double-deletion error in the BoundaryMesh,2018,,
e070e9a,updated for new doxygen,2018,,
6bb6ba3,added links to the howto & xda documentation,2018,,
14e056c,Changes for complex numbers.,2018,,
a4de34a,Updated function add_system.,2018,,
00a3aaf,oops  forgot to check this fix in!,2018,,
567c407,do not build Latex documentation by default  probably unreadable anyway.  more fixes for doxygen under Fedora,2018,,
7c158b2,Added the ability to attach a user-defined function to the Kelly error estimator.  This was needed to allow computation of the error in matching flux boundary conditions.  Also added the ability to refine only and coarsen only in the MeshRefinement object.  Some of this may break complex numbers support  Appy polly loggies in advance  me drogues.,2018,,
37a92bd,Added initialization for bc_function.,2018,,
859a235,allow for implicit DG DOFs via command-line switch,2018,,
de3124a,do not call MPI_Abort in the case of one processor  it removes the ability to perform a traceback!,2018,,
5a3a1ae,build a new SNES each solve to support matrix-free without leaking memory,2018,,
37e8b31,No need for complex constraint coefficients.,2018,,
9a003e0,initial support for deriving from Systems to implement user-provided functionality,2018,,
7ebfe50,Fixed unvio write method.,2018,,
48a1697,apparently 1.e-10 is too large for some applications.  Just needs to be a small positive number  but should not otherwise affect the error vector,2018,,
367576c,Project new user-defined vectors to the new mesh instead of zeroing them.,2018,,
a008db1,added MeshBase::level_elements_begin() etc...,2018,,
cca696f,Thanks to Martin. Extended unvio read/write method for 9-noded quadrilaterals.,2018,,
f39f162,made MeshRefinement methods return a parameter indicating whether or not the mesh actually changed,2018,,
64e2032,Removed all files associated with the old element and node iterators.,2018,,
12c0a46,Improvements to variant_filter_iterator.  Tested on several compilers including xlC  icc  and gcc 2.95.3 and later.  May not work on SUNPRO yet  based on past experience.  It is now possible to construct const_iterators from regular iterators in the same way that this technique is used in the STL.,2018,,
4269d6b,fixed a bug in tetrahedral 4th and 5th order Gauss rules.  Thanks  Luca,2018,,
6a81d68,removed stray here(),2018,,
a7c26c2,updated gmsh support from Martin.  Thanks.,2018,,
4011851,added pyramid.,2018,,
83febc8,Fixed LASPACK GMRES implementation for complex numbers. For details see contrib/laspack/CODE_CHANGES.,2018,,
a5fecc9,No need to reinit element shapes for first and second order elements.,2018,,
ce6ed4e,updated Gmsh support from Martin.,2018,,
619a702,Removed extraneous print statement.,2018,,
8e4bf25,Changes for complex.,2018,,
440e5a9,Changed ExactSolution to consider the EquationSystems parameters instead of just the time.,2018,,
d672caf,Used Martin's patch for some changes regarding the _mesh_data pointer.,2018,,
d63a7cb,Meshtool now Conforms to new StatisticsVector interface.,2018,,
436818b,Tried to reduce extensive use of friend classes in MeshData. Also modified example 7 which now uses an l-shaped mesh and corresponding mesh data.,2018,,
609e33c,Fixed logging in example 7.,2018,,
9d540c5,No need to project on unchanged elements,2018,,
222ff19,initial support for the pseudo-ExodusII files written by gridgen,2018,,
fdc70ee,trivial change  updated const iterators now that non-const to const conversion works,2018,,
57e8ee3,Added triangle to the contrib directory and the libmesh build system. Added initial header and source files to be expanded upon later.  We should probably distribute tetgen as well since it is only 1 file.,2018,,
b55fcf8,Oops  forgot to commit header file.,2018,,
f9affda,Oops  would help if there was a Makefile.,2018,,
00d0bc0,Added routine to delaunay triangulate a square.,2018,,
22326a6,Finally implemented the EigenSystem and an interface to the SLEPc eigen solvers. Also include an example ex16 to show how to use the new feature. SLEPc support makes only sense in combination with the corresponding PETSc version. Hence cofigure checks if both PETSc and SLEPc have the same version numbers. The Interface may only work for the latest SLEPc currently available (2.2.1).,2018,,
2608728,Fixed compiler errors if slepc is disabled.,2018,,
a2ec9d7,Fixes to the triangle interface for better memory management.,2018,,
6f2e5cb,Fixed tetgen interface to get rid of switch warnings.,2018,,
dd00afa,Changed the name of the gmv output files to enable AutoRead.,2018,,
cba3bef,"Changed active element definition to use RefinementFlag field Added ""subactive/active/ancestor"" element states Separated element coarsening from element ""contraction""",2018,,
7e02419,"After contracting an element it is no longer ""just coarsened""",2018,,
633573c,"Remove unnecessary ""element unchanged"" projection  Produce an error upon non-Lagrange coarsening  not bad data",2018,,
a1aeb88,Added FEContinuity enum  Added FEBase::get_continuity() for reporting it  Merged C0 and C1_constraints into proj_constraints using it.,2018,,
e87e589,added PETSc 2.3.x support,2018,,
b95827f,fixed missing return warning,2018,,
c8d6250,Fixes for when triangle is disabled.,2018,,
87f9cfe,Added default case to prevent unhandled cases warning.,2018,,
2565789,Removed unnecessary comments.,2018,,
7d8b7f4,Added Elem::is_node_on_edge,2018,,
e51ffca,OS X support,2018,,
18b83aa,added standard header,2018,,
c448247,OS X Compatibility,2018,,
ab63dc8,added FE<>::get_continuity() to fe_macro.h.  Changed debug compile flags to use -O0 with gcc  this provides a noticeable speedup in compile time under gcc4.  The resulting code  however  is noticeably slower.,2018,,
3276f53,moved MeshBase::contract() up to Mesh.  Unfortunately  there is no good way to make MeshBase::delete_elem() efficient  so the old implementation of MeshBase::contract() was (potentially) O(n_elem^2)  and consumed approximately 20 percent of the runtime in ex10.  This new implementation exploits the fact that the elements are stored in a vector (which is why it was moved up to the Mesh class) and is linear in the number of elements.  The new implementation is less that 1 percent of the run time in ex10.,2018,,
1511eba,Fixed triangle support on OS X.,2018,,
ccea24d,The _elements and _nodes std::vectors have been moved from MeshBase to Mesh at long last.  There are still several lingering design issues which will have to be addressed when additional Mesh subclasses are actually created.  MeshBase now contains a great deal of pure virtual functions which have to be reimplemented in derived classes.  I am certain not all of them will make sense for every subclass  so we will probably end up with another level of abstraction like UnstructuredMesh and then the actual Mesh class.  For now some additional clean-up is probably required  but the examples are running correctly.  I haven't compiled with enable-everything  but if you find something I will try to fix it.,2018,,
6315ad8,added virtual destructors where necessary in TetGenInterface,2018,,
d7b9585,Added Roy to the developers page.,2018,,
50a28ed,Removed inactive devs from photo page.,2018,,
93a15bf,Added new FE shape functions based on Bernstein polynomials. Similarly to the szabab elements the Bernstein shapes should only be available if higher order shapes are enabled.,2018,,
74cf922,accidently comitted unnecessary changes in ex16.,2018,,
3272fa6,Added dofs_on_edge function  FEInterface:: to dofs_on{side edge},2018,,
95a60c7,Replaced repetitive error specializations with macro,2018,,
6fd425c,moved some functions to MeshTool  reimplemented some stuff using the new iterators,2018,,
286ff7d,added *.dot,2018,,
c79f382,cannot hard-code -lstdc++  that is a gcc-specific lib.  Use ANSI prototypes in triangle to avoid warnings with icc v8.1 on the altix,2018,,
c0eb4c0,Added SideEdge proxy class,2018,,
12664ce,Added Elem::build_edge(),2018,,
8a452b3,Added edge_reinit and supporting functions,2018,,
19c0f85,allow for a user-defined MPI communicator instead of MPI_COMM_WORLD.  This allows libMesh to be run on a subset of processors inside a larger MPI job.  As a general rule a library should never use MPI_COMM_WORLD,2018,,
eed0e87,Added tetgen 1.3.3 to the contrib directory. Also merged the different TeGenWrapper levels.,2018,,
fbd5d27,Updating the configuration process.  Note that these changes should not have affected the current libmesh_config.h file yet  the plan is to slowly build up the libmesh_config_contrib.h file until it is ready to configure for all the contributed software  and then remove the contributed pound-defines from libmesh_config.h,2018,,
7e8c3f8,Added Elem::is_child_on_{edge side}() functions  Changed Mesh::find_neighbors to find subactive neighbors too (which are now used in is_child_on_side),2018,,
83f01c5,Added JUST_COARSENED case to System::project_vector,2018,,
956b538,copy and paste bug  changed triangle to tetgen.,2018,,
8659874,Perform linking of dyn. lib. step with C++ compiler.  Not sure if this makes any difference  though.,2018,,
7bad4fc,Oops  re-added a comment,2018,,
4b0282f,Perform dynamic linking step with C++ compiler.,2018,,
9228865,Added -lz to link line.  This may be needed on some Macs?,2018,,
bed63ac,Fixed potential Lagrange coarsening segfault,2018,,
ce0a861,Fixed subactive neighbor setting bug,2018,,
58ab780,removed assert(vertex_dofs)  since this is not appropriate for discontinuous elements with no vertex degrees of freedom,2018,,
d2fe101,adding MeshCommunication::distribute(),2018,,
acaf76a,removed deprecated PetscSetCommWorld,2018,,
c1d885d,removed deprecated PetscSetCommWorld,2018,,
72f3175,fixed an error in MeshCommunication::broadcast()  added some PerfLog calls,2018,,
c653afd,Moved old*_local_solution to System::add_vector() control,2018,,
54e4be5,Moved Mesh::contract() and refinement responsibility to System::reinit(),2018,,
32b6afb,Updated the publications page to add the work by Ondrej about Newmark Systems.,2018,,
536cc45,Fixes for many assorted segfaults and assertion errors. Non-Lagrange coarsening still fails  at least for C1 elements.,2018,,
3ae565e,Minor changes for complex numbers.,2018,,
3aa9782,Ups  some more changes for complex.,2018,,
0642fda,Make eliminate_unrefined_patches prevent the future creation (via coarsening) of new unrefined patches  and add tests to *{refine coarsen}_elements to make sure compatibility conditions are now satisfied after refinement or coarsening is done.,2018,,
23d122d,Added warning about not using laspack with ex8.,2018,,
db39d47,Don't try to compute_constraints() for non-active elements!,2018,,
5428ebe,Removed one of the redundant active() tests from previous bugfix.,2018,,
0086c99,renumber the elements in Mesh::contract(),2018,,
7f03da9,Added assert()s to make it easier to catch buffer overflows here,2018,,
28aeb5e,Test for multiple adjacent cells simultaneously coarsening  which will not create an unrefined patch,2018,,
03e20c1,Bugfixes for non-Lagrange coarsening  which might work now,2018,,
5d57141,Temporarily disabled extra eliminate_unrefined_patches asserts,2018,,
c70c572,Fixed some links.,2018,,
3b8b596,Ups.,2018,,
6bedce0,fix for elements with no nodal DOFs,2018,,
3b6f0c0,Move refinement/coarsening responsibility to EquationSystems. Non-Lagrange coarsening should now work with multiple Systems,2018,,
656fc9d,"Contract the mesh even on the ""backwards compatibility"" code path",2018,,
56b88b3,Prevent COARSEN_INACTIVE flagged parents from running around with non COARSEN flagged children,2018,,
d9c70c1,Reducing dependencies: sparse_matrix.h no longer includes dof_map.h,2018,,
73f8f01,Reducing dependencies.  Print functions are generally not fast anyway  inlining them leads to unnecessary dependencies and larger headers.  Removing print functions from headers.,2018,,
3c17288,Reducing dependencies: Removed iostream dependencies from the PerfLog header.,2018,,
752b056,Reducing dependencies: Removed <iostream> dependency from reference_counter.h,2018,,
28c6389,Reducing dependencies: Moved FE print functions to C file to remove dependence on iostream.,2018,,
c35925e,removed spurious print statements,2018,,
7961c52,fixed ex10 for parallel,2018,,
7cd7aac,go back to -O2 in dbg mode,2018,,
66a5949,trivial change for --disable-amr,2018,,
8f19309,reordered subclass definitions for IBM xlC,2018,,
7fbd987,submitted contributed patches for MeshCommunication::broadcast() and the Xdr class,2018,,
f694c55,More extensive performance logging of the Kelly Error Estimator.,2018,,
5197e24,This commit was manufactured by cvs2svn to create tag 'libmesh-0_5_0-rc1'.,2018,,
8d36bfa,Added laplacian jump error estimator for fourth order problems,2018,,
6f08ac9,Dependency changes  including the fourth_error_estimators.C addition and probably the dependency removals due to John's work.,2018,,
959489a,fix for when second derivatives are absent,2018,,
c8f8831,trivial change for DofMap::dof_indices to increase performance when there are no element-based DOFs,2018,,
fcef72e,Removed some out-of-date code comments.,2018,,
467b813,reworked some of DofMap::compute_sparsity() to increase performance.  Right now this is only implemented for the case when the user does not specify any DOF coupling  but the implementation is generic and will be adapted to that case as well.,2018,,
3b8b973,efficient sparsity pattern computation for the case when the user specifies the DOF coupling,2018,,
08c224d,Moved the setting of n_systems() on new elements to the Elem::refinement function itself.,2018,,
c4cd0f7,more optimization in compute_sparsity(),2018,,
913ddc6,preliminary support for devel mode,2018,,
bec699f,configuration improvements,2018,,
23b73fa,added *_devel,2018,,
82ab3b2,Reducing compiler dependencies: Changed several includes to forward declarations in dof_map.h.  This typically involves turning class member objects into class members which are pointers to objects.  It also sometimes involves dynamic memory allocation  but often the risk of leaks is reduced by proper use of constructors and destructors.,2018,,
6883805,Removing compiler dependencies for system.h.,2018,,
199d41a,moved memory deallocation to the DofMap::clear() member,2018,,
c2d4168,Moved delete to the clear() function.,2018,,
d4b0069,Oops  do not delete _dof_map in clear()  only in dtor!,2018,,
b2c3ce2,Added includes according to changes in class system.,2018,,
8ae5cde,Forward declare Mesh and Elem in equation_systems.h instead of #include. This greatly reduced header file inter-dependencies.  Also added the new deprecated() macro for marking code which will be removed in future versions  and deprecated some redundant parts of the EquationSystems interface.  As a result of removing the #include  most of the examples had to have elem.h #included directly.,2018,,
2b5aed6,1D support for linear and quadratic Lagrange elements  Adaptivity and finding neighbors support for 1D Generalization of side() to return AutoPtr<DofObject> rather than AutoPtr<Elem> Support for GNUPlot output in 1D Support for error estimation via Kelly indicator in 1D Some bug fixes added for allocation of zero-length arrays in dof_object.h  more needed! Changes to side() for all infinite element types to return AutoPtr<DofObject> Support for build_line in mesh_generation.C Added ex0 to test 1D code  ex4 updated to work in 1D.,2018,,
6e6cc51,Initialize devel-mode variable.,2018,,
9caf533,Adding missing header.,2018,,
2890f58,Removed deprecated EquationSystems call.,2018,,
4fd2204,pass MeshData object to the TetGenIO interface,2018,,
ea5f905,detailed reference counting only in DEBUG mode,2018,,
82827ba,Some changes for complex number support.,2018,,
8b0e843,Included dof_map.h.,2018,,
873bf23,Added const qualifier.,2018,,
2e433f3,Started using the side class for the infinite element build_side routines.,2018,,
edaa6d3,Fixed potential non-Lagrange coarsening segfault on mixed meshes,2018,,
db359a2,Fix for overzealous assert in dbg mode and efficiency improvement in opt mode  for elements with DoF-free non-vertex nodes (e.g. linear hierarchics on Quad9s),2018,,
f15d17a,Added local L2 projections from analytic solutions for generalized initial condition setting,2018,,
72f5c37,Reworked the build_side methods for infinite elements.,2018,,
171f578,This commit was manufactured by cvs2svn to create tag 'libmesh-0_5_0-rc2'.,2018,,
4c71abf,Weakened overzealous assert() statements,2018,,
77709d7,Changed gnuplot_io.C to use a std::map to form the data files. Also  made data filename depend on gnuplot script filename so that in time-dependent problems data won't be overwritten.,2018,,
dda046e,Fix to avoid incorrect caching on non-shapes-need-reinit elements,2018,,
fa0a998,Changes for complex.,2018,,
9487f20,This commit was manufactured by cvs2svn to create tag 'libmesh-0_5_0-rc3'.,2018,,
cfecd86,Fixed bug in gnuplot_io.C to allow correct plotting of multiple variables,2018,,
af83e1f,changed ex14 to handle Dirichlet BCs for non-Lagrange elements,2018,,
02ee6cf,made ex9 & ex10 more generic for non-Lagrange FEs.  Implementation thereof to follow.,2018,,
c801a7a,Added FEType::default_quadrature_rule(),2018,,
6198e8c,Now using default_quadrature_rule() for element-independent accurate integration,2018,,
91b9a0c,removed unused variables,2018,,
d64f65d,added ex0 documentation,2018,,
2170718,changed ex8 HAVE_PETSC test to work for different preprocessor semantics,2018,,
7bdfe9a,generic powerpc-* ignore rule.,2018,,
46db5b1,Compatibility fix for petsc 2.1.1,2018,,
f126ab7,explicitly #include <sstream>,2018,,
26718ec,fix for Cray C++,2018,,
ad4555c,fix for newer Intel Itanium compilers,2018,,
63cc8cd,fix for newer Intel Itanium compilers,2018,,
e54cc99,updated for gcc-3.2-based Altix,2018,,
7d9c360,Fixed Example 0 Makefile to link on Mac OS X 10.4  using GCC 4.0.0.,2018,,
cbe92bc,Stopped compilation of target printing to screen,2018,,
86a15cf,fixed meshtool to include additional headers,2018,,
672bf35,Fixed bug in plotting coarsened elements.,2018,,
ccb845d,Fixed bug in generating Gauss-Lobatto grid for EDGE4 elements.,2018,,
a15c8f0,"hold off on #include ""edge_edge4.h""",2018,,
9b8e9a4,This commit was manufactured by cvs2svn to create tag 'libmesh-0_5_0'.,2018,,
